<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>traefik on karl</title><link>https://karlquinsland.com/tags/traefik/</link><description>Recent content in traefik on karl</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 21 Jul 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://karlquinsland.com/tags/traefik/index.xml" rel="self" type="application/rss+xml"/><item><title>CAPP: Cloud Agnostic Proxy Protocol</title><link>https://karlquinsland.com/2020/07/capp-cloud-agnostic-proxy-protocol/</link><pubDate>Tue, 21 Jul 2020 00:00:00 +0000</pubDate><guid>https://karlquinsland.com/2020/07/capp-cloud-agnostic-proxy-protocol/</guid><description>&lt;p>It&amp;rsquo;s another &amp;ldquo;i made a thing!&amp;rdquo; post. ðŸ™ƒ&lt;/p>
&lt;hr>
&lt;p>I&amp;rsquo;m playing around with porting a few different applications over to k8. Some of them - like &lt;a href="https://github.com/kquinsland/skyhole/">skyhole&lt;/a> - rely on UDP packets which my hosted k8 provider of choice (read: cheapest! ðŸ’°) &lt;a href="https://ideas.digitalocean.com/ideas/DO-I-310">does not support&lt;/a>.&lt;/p>
&lt;p>The solution is either:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Keep track of all of the node IP addresses that have an exposed &lt;code>nodePort&lt;/code> and have the client connect directly to the cluster on the &lt;code>nodePort&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Set up some sort of intermediary to re-write the packet from the &lt;code>targetPort&lt;/code> &lt;strong>to&lt;/strong> the &lt;code>nodePort&lt;/code>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>Option 1 seems fragile; if a cluster host / node is recycled, the client needs to learn the new correct IP addresses.&lt;/p>
&lt;p>Option 2 seems far more flexible and is basically how most hosted k8 providers do ingress already. In fact, if digital ocean &lt;em>had&lt;/em> UDP support, this tool would never have been created. Bonus: clients that expect a specific port can still connect to the service no matter what &lt;code>nodePort&lt;/code> is used.&lt;/p>
&lt;p>So that&amp;rsquo;s what &lt;a href="https://github.com/kquinsland/cloud-agnostic-protocol-proxy">&lt;code>CAPP&lt;/code>&lt;/a> is: &lt;strong>C&lt;/strong>loud &lt;strong>A&lt;/strong>gnostic &lt;strong>P&lt;/strong>rotocol &lt;strong>P&lt;/strong>roxy.&lt;/p>
&lt;p>It&amp;rsquo;s a repo w/ a small python tool which can collect the IP addresses(s) belonging to each node in an arbitrary k8 cluster and - when combined with a small user config file - generate configuration files for &lt;code>traefik&lt;/code>.&lt;/p>
&lt;p>A &amp;lsquo;reference&amp;rsquo; packer job is included to generate a basic machine image to host traefik. A few lines of &lt;code>cloud_init&lt;/code> is all that&amp;rsquo;s needed to kick the tool off.&lt;/p></description></item></channel></rss>