<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>home-automation - Tag - karl</title><link>https://karlquinsland.com/tags/home-automation/</link><description>home-automation - Tag - karl</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 12 May 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://karlquinsland.com/tags/home-automation/" rel="self" type="application/rss+xml"/><item><title>Fixing Home Assistant discovery with Tasmota on the Treatlife DS03</title><link>https://karlquinsland.com/treatlife-ds03-tasmota-autoconfig-with-homeassistant/</link><pubDate>Wed, 12 May 2021 00:00:00 +0000</pubDate><author>Author</author><guid>https://karlquinsland.com/treatlife-ds03-tasmota-autoconfig-with-homeassistant/</guid><description><![CDATA[<p><strong>UPDATE:</strong> (2021-10-22): Tasmota 9.5.0 has been superseded by the new <a href="https://github.com/arendst/Tasmota/releases/tag/v10.0.0" target="_blank" rel="noopener noreffer">Tasmota 10.0.0 release</a>. This release works perfectly with the rules/automation outlined below; you no longer need to avoid the problematic 9.5 release with the DS03. I am extremely grateful to every one of the people that contributes to the Tasmota project to keep it improving!</p>
<p><del><strong>UPDATE:</strong> (2021-09-19): Multiple have gotten in touch with me seeking some support with this post. At present, there is a <a href="https://github.com/arendst/Tasmota/issues/12684#event-5035253885" target="_blank" rel="noopener noreffer">bug</a> with the Tasmota 9.5.0 release which breaks the automation outlined below. If you are having trouble getting the steps below to work <strong><em>either use Tasmota 9.4 or the latest development release of tasmota 9.5 if you&rsquo;re going to continue on with this post!</em></strong></del></p>
<hr>
<p>The Treatlife DS03 is one of only a few Tasmota compatible ceiling fan controllers available in the US. It&rsquo;s internal architecture splits the task of dimming the lights and switching the fan speed electronics from communicating over the network.</p>
<p>A very resource constrained ESP8266 module handles the network comms while a dedicated microcontroller running it&rsquo;s own software manages the user-facing buttons/indicator-lights as well as dimming the light and adjusting the fan speed. The two components communicate over a simple UART.</p>
<p>This is a totally reasonable way to build such a device, but for reasons that I don&rsquo;t fully understand, Tasmota does not publish a completely functional <a href="https://www.home-assistant.io/docs/mqtt/discovery/" target="_blank" rel="noopener noreffer">auto-configuration</a> payload for Home Assistant.</p>
<p>Home Assistant automatically discovers the full light/dimmer capabilities of the DS03, but for some reason does not see that the DS03 is capable of running a fan at 4 different speeds; Home Assistant only allows for turning the fan on/off.</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        The default auto-configuration leads Home Assistant to believe the fan can only be switched on/off.
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>The <a href="https://templates.blakadder.com/treatlife_DS03.html" target="_blank" rel="noopener noreffer">existing</a> guides on <a href="https://www.digiblur.com/2020/07/the-tasmota-fan-controller-ive-been.html" target="_blank" rel="noopener noreffer">how to flash the device</a> with Tasmota and integrate it with Home Assistant all work around this limitation by <em><em>manually</em></em> configuring Home Assistant to see the device as a multi-speed fan ðŸ¤¦.</p>
<p>I&rsquo;m not a huge fan of doing things manually, especially when there&rsquo;s a well documented and robust protocol designed to make manual configuration unnecessary! Why ignore the almost completely working auto-configuration in favor of manual configuration? Why not just fix the auto-config payload so Home Assistant exposes the full functionality of the device?</p>
<p>Both of the above guides were written long before <a href="https://www.home-assistant.io/blog/2021/03/03/release-20213/#fan-speeds-100" target="_blank" rel="noopener noreffer">Home Assistant gained support</a> for fans with more than 3 speeds so even if I were to configure Home Assistant with a copy their example YAML, I&rsquo;d <em>still</em> be missing the ability to control the 4th speed!</p>
<h2 id="how">How</h2>
<p>In short, Tasmota supports some basic scripting, called <a href="https://tasmota.github.io/docs/Rules/" target="_blank" rel="noopener noreffer">rules</a>. They work exactly as you&rsquo;re thinking: On <code>$someEvent</code> do <a href="https://tasmota.github.io/docs/Commands/" target="_blank" rel="noopener noreffer"><code>$someAction</code></a>. One of the actions allows the Tasmota device to publish a message to a MQTT topic. I&rsquo;m going to have the DS03 broadcast a <em>proper</em> auto-configuration message to Home Assistant.</p>
<p>The technique is basically the same one outlined in <a href="https://blakadder.com/pir-in-tasmota-integration/" target="_blank" rel="noopener noreffer">this</a> article, but I&rsquo;m posting this to document a few of the subtle differences in my approach.</p>
<p>I&rsquo;ll assume that you&rsquo;ve successfully flashed your DS03 with Tasmota and have already configured the module and issued the necessary <code>ledtable</code> commands. You will also need the native <a href="https://www.home-assistant.io/integrations/tasmota/" target="_blank" rel="noopener noreffer">Tasmota</a> integration installed.</p>
<p>If you&rsquo;re following either the blakadder or digiblur guides linked above, stop at the step where you&rsquo;re meant to configure <code>rule1</code>.</p>
<p>Issue a slightly modified rule:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">Rule1 on TuyaReceived#Data=55AA03070005030400010016 do publish2 stat/%topic%/speed 25 endon
    on TuyaReceived#Data=55AA03070005030400010117 do publish2 stat/%topic%/speed 50 endon
    on TuyaReceived#Data=55AA03070005030400010218 do publish2 stat/%topic%/speed 75 endon
    on TuyaReceived#Data=55AA03070005030400010319 do publish2 stat/%topic%/speed 100 endon
</code></pre></td></tr></table>
</div>
</div><p>This tells Tasmota to publish an integer speed (25,50,75,100) when it receives a specific packet from the dedicated MCU over th UART.</p>
<p>Then, issue a second rule to actually publish the configuration data:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">rule2 on SetOption19#Data=OFF do publish2 homeassistant/fan/%macaddr%/config {&#34;uniq_id&#34;:&#34;AABBCC&#34;,&#34;~&#34;:&#34;%topic%/POWER1&#34;,&#34;cmd_t&#34;:&#34;cmnd/~&#34;,&#34;pl_off&#34;:&#34;OFF&#34;,&#34;pl_on&#34;:&#34;ON&#34;,&#34;stat_t&#34;:&#34;stat/~&#34;,&#34;avty_t&#34;:&#34;tele/%topic%/LWT&#34;,&#34;pl_avail&#34;:&#34;Online&#34;,&#34;pl_not_avail&#34;:&#34;Offline&#34;,&#34;pct_cmd_t&#34;:&#34;cmnd/%topic%/tuyasend4&#34;,&#34;pct_cmd_tpl&#34;:&#34;{%set v=value|int%}{%if v&lt;=25%}3,0{%elif v&lt;=50%}3,1{%elif v&lt;=75%}3,2{%elif v&lt;=100%}3,3{%endif%}&#34;,&#34;pct_stat_t&#34;:&#34;stat/%topic%/speed&#34;,&#34;dev&#34;:{&#34;cns&#34;:[[&#34;mac&#34;,&#34;%macaddr%&#34;]]}} endon
</code></pre></td></tr></table>
</div>
</div><p><strong>Note:</strong> You&rsquo;ll probably want to modify the above payload so the occurrences of the placeholder string <code>AABBCC</code> are replaced with the last 6 characters of your own device&rsquo;s MAC address!</p>
<p>For readability, here&rsquo;s the unminified JSON:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="p">{</span>
  <span class="nt">&#34;uniq_id&#34;</span><span class="p">:</span> <span class="s2">&#34;AABBCC&#34;</span><span class="p">,</span>
  <span class="nt">&#34;~&#34;</span><span class="p">:</span><span class="s2">&#34;%topic%/POWER1&#34;</span><span class="p">,</span>
  <span class="nt">&#34;cmd_t&#34;</span><span class="p">:</span> <span class="s2">&#34;cmnd/~&#34;</span><span class="p">,</span>
  <span class="nt">&#34;pl_off&#34;</span><span class="p">:</span> <span class="s2">&#34;OFF&#34;</span><span class="p">,</span>
  <span class="nt">&#34;pl_on&#34;</span><span class="p">:</span> <span class="s2">&#34;ON&#34;</span><span class="p">,</span>
  <span class="nt">&#34;stat_t&#34;</span><span class="p">:</span> <span class="s2">&#34;stat/~&#34;</span><span class="p">,</span>
  <span class="nt">&#34;avty_t&#34;</span><span class="p">:</span> <span class="s2">&#34;tele/%topic%/LWT&#34;</span><span class="p">,</span>
  <span class="nt">&#34;pl_avail&#34;</span><span class="p">:</span> <span class="s2">&#34;Online&#34;</span><span class="p">,</span>
  <span class="nt">&#34;pl_not_avail&#34;</span><span class="p">:</span> <span class="s2">&#34;Offline&#34;</span><span class="p">,</span>
  <span class="nt">&#34;pct_cmd_t&#34;</span><span class="p">:</span> <span class="s2">&#34;cmnd/%topic%/tuyasend4&#34;</span><span class="p">,</span>
  <span class="nt">&#34;pct_cmd_tpl&#34;</span><span class="p">:</span> <span class="s2">&#34;{%set v=value|int%}{%if v&lt;=25%}3,0{%elif v&lt;=50%}3,1{%elif v&lt;=75%}3,2{%elif v&lt;=100%}3,3{%endif%}&#34;</span><span class="p">,</span>
  <span class="nt">&#34;pct_stat_t&#34;</span><span class="p">:</span> <span class="s2">&#34;stat/%topic%/speed&#34;</span><span class="p">,</span>
  <span class="nt">&#34;dev&#34;</span><span class="p">:</span> <span class="p">{</span>
    <span class="nt">&#34;cns&#34;</span><span class="p">:</span> <span class="p">[</span>
      <span class="p">[</span>
        <span class="s2">&#34;mac&#34;</span><span class="p">,</span>
        <span class="s2">&#34;%macaddr%&#34;</span>
      <span class="p">]</span>
    <span class="p">]</span>
  <span class="p">}</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p><strong>Note:</strong> The <code>dev</code> portion of the payload is the <a href="https://www.home-assistant.io/integrations/fan.mqtt/#device" target="_blank" rel="noopener noreffer">magic that convinces Home Assistant to combine the multiple entities under once device</a>. Without that portion of the document, you will still have a properly configured DS03, but it will exist as an &lsquo;orphaned&rsquo; entity that belongs to no device!</p>
<p>All that&rsquo;s left is to enable <code>rule2</code> and then trigger it:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">rule2 1
so19 0
</code></pre></td></tr></table>
</div>
</div><p>Altogether, It&rsquo;ll look something like this:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">18:23:54.140 CMD: Rule1 on TuyaReceived#Data=55AA03070005030400010016 do publish2 stat/%topic%/speed 25 endon on TuyaReceived#Data=55AA03070005030400010117 do publish2 stat/%topic%/speed 50 endon on TuyaReceived#Data=55AA03070005030400010218 do publish2 stat/%topic%/speed 75 endon on TuyaReceived#Data=55AA03070005030400010319 do publish2 stat/%topic%/speed 100 endon
18:23:54.149 RUL: Stored uncompressed, would compress from 344 to 98 (-72%)
18:23:54.155 MQT: stat/living_room_ceiling_fan/RESULT = {&#34;Rule1&#34;:{&#34;State&#34;:&#34;ON&#34;,&#34;Once&#34;:&#34;OFF&#34;,&#34;StopOnError&#34;:&#34;OFF&#34;,&#34;Length&#34;:344,&#34;Free&#34;:167,&#34;Rules&#34;:&#34;on TuyaReceived#Data=55AA03070005030400010016 do publish2 stat/%topic%/speed 25 endon on TuyaReceived#Data=55AA03070005030400010117 do publish2 stat/%topic%/speed 50 endon on TuyaReceived#Data=55AA03070005030400010218 do publish2 stat/%topic%/speed 75 endon on TuyaReceived#Data=55AA03070005030400010319 do publish2 stat/%topic%/speed 100 endon&#34;}}

18:24:05.061 CMD: rule2 on SetOption19#Data=OFF do publish2 homeassistant/fan/%macaddr%/config {&#34;uniq_id&#34;:&#34;AABBCC&#34;,&#34;~&#34;:&#34;%topic%/POWER1&#34;,&#34;cmd_t&#34;:&#34;cmnd/~&#34;,&#34;pl_off&#34;:&#34;OFF&#34;,&#34;pl_on&#34;:&#34;ON&#34;,&#34;stat_t&#34;:&#34;stat/~&#34;,&#34;avty_t&#34;:&#34;tele/%topic%/LWT&#34;,&#34;pl_avail&#34;:&#34;Online&#34;,&#34;pl_not_avail&#34;:&#34;Offline&#34;,&#34;pct_cmd_t&#34;:&#34;cmnd/%topic%/tuyasend4&#34;,&#34;pct_cmd_tpl&#34;:&#34;{%set v=value|int%}{%if v&lt;=25%}3,0{%elif v&lt;=50%}3,1{%elif v&lt;=75%}3,2{%elif v&lt;=100%}3,3{%endif%}&#34;,&#34;pct_stat_t&#34;:&#34;stat/%topic%/speed&#34;,&#34;dev&#34;:{&#34;cns&#34;:[[&#34;mac&#34;,&#34;%macaddr%&#34;]]}} endon
18:24:05.093 RUL: Stored uncompressed, would compress from 473 to 351 (-26%)
18:24:05.100 MQT: stat/living_room_ceiling_fan/RESULT = {&#34;Rule2&#34;:{&#34;State&#34;:&#34;OFF&#34;,&#34;Once&#34;:&#34;OFF&#34;,&#34;StopOnError&#34;:&#34;OFF&#34;,&#34;Length&#34;:473,&#34;Free&#34;:38,&#34;Rules&#34;:&#34;on SetOption19#Data=OFF do publish2 homeassistant/fan/%macaddr%/config {\&#34;uniq_id\&#34;:\&#34;AABBCC\&#34;,\&#34;~\&#34;:\&#34;%topic%/POWER1\&#34;,\&#34;cmd_t\&#34;:\&#34;cmnd/~\&#34;,\&#34;pl_off\&#34;:\&#34;OFF\&#34;,\&#34;pl_on\&#34;:\&#34;ON\&#34;,\&#34;stat_t\&#34;:\&#34;stat/~\&#34;,\&#34;avty_t\&#34;:\&#34;tele/%topic%/LWT\&#34;,\&#34;pl_avail\&#34;:\&#34;Online\&#34;,\&#34;pl_not_avail\&#34;:\&#34;Offline\&#34;,\&#34;pct_cmd_t\&#34;:\&#34;cmnd/%topic%/tuyasend4\&#34;,\&#34;pct_cmd_tpl\&#34;:\&#34;{%set v=value|int%}{%if v&lt;=25%}3,0{%elif v&lt;=50%}3,1{%elif v&lt;=75%}3,2{%elif v&lt;=100%}3,3{%endif%}\&#34;,\&#34;pct_stat_t\&#34;:\&#34;stat/%topic%/speed\&#34;,\&#34;dev\&#34;:{\&#34;cns\&#34;:[[\&#34;mac\&#34;,\&#34;%macaddr%\&#34;]]}} endon&#34;}}
18:24:07.494 CMD: rule2 1
18:24:07.503 MQT: stat/living_room_ceiling_fan/RESULT = {&#34;Rule2&#34;:{&#34;State&#34;:&#34;ON&#34;,&#34;Once&#34;:&#34;OFF&#34;,&#34;StopOnError&#34;:&#34;OFF&#34;,&#34;Length&#34;:473,&#34;Free&#34;:38,&#34;Rules&#34;:&#34;on SetOption19#Data=OFF do publish2 homeassistant/fan/%macaddr%/config {\&#34;uniq_id\&#34;:\&#34;AABBCC\&#34;,\&#34;~\&#34;:\&#34;%topic%/POWER1\&#34;,\&#34;cmd_t\&#34;:\&#34;cmnd/~\&#34;,\&#34;pl_off\&#34;:\&#34;OFF\&#34;,\&#34;pl_on\&#34;:\&#34;ON\&#34;,\&#34;stat_t\&#34;:\&#34;stat/~\&#34;,\&#34;avty_t\&#34;:\&#34;tele/%topic%/LWT\&#34;,\&#34;pl_avail\&#34;:\&#34;Online\&#34;,\&#34;pl_not_avail\&#34;:\&#34;Offline\&#34;,\&#34;pct_cmd_t\&#34;:\&#34;cmnd/%topic%/tuyasend4\&#34;,\&#34;pct_cmd_tpl\&#34;:\&#34;{%set v=value|int%}{%if v&lt;=25%}3,0{%elif v&lt;=50%}3,1{%elif v&lt;=75%}3,2{%elif v&lt;=100%}3,3{%endif%}\&#34;,\&#34;pct_stat_t\&#34;:\&#34;stat/%topic%/speed\&#34;,\&#34;dev\&#34;:{\&#34;cns\&#34;:[[\&#34;mac\&#34;,\&#34;%macaddr%\&#34;]]}} endon&#34;}}

18:24:10.362 CMD: so19 0
18:24:10.369 MQT: stat/living_room_ceiling_fan/RESULT = {&#34;SetOption19&#34;:&#34;OFF&#34;}
18:24:10.414 RUL: SETOPTION19#DATA=OFF performs &#34;publish2 homeassistant/fan/DDEEFFAABBCC/config {&#34;uniq_id&#34;:&#34;AABBCC&#34;,&#34;~&#34;:&#34;living_room_ceiling_...
18:24:10.421 MQT: home Assistant/fan/DDEEFFAABBCC/config = {&#34;uniq_id&#34;:&#34;AABBCC&#34;,&#34;~&#34;:&#34;living_room_ceiling_fan/POWER1&#34;,&#34;cmd_t&#34;:&#34;cmnd/~&#34;,&#34;pl_off&#34;:&#34;OFF&#34;,&#34;pl_on&#34;:&#34;ON&#34;,&#34;stat_t&#34;:&#34;stat/~&#34;,&#34;avty_t&#34;:&#34;tele/living_room_ceiling_fan/LWT&#34;,&#34;pl_avail&#34;:&#34;Online&#34;,&#34;pl_not_avail&#34;:&#34;Offline&#34;,&#34;pct_cmd_t&#34;:&#34;cmnd/living_room_ceiling_fan/tuyasend4&#34;,&#34;pct_cmd_tpl&#34;:&#34;{%set v=value|int%}{%if v&lt;=25%}3,0{%elif v&lt;=50%}3,1{%elif v&lt;=75%}3,2{%elif v&lt;=100%}3,3{%endif%}&#34;,&#34;pct_stat_t&#34;:&#34;stat/living_room_ceiling_fan/speed&#34;,&#34;dev&#34;:{&#34;cns&#34;:[[&#34;mac&#34;,&#34;DDEEFFAABBCC&#34;]]}} (retained)
18:24:10.509 LOG: Home Assistant MQTT Discovery disabled.
</code></pre></td></tr></table>
</div>
</div><p>If everything worked correctly, Home Assistant should now show a single device in the <a href="https://developers.home-assistant.io/docs/device_registry_index/" target="_blank" rel="noopener noreffer">device registry</a> with a dimmable light entity and a variable-speed fan entity!</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        The DS03 device entity after the variable speed configuration document is received by Home Assistant.
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p><strong>Note:</strong> Depending on weather or not Home Assistant has previously &lsquo;seen&rsquo; your DS03 via the native native <a href="https://www.home-assistant.io/integrations/tasmota/" target="_blank" rel="noopener noreffer">Tasmota</a> integration, you may see <em>three</em> entities on the device page; the light/dimmer, the switch/fan and the variable speed fan. Just disable the &lsquo;basic&rsquo; fan switch entity that Tasmota publishes as discussed below.</p>
<h4 id="updating-a-ds03-thats-already-integrated-with-home-assistant">Updating a DS03 that&rsquo;s already integrated with Home Assistant</h4>
<p>If you&rsquo;ve already got a DS03 that&rsquo;s integrated with Home Assistant, you can still get the device to properly auto-configure. Just remove the YAML configuration for both the light and fan entities.</p>
<p>You will likely need to restart HA to make sure all traces of the manual configurations are removed from the <a href="https://developers.home-assistant.io/docs/entity_registry_index/" target="_blank" rel="noopener noreffer">entity registry</a>.</p>
<p>Once Home Assistant has forgotten all about the manual entities and the native <a href="https://www.home-assistant.io/integrations/tasmota/" target="_blank" rel="noopener noreffer">Tasmota</a> integration in installed, all of the MQTT-connected Tasmota devices <em>should</em> get picked up and configured in Home Assistant. At this point, you should have the single device with two entities; dimmable light and binary-switch fan as shown in the first picture on this post.</p>
<p>If your DS03 was already configured with Home Assistant via the Tasmota integration, just disable the simple switch entity that Tasmota configures Home Assistant with:</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        Toggle &#39;Enable entity&#39; off to hide the basic binary switch that Tasmota configured Home Assistant with.
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>After disabling the switch/fan entity, trigger <code>rule2</code> again and refresh the device entity page in Home Assistant to confirm that the device now has a <code>MQTT Fan</code> entity if it wasn&rsquo;t there already.</p>
<p>Enjoy :)</p>
<h4 id="why-use-setoption19off-as-the-trigger">Why use <code>SetOption19:OFF</code> as the trigger?</h4>
<p>I run my MQTT broker on Kubernetes and do not have any persistance configured for that pod. This means that regardless of what retention settings a message was published with, every message on every topic is wiped out whenever the MQTT broker pod is rescheduled. As a result almost every device that Home Assistant monitors or controls via MQTT drifts into an <code>Unavailable</code> state whenever I do any maintenance on my K8s cluster.</p>
<p>I&rsquo;m not the <a href="https://community.home-assistant.io/t/tasmota-going-offline-at-random-times/116299" target="_blank" rel="noopener noreffer">only one</a> with <a href="https://community.home-assistant.io/t/sonoff-tasmota-started-regularly-showing-unavailable-on-home-assistant/90157/83" target="_blank" rel="noopener noreffer">this issue</a>, even if the cause is different.</p>
<p>To get around this, I have a small automation that pokes the Tasmota devices every hour and when Home Assistant starts up. Since the Home Assistant pod takes longer than the MQTT pod to initialize, having HA poke the devices on startup minimizes the time a given entity is <code>Unavailable</code> in HA.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="nt">alias</span><span class="p">:</span><span class="w"> </span><span class="l">Tasmotas Announce</span><span class="w">
</span><span class="w"></span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;Prevents devices from going Unavailable&#39;</span><span class="w">
</span><span class="w"></span><span class="nt">trigger</span><span class="p">:</span><span class="w">
</span><span class="w">  </span>- <span class="nt">platform</span><span class="p">:</span><span class="w"> </span><span class="l">home Assistant</span><span class="w">
</span><span class="w">    </span><span class="nt">event</span><span class="p">:</span><span class="w"> </span><span class="l">start</span><span class="w">
</span><span class="w">  </span>- <span class="nt">platform</span><span class="p">:</span><span class="w"> </span><span class="l">time_pattern</span><span class="w">
</span><span class="w">    </span><span class="nt">hours</span><span class="p">:</span><span class="w"> </span><span class="l">/1</span><span class="w">
</span><span class="w"></span><span class="nt">condition</span><span class="p">:</span><span class="w"> </span><span class="p">[]</span><span class="w">
</span><span class="w"></span><span class="nt">action</span><span class="p">:</span><span class="w">
</span><span class="w">  </span><span class="c"># For reasons that I don&#39;t understand, different tasmota devices seem to </span><span class="w">
</span><span class="w">  </span><span class="c">#     subscribe to a different group topic. cmnd/tas vs tas/cmnd</span><span class="w">
</span><span class="w">  </span><span class="c">##</span><span class="w">
</span><span class="w">  </span>- <span class="nt">service</span><span class="p">:</span><span class="w"> </span><span class="l">mqtt.publish</span><span class="w">
</span><span class="w">    </span><span class="nt">data</span><span class="p">:</span><span class="w">
</span><span class="w">      </span><span class="nt">topic</span><span class="p">:</span><span class="w"> </span><span class="l">cmnd/tasmotas/SetOption19</span><span class="w">
</span><span class="w">      </span><span class="nt">payload</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;0&#39;</span><span class="w">
</span><span class="w">  </span>- <span class="nt">service</span><span class="p">:</span><span class="w"> </span><span class="l">mqtt.publish</span><span class="w">
</span><span class="w">    </span><span class="nt">data</span><span class="p">:</span><span class="w">
</span><span class="w">      </span><span class="nt">topic</span><span class="p">:</span><span class="w"> </span><span class="l">tasmotas/cmnd/SetOption19</span><span class="w">
</span><span class="w">      </span><span class="nt">payload</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;0&#39;</span><span class="w">
</span><span class="w"></span><span class="nt">mode</span><span class="p">:</span><span class="w"> </span><span class="l">single</span><span class="w">
</span></code></pre></td></tr></table>
</div>
</div><p>You could probably work around this whole thing by changing the trigger for <code>rule2</code> to something like <code>on Mqtt#Connected publish2</code>. Or storing the configuration payload as a <a href="https://tasmota.github.io/docs/Rules/#rule-variables" target="_blank" rel="noopener noreffer">variable</a> so you could write multiple triggers for the same <code>publish2 %mem1%</code> action ðŸ¤”.</p>
<h3 id="side-note-rules-crash">Side note: Rules Crash!</h3>
<p>While developing the configuration payload, I was able to reliably crash the ESP8266 module causing Tasmota to reboot. The crash / reboot symptoms are pretty similar to those outlined <a href="https://tasmota.github.io/docs/Troubleshooting/#running-out-of-ram" target="_blank" rel="noopener noreffer">here</a> so I assume that even though the rules &ldquo;fit&rdquo;, something about how the rule was parsed or the actions the rule drove caused the ESP to run out of RAM.</p>
<p>When I say &ldquo;fit&rdquo; I mean that I&rsquo;d see lines like this in the console after configuring a test payload for <code>rule2</code>:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">MQT: stat/living_room_ceiling_fan/RESULT = {&#34;Rule2&#34;:{&#34;State&#34;:&#34;ON&#34;,...&#34;Free&#34;:9,&#34;Rules&#34;:&#34;on ... endon&#34;}}
</code></pre></td></tr></table>
</div>
</div><p>I could technically make the rule <code>9</code> characters longer and it&rsquo;d still fit&hellip; right?</p>
<p>Not quite. Looking at the result from issuing the <code>Rule1</code> command, it was clear that while <code>rule2</code> would have an absolute maximum length of 511 characters (<code>&quot;Length&quot;:344,&quot;Free&quot;:167</code>; 344+167=511) there was also a less well defined soft limit on rule length.</p>
<p>For some versions of my <code>rule2</code> payload, I was able to solve the crashing just by switching to the &lsquo;lite&rsquo; version of Tasmota. While the &lsquo;lite&rsquo; version of Tasmota does work with Tuya MCU (<code>USE_TUYA_MCU</code>), it <a href="https://github.com/arendst/Tasmota/blob/v9.4.0/BUILDS.md" target="_blank" rel="noopener noreffer">does <em>not</em> support</a> Home Assistant configuration (<code>USE_HOME_ASSISTANT</code>)!</p>
<p>After flashing back to the &lsquo;regular&rsquo; Tasmota build, I set out trying to compress the <code>rule2</code> payload as much as possible so that it would still work <em>and</em> not reliably crash the ESP8266 on the DS03.</p>
<p>After testing several things, I managed to get a working <code>rule2</code> that didn&rsquo;t reliably crash when triggered.</p>
]]></description></item><item><title>Two Tasmota rules</title><link>https://karlquinsland.com/two-tasmota-rules/</link><pubDate>Fri, 20 Nov 2020 00:00:00 +0000</pubDate><author>Author</author><guid>https://karlquinsland.com/two-tasmota-rules/</guid><description><![CDATA[<p><a href="https://tasmota.github.io/" target="_blank" rel="noopener noreffer">Tasmota</a> is an incredibly powerful alternative/open source firmware for the ever popular Espressif family of WiFi equipped microcontrollers.
This does not need to be another post espousing it&rsquo;s many awesome qualities, so just trust me on this; Tasmota is AWESOME.</p>
<p>Tasmota supports user configurable <a href="https://tasmota.github.io/docs/Rules/" target="_blank" rel="noopener noreffer">rules</a> which are simple commands wired into various device triggers.
In short; a device running Tasmota gains some autonomy to react to events without needing to report the event to, and wait for commands from, a remote server.</p>
<p>I find the rules syntax to be a bit awkward and the list of practical examples feels like autodoc with a few practical examples sprinkled in.
I have <em>never</em> been able to craft a Tasmota rule without also consulting the list of <a href="https://tasmota.github.io/docs/Commands/" target="_blank" rel="noopener noreffer">commands</a>
and doing a few searches through the github issues looking for issues/questions similar to mine.</p>
<p>This post is a simple &ldquo;here&rsquo;s how i did it&rdquo; that I wish I had found when I needed to solve the problem.
Hopefully this will save you some trouble!</p>
<h3 id="mr-coffee">Mr. Coffee</h3>
<p>A $15 &lsquo;<a href="https://tasmota.github.io/docs/devices/Sonoff-Pow/" target="_blank" rel="noopener noreffer">smart relay</a>&rsquo; is all that&rsquo;s needed to turn a simple drip-over coffee maker into a remote-controllable coffee maker.
Immediately, you gain the ability to start brewing coffee in the morning from bed.
With a little extra integration work, start brewing coffee 10 minutes before your alarm is scheduled to go off. Simple quality of life improvement!</p>
<p>Every coffee maker has at least one safety interlock to disable the heating element if it gets too hot, but some have additional interlocks. Specifically,
my coffee maker has two more interlocks in series with the heating element; if the carafe is removed or the water tank is empty, the circuit is broken and
the heater immediately stops producing heat. From the perspective of the smart relay, the power consumption is either 0 Watts or a bit over 1100 Watts.</p>
<p>I was not comfortable using Home Assistant to monitor power consumption and then toggle the relay off after observing an interlock kick in.
If something happened to the WiFi connection or the MQTT server or Home Assistant, there&rsquo;s no way to disconnect power from the coffee maker; the relay will stay &lsquo;on&rsquo;.
If the interlock failed, somehow, the heating element would immediately begin pumping out heat when it <em>really</em> shouldn&rsquo;t be!</p>
<p>Writing a simple &ldquo;if power consumption drops below 1100 Watts, turn relay off&rdquo; rule would be enough, except there&rsquo;s no way to distinguish between the thermal interlock tripping
and the carafe being removed for a quick pour. The simple rule is incompatible with the extra interlocks; it will prematurely stop the brewing 100% of the time the carafe is removed.
If you want to pour a cup of coffee while it&rsquo;s still brewing, this is rather inconvenient.</p>
<p>Solution: give the user 30 seconds to return the carafe during brewing before turning the relay off.</p>
<p>From the perspective of the outlet, ignore any lulls in power consumption as long as they&rsquo;re shorter than 30 seconds. Otherwise, assume that an interlock <em>has</em> tripped.</p>
<p>This is implemented with two rules:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">Rule1
    # When relay1 (heater) is turned on, activate rule2
    ON Power1#state=1 DO Rule2 1 ENDON

    # and deactivate rule2 when the heater is turned off
    ON Power1#state=0 DO Rule2 0 ENDON

    # When Timer1 expires, turn the heater off
    ON Rules#Timer=1 DO Power1 off ENDON

    # When the current used by the heating element rises above 1 Amp, disable Timer1
    ON Energy#Current&gt;1 DO RuleTimer1 0 ENDON

    # ... and enable rule 2
    ON Energy#Current&gt;1 DO Rule2 1 ENDON

Rule2
    # Wait for power use to drop to 0; start counting down
    ON Energy#Current&lt;.2 DO RuleTimer1 30 ENDON

    # and disable rule2 so the timer is not constantly reset
    ON Energy#Current&lt;.2 DO Rule2 0 ENDON
</code></pre></td></tr></table>
</div>
</div><p>I chose <code>.2</code> Amps as the trigger, but the logic works the exact same way with Power / Wattage.</p>
<h2 id="electric-kettle">Electric Kettle</h2>
<p>I wanted to detect when my electric kettle was done boiling the water so I could play a sound and flash the lights in whichever room I happened to be in at the time.
This is trivial to do with a &lsquo;<a href="https://tasmota.github.io/docs/devices/Sonoff-S31/" target="_blank" rel="noopener noreffer">smart outlet</a>&rsquo; and a <a href="https://www.home-assistant.io/integrations/binary_sensor.template/" target="_blank" rel="noopener noreffer">template sensor</a> in Home Assistant:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml">- <span class="nt">platform</span><span class="p">:</span><span class="w"> </span><span class="l">template</span><span class="w">
</span><span class="w">  </span><span class="nt">sensors</span><span class="p">:</span><span class="w">
</span><span class="w">    </span><span class="nt">kettle_running</span><span class="p">:</span><span class="w">
</span><span class="w">      </span><span class="nt">friendly_name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;Kettle Boiling&#34;</span><span class="w">
</span><span class="w">      </span><span class="c"># If the kettle is using more than 5w, assume its on / boiling water</span><span class="w">
</span><span class="w">      </span><span class="nt">icon_template</span><span class="p">:</span><span class="w"> </span><span class="p">&gt;-</span><span class="sd">
</span><span class="sd">        {% if states(&#39;sensor.kettle_energy_power&#39;) | float &gt; 5 %}
</span><span class="sd">          mdi:kettle-steam
</span><span class="sd">        {% else %}
</span><span class="sd">          mdi:kettle
</span><span class="sd">        {% endif %}</span><span class="w">        
</span><span class="w">      </span><span class="nt">value_template</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{states(&#39;sensor.kettle_energy_power&#39;) | float &gt; 5}}&#34;</span><span class="w">
</span></code></pre></td></tr></table>
</div>
</div><p>Only problem, Tasmota only publishes the kettle&rsquo;s power once every 300 seconds. This means <code>sensor.kettle_energy_power</code> only gets updated every 300s which makes it really hard
to fire off a <em>timely</em> notification when the kettle is done.
The &lsquo;brute-force&rsquo; solution is to configure Tasmota to transmit the telemetry <a href="https://github.com/arendst/Tasmota/issues/2567" target="_blank" rel="noopener noreffer">continuously</a>.
Except there&rsquo;s no need for the Tasmota device on the kettle to be constantly informing Home Assistant that there&rsquo;s no power being used whenever the kettle is not on; my application only cares about the &lsquo;<a href="https://en.wikipedia.org/wiki/Signal_edge" target="_blank" rel="noopener noreffer">falling edge</a>&rsquo;.</p>
<p>Borrow the trigger from the <a href="#mr-coffee" rel="">Mr. Coffee</a> rule and shorten the <a href="https://tasmota.github.io/docs/Commands/#teleperiod" target="_blank" rel="noopener noreffer">telemetry period</a> only when the kettle
is consuming more than 1 Watt. Like the coffee maker, it&rsquo;s either consuming 0 Watts or about 1.1 Kilowatt.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">Rule1
    on ENERGY#Power&gt;1 do Backlog TelePeriod 10; Rule2 1 endon

Rule2
    on ENERGY#Power=0 do Backlog TelePeriod 1; Rule2 0 endon
</code></pre></td></tr></table>
</div>
</div><p>As soon as the kettle starts using more than 1 Watt, configure Tasmota to publish its sensor data every 10 seconds.
I&rsquo;ll get notified that the water is boiling within 10s; much better than 300s!
Once the power consumption goes back down to 0, reset the telemetry update period and disable the rule.</p>
<p>The second rule must be disabled to prevent constant triggering of the rule when the kettle is not boiling.
Without the <code>Rule2 0</code>, the console/logs for the device would be full of statements like this repeating every few seconds:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">RUL: ENERGY#POWER&gt;1 performs &#34;TelePeriod 10&#34;
MQT: stat/tasmota_kettle/RESULT = {&#34;TelePeriod&#34;:10}
</code></pre></td></tr></table>
</div>
</div><p>Hope that helped!</p>
<hr>
<p><strong>EDIT:</strong> 2021-09-24: small typo fixes. Thanks for pointing them out :).</p>
]]></description></item><item><title>PoE at a distance caused terrible cat5 speeds</title><link>https://karlquinsland.com/poe-at-a-distance-ruined-my-cat5-speeds/</link><pubDate>Wed, 01 Jul 2020 00:00:00 +0000</pubDate><author>Author</author><guid>https://karlquinsland.com/poe-at-a-distance-ruined-my-cat5-speeds/</guid><description><![CDATA[<p>This is a quick post for made in the hopes that some poor soul in the future will find it and save themselves some time.</p>
<h2 id="background">Background</h2>
<p>I&rsquo;ve been experimenting with a few different ways to surface various home automation controls in the appropriate place and at a good time. One prototype host is deployed behind a small LCD under some cabinets in a high traffic area. This host is a raspberry pi 4 with a <a href="https://www.raspberrypi.org/products/poe-hat/" target="_blank" rel="noopener noreffer">PoE hat</a>. It boots a very stripped down version of <a href="https://www.raspberrypi.org/downloads/raspberry-pi-os/" target="_blank" rel="noopener noreffer">Raspberry Pi OS</a> into a web browser running in Kiosk mode.</p>
<p>It&rsquo;s pretty simple and does many things well. There&rsquo;s a few small issues that need to be addressed in the CAD files as well as some additional electronic improvements that should be made before I can publish the design / files.</p>
<p>In any event, this host has been trouble-free until recently. Simple <code>apt update</code> transfers would take <strong>DAYS</strong> to complete, simple <code>scp</code> operations to other hosts on the LAN would trickle by at tens of kB/s. The web app that the host is primarily responsible for displaying would time out or fail to completely load resulting in some &ldquo;a-for-effort&rdquo; <a href="https://www.mavenecommerce.com/2017/10/31/progressive-enhancement-vs-graceful-degradation/" target="_blank" rel="noopener noreffer">graceful degradation</a>.</p>
<h2 id="the-facts">The Facts</h2>
<p>As soon as I bring up the <code>wlan0</code> interface and bring down the <code>eth0</code> interface performance is IMMEDIATELY restored. The web app is responsive and fully loads instantly, <code>scp</code> is fast like it should be on a LAN and <code>apt update</code> completes without any errors as fast as my internet connection will let it!</p>
<p><strong>Conclusion</strong>: The problem is <em>not</em> network related. Both the <code>eth0</code> and <code>wlan0</code> interface are on the same <code>vLan</code> so the bizarre behavior is not likely caused by a QoS policy or firewall rule.</p>
<p>The rPi and a few other hosts a powered via a a <a href="https://shop.poetexas.com/products/at-4-48v120w/" target="_blank" rel="noopener noreffer">120 watt</a> which is in the same closet as my core switch. Two terminations and about 200 feet of cat5 cable later, you get to the rPi host on the other side of the house.</p>
<p>Continuity tester was used on every segment of the link to confirm the link is good. The segments of the link from the switch to the injector and to the patch-panel all use high quality pre-made cables, as does the final segment from the wall to the rPi. Shocker, they tested fine, just like the in-wall segment.</p>
<p>Additionally, no other host on the PoE injector is misbehaving. No other host on the PoE injector is indicating that there&rsquo;s not enough power, and the power supply feeding the injector isn&rsquo;t even warm.</p>
<p><strong>Conclusion</strong>: The cables are certainly fine and the PoE injector is <em>probably fine</em>.</p>
<p>Next, I disabled the PoE injector all together and use the USBC port on the rPi for power. It was just as performant as with WiFi! I did not expect this result, but it did certainly narrow down the possible problem areas.</p>
<p><strong>Conclusion</strong>: The problem is only present when the host is powered via PoE.</p>
<p>I was very confident that the PoE injector was not the problem, but in order to be certain, I used a second cheap PoE injector that lives on my bench power supply. Turns out, the same slow speeds manifested with the second injector, too.</p>
<p><strong>Conclusion</strong>: The problem is not in the network, nor is it in the cables, nor is it in the injectors.</p>
<p>This only leaves one candidate: the host. Unfortunately, there&rsquo;s nothing about the host that screams &ldquo;i&rsquo;m the problem!&rdquo;. The microSD card is new and very fast. There&rsquo;s nothing in the logs indicating a hardware failure. On-device performance (via non-networking benchmarks) is inline with what i&rsquo;d expect.</p>
<p>Here&rsquo;s two additional facts from some brief testing I did a few weeks ago. I had more or less forgotten about them and only really remembered that:</p>
<ul>
<li>
<p>When I tried a fresh install of Ubuntu on a fresh microSD card&hellip; same slow speeds.</p>
</li>
<li>
<p>The host performs <em>perfectly</em> when plugged into other networks.</p>
</li>
</ul>
<p>I was <em>confident</em> then, that the rPi was not the issue and that something about the network was. But I just spent 3 hours systematically testing out every component of the network and concluding that the network is fine!</p>
<p><strong>Conclusion</strong>: I&rsquo;m back where I started; angry and confused.</p>
<p>The &ldquo;ah ha!&rdquo; moment didn&rsquo;t come until i decided to try my second PoE injector <em>at the client</em>. Much to my surprise, <strong>it worked!</strong>.</p>
<p>After a bit more testing, I determined that the PoE HAT on the rPi is &lsquo;fine&rsquo; when the PoE source is CLOSE&hellip; which probably explains the &lsquo;works fine on other networks&rsquo; fact above.</p>
<p>That leaves just the &lsquo;problem is OS independent&rsquo; fact which - after thoroughly vetting every part of the network and PoE system - makes it pretty obvious that the problem must be between the rPi and the cat5 cable coming from the wall. There&rsquo;s <em>only</em> the PoE HAT between the rPi and the cat5 cable coming from the wall. I borrowed a PoE HAT from another host elsewhere on the network and the problematic rPi started behaving again. Network transfer speeds were appropriate and the web app / dashboard was performant again!</p>
<p><strong>Conclusion</strong>: the PoE HAT powering a home automation dashboard has failed in such a way that makes the <code>eth0</code> interface all but useless. replacing the HAT solved the problem.</p>
<h2 id="tldr">TL;DR:</h2>
<p>Several months ago, the home automation dashboard displayed on a PoE powered rPi 4 started to act up. Further investigation showed absolute crap network performance from the host to any other point on the LAN or WAN. After testing each component in isolation, the PoE HAT was the only reaming suspect. After further investigation, the failure mode is <em>not present</em> when the PoE source is <em>close</em> to the client, only when the source is far from the client.</p>
<p>So if you have a PoE powered rPi project out there w/ abysmal <code>eth0</code> performance, try replacing the PoE hat&hellip;</p>
<p>Also, if anybody knows <em>why</em> this happened, I&rsquo;d love to know.</p>
]]></description></item></channel></rss>