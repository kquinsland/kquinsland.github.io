<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>home assistant - Tag - karl</title><link>https://karlquinsland.com/tags/home-assistant/</link><description>home assistant - Tag - karl</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 21 Jan 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://karlquinsland.com/tags/home-assistant/" rel="self" type="application/rss+xml"/><item><title>Integrating a dumb coffee maker with Home Assistant via ESPHome</title><link>https://karlquinsland.com/improved-esphome-coffee-automation/</link><pubDate>Sat, 21 Jan 2023 00:00:00 +0000</pubDate><author>Author</author><guid>https://karlquinsland.com/improved-esphome-coffee-automation/</guid><description><![CDATA[<!-- markdownlint-disable-file MD002 -->
<p>My beloved coffee maker of 10 years has finally died 😢.
Parts are no longer available from either the manufacturer or the second-hand market.</p>
<p>Taking advantage of a (slight) holiday sale discount, I pulled the trigger on a coffee maker that&rsquo;s <a href="https://us.moccamaster.com/pages/sustainability-at-our-core" target="_blank" rel="noopener noreffer">designed to be repairable forever</a>.
The perpetual serviceability is a side effect of an ultra-simple design; this coffee maker has <em>zero</em> intelligent features which means there&rsquo;s next to no remote control or customizability.</p>
<h2 id="adding-home-assistant-integration">Adding Home Assistant integration</h2>
<p>Fortunately, we can add a decent amount of control with a basic smart outlet.
Naturally, I went with the amazing Sonoff S31 but you can get similar results with <em>any</em> ESPHome compatible device so long as you have a way to control power to the coffee maker and to monitor the power used by the coffee maker.</p>
<p>This borrows a technique that I first wrote about in <a href="/esphome-dynamic-timer/" rel=""><code>Dynamic timers in ESPHome</code></a> and tweaks it a bit to add of coffee-specific automations:</p>
<ul>
<li>Run the boiler for a moment, then pause. This is to let the <a href="https://www.homegrounds.co/coffee-bloom/" target="_blank" rel="noopener noreffer">coffee bloom</a>.</li>
<li>Turn relay off automatically after a period of no power use. This is done locally for safety and to save me the hassle of putting a template &ldquo;is coffee brewing&rdquo; sensor in home assistant. I still report energy data to home assistant for statistical purposes but don&rsquo;t use the data for automations.</li>
</ul>
<p>Here&rsquo;s what that looks like:</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        S31 powered coffee maker in Home Assistant. Note that the bloom settings can be adjusted on the fly.
        
            
        
        </p> 
    </figcaption>
    
</figure>


<h3 id="esphome">ESPHome</h3>
<p>Below is a simplified ESPHome configuration file that resembles what I use &ldquo;in production&rdquo;.
As is, you&rsquo;ll need to fill it out / add in your own versions of some of the unique-to-me details intentionally omitted; these will be the device/component <code>id:</code> values, mostly.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">  1
</span><span class="lnt">  2
</span><span class="lnt">  3
</span><span class="lnt">  4
</span><span class="lnt">  5
</span><span class="lnt">  6
</span><span class="lnt">  7
</span><span class="lnt">  8
</span><span class="lnt">  9
</span><span class="lnt"> 10
</span><span class="lnt"> 11
</span><span class="lnt"> 12
</span><span class="lnt"> 13
</span><span class="lnt"> 14
</span><span class="lnt"> 15
</span><span class="lnt"> 16
</span><span class="lnt"> 17
</span><span class="lnt"> 18
</span><span class="lnt"> 19
</span><span class="lnt"> 20
</span><span class="lnt"> 21
</span><span class="lnt"> 22
</span><span class="lnt"> 23
</span><span class="lnt"> 24
</span><span class="lnt"> 25
</span><span class="lnt"> 26
</span><span class="lnt"> 27
</span><span class="lnt"> 28
</span><span class="lnt"> 29
</span><span class="lnt"> 30
</span><span class="lnt"> 31
</span><span class="lnt"> 32
</span><span class="lnt"> 33
</span><span class="lnt"> 34
</span><span class="lnt"> 35
</span><span class="lnt"> 36
</span><span class="lnt"> 37
</span><span class="lnt"> 38
</span><span class="lnt"> 39
</span><span class="lnt"> 40
</span><span class="lnt"> 41
</span><span class="lnt"> 42
</span><span class="lnt"> 43
</span><span class="lnt"> 44
</span><span class="lnt"> 45
</span><span class="lnt"> 46
</span><span class="lnt"> 47
</span><span class="lnt"> 48
</span><span class="lnt"> 49
</span><span class="lnt"> 50
</span><span class="lnt"> 51
</span><span class="lnt"> 52
</span><span class="lnt"> 53
</span><span class="lnt"> 54
</span><span class="lnt"> 55
</span><span class="lnt"> 56
</span><span class="lnt"> 57
</span><span class="lnt"> 58
</span><span class="lnt"> 59
</span><span class="lnt"> 60
</span><span class="lnt"> 61
</span><span class="lnt"> 62
</span><span class="lnt"> 63
</span><span class="lnt"> 64
</span><span class="lnt"> 65
</span><span class="lnt"> 66
</span><span class="lnt"> 67
</span><span class="lnt"> 68
</span><span class="lnt"> 69
</span><span class="lnt"> 70
</span><span class="lnt"> 71
</span><span class="lnt"> 72
</span><span class="lnt"> 73
</span><span class="lnt"> 74
</span><span class="lnt"> 75
</span><span class="lnt"> 76
</span><span class="lnt"> 77
</span><span class="lnt"> 78
</span><span class="lnt"> 79
</span><span class="lnt"> 80
</span><span class="lnt"> 81
</span><span class="lnt"> 82
</span><span class="lnt"> 83
</span><span class="lnt"> 84
</span><span class="lnt"> 85
</span><span class="lnt"> 86
</span><span class="lnt"> 87
</span><span class="lnt"> 88
</span><span class="lnt"> 89
</span><span class="lnt"> 90
</span><span class="lnt"> 91
</span><span class="lnt"> 92
</span><span class="lnt"> 93
</span><span class="lnt"> 94
</span><span class="lnt"> 95
</span><span class="lnt"> 96
</span><span class="lnt"> 97
</span><span class="lnt"> 98
</span><span class="lnt"> 99
</span><span class="lnt">100
</span><span class="lnt">101
</span><span class="lnt">102
</span><span class="lnt">103
</span><span class="lnt">104
</span><span class="lnt">105
</span><span class="lnt">106
</span><span class="lnt">107
</span><span class="lnt">108
</span><span class="lnt">109
</span><span class="lnt">110
</span><span class="lnt">111
</span><span class="lnt">112
</span><span class="lnt">113
</span><span class="lnt">114
</span><span class="lnt">115
</span><span class="lnt">116
</span><span class="lnt">117
</span><span class="lnt">118
</span><span class="lnt">119
</span><span class="lnt">120
</span><span class="lnt">121
</span><span class="lnt">122
</span><span class="lnt">123
</span><span class="lnt">124
</span><span class="lnt">125
</span><span class="lnt">126
</span><span class="lnt">127
</span><span class="lnt">128
</span><span class="lnt">129
</span><span class="lnt">130
</span><span class="lnt">131
</span><span class="lnt">132
</span><span class="lnt">133
</span><span class="lnt">134
</span><span class="lnt">135
</span><span class="lnt">136
</span><span class="lnt">137
</span><span class="lnt">138
</span><span class="lnt">139
</span><span class="lnt">140
</span><span class="lnt">141
</span><span class="lnt">142
</span><span class="lnt">143
</span><span class="lnt">144
</span><span class="lnt">145
</span><span class="lnt">146
</span><span class="lnt">147
</span><span class="lnt">148
</span><span class="lnt">149
</span><span class="lnt">150
</span><span class="lnt">151
</span><span class="lnt">152
</span><span class="lnt">153
</span><span class="lnt">154
</span><span class="lnt">155
</span><span class="lnt">156
</span><span class="lnt">157
</span><span class="lnt">158
</span><span class="lnt">159
</span><span class="lnt">160
</span><span class="lnt">161
</span><span class="lnt">162
</span><span class="lnt">163
</span><span class="lnt">164
</span><span class="lnt">165
</span><span class="lnt">166
</span><span class="lnt">167
</span><span class="lnt">168
</span><span class="lnt">169
</span><span class="lnt">170
</span><span class="lnt">171
</span><span class="lnt">172
</span><span class="lnt">173
</span><span class="lnt">174
</span><span class="lnt">175
</span><span class="lnt">176
</span><span class="lnt">177
</span><span class="lnt">178
</span><span class="lnt">179
</span><span class="lnt">180
</span><span class="lnt">181
</span><span class="lnt">182
</span><span class="lnt">183
</span><span class="lnt">184
</span><span class="lnt">185
</span><span class="lnt">186
</span><span class="lnt">187
</span><span class="lnt">188
</span><span class="lnt">189
</span><span class="lnt">190
</span><span class="lnt">191
</span><span class="lnt">192
</span><span class="lnt">193
</span><span class="lnt">194
</span><span class="lnt">195
</span><span class="lnt">196
</span><span class="lnt">197
</span><span class="lnt">198
</span><span class="lnt">199
</span><span class="lnt">200
</span><span class="lnt">201
</span><span class="lnt">202
</span><span class="lnt">203
</span><span class="lnt">204
</span><span class="lnt">205
</span><span class="lnt">206
</span><span class="lnt">207
</span><span class="lnt">208
</span><span class="lnt">209
</span><span class="lnt">210
</span><span class="lnt">211
</span><span class="lnt">212
</span><span class="lnt">213
</span><span class="lnt">214
</span><span class="lnt">215
</span><span class="lnt">216
</span><span class="lnt">217
</span><span class="lnt">218
</span><span class="lnt">219
</span><span class="lnt">220
</span><span class="lnt">221
</span><span class="lnt">222
</span><span class="lnt">223
</span><span class="lnt">224
</span><span class="lnt">225
</span><span class="lnt">226
</span><span class="lnt">227
</span><span class="lnt">228
</span><span class="lnt">229
</span><span class="lnt">230
</span><span class="lnt">231
</span><span class="lnt">232
</span><span class="lnt">233
</span><span class="lnt">234
</span><span class="lnt">235
</span><span class="lnt">236
</span><span class="lnt">237
</span><span class="lnt">238
</span><span class="lnt">239
</span><span class="lnt">240
</span><span class="lnt">241
</span><span class="lnt">242
</span><span class="lnt">243
</span><span class="lnt">244
</span><span class="lnt">245
</span><span class="lnt">246
</span><span class="lnt">247
</span><span class="lnt">248
</span><span class="lnt">249
</span><span class="lnt">250
</span><span class="lnt">251
</span><span class="lnt">252
</span><span class="lnt">253
</span><span class="lnt">254
</span><span class="lnt">255
</span><span class="lnt">256
</span><span class="lnt">257
</span><span class="lnt">258
</span><span class="lnt">259
</span><span class="lnt">260
</span><span class="lnt">261
</span><span class="lnt">262
</span><span class="lnt">263
</span><span class="lnt">264
</span><span class="lnt">265
</span><span class="lnt">266
</span><span class="lnt">267
</span><span class="lnt">268
</span><span class="lnt">269
</span><span class="lnt">270
</span><span class="lnt">271
</span><span class="lnt">272
</span><span class="lnt">273
</span><span class="lnt">274
</span><span class="lnt">275
</span><span class="lnt">276
</span><span class="lnt">277
</span><span class="lnt">278
</span><span class="lnt">279
</span><span class="lnt">280
</span><span class="lnt">281
</span><span class="lnt">282
</span><span class="lnt">283
</span><span class="lnt">284
</span><span class="lnt">285
</span><span class="lnt">286
</span><span class="lnt">287
</span><span class="lnt">288
</span><span class="lnt">289
</span><span class="lnt">290
</span><span class="lnt">291
</span><span class="lnt">292
</span><span class="lnt">293
</span><span class="lnt">294
</span><span class="lnt">295
</span><span class="lnt">296
</span><span class="lnt">297
</span><span class="lnt">298
</span><span class="lnt">299
</span><span class="lnt">300
</span><span class="lnt">301
</span><span class="lnt">302
</span><span class="lnt">303
</span><span class="lnt">304
</span><span class="lnt">305
</span><span class="lnt">306
</span><span class="lnt">307
</span><span class="lnt">308
</span><span class="lnt">309
</span><span class="lnt">310
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">substitutions</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">friendly_name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;Mr. Coffee&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">friendly_name_short</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;Coffee&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">esphome</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">${hostname}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">esp8266</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">board</span><span class="p">:</span><span class="w"> </span><span class="l">esp01_1m</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">restore_from_flash</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">packages</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># &lt;...&gt;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># Has ID: out_relay_1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">output</span><span class="p">:</span><span class="w"> </span>!<span class="l">include ../../packages/sonoff_s31_outlet/output_relay.yaml</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">globals</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># Does the button toggle the relay</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="l">glbl_relay_latched</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">bool</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">restore_value</span><span class="p">:</span><span class="w"> </span><span class="kc">no</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">initial_value</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;true&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c">##</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># Bloom settings</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c">##</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># How long do we run the heater for?</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># The time from power on to first water in basket depends on water temperature.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># The cooler the water, the longer it&#39;ll be.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># For now, the intent is to use other sensors to estimate the water temp and have HA</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c">#   update the configuration before starting a brew.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c">#</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># Maybe in a future version, outfit with water level/temp probe directly.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c">##</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="l">glbl_pre_bloom_time_sec</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">int</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">restore_value</span><span class="p">:</span><span class="w"> </span><span class="kc">yes</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c"># Note: value for demonstration purposes; do your own testing to determine appropriate value for your</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c">#   environment / coffee maker</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">initial_value</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;30&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># How long do we pause to do a bloom for?</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="l">glbl_bloom_time_sec</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">int</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">restore_value</span><span class="p">:</span><span class="w"> </span><span class="kc">yes</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c"># Note: value for demonstration purposes; do your own testing to determine appropriate value for your</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c">#   environment / coffee maker</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">initial_value</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;30&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># And of course we need something to hold the timer value</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="l">_glbl_brew_timer_ticks</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">int</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">restore_value</span><span class="p">:</span><span class="w"> </span><span class="kc">no</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">initial_value</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;0&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># We need a place to store the number of ticks that we have observed low power while brewing.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="l">_glbl_brew_low_power_ticks</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">int</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">restore_value</span><span class="p">:</span><span class="w"> </span><span class="kc">no</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">initial_value</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;0&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">##</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># See: https://esphome.io/components/sensor/index.html</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">sensor</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">platform</span><span class="p">:</span><span class="w"> </span><span class="l">cse7766</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">update_interval</span><span class="p">:</span><span class="w"> </span><span class="l">1s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c"># &lt;...&gt;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">power</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;${friendly_name_short} Power&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">accuracy_decimals</span><span class="p">:</span><span class="w"> </span><span class="m">1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="c"># Needed for total daily calculations</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="l">s31_power</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">filters</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">or</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span>- <span class="nt">throttle</span><span class="p">:</span><span class="w"> </span><span class="l">300s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="c"># Publish every time there&#39;s been more than 3.5W change</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span>- <span class="nt">delta</span><span class="p">:</span><span class="w"> </span><span class="m">3.5</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># Do the integration locally so HA does not have to</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># See: https://esphome.io/components/sensor/total_daily_energy.html</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c">##</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;${friendly_name_short} Daily Energy&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">platform</span><span class="p">:</span><span class="w"> </span><span class="l">total_daily_energy</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">power_id</span><span class="p">:</span><span class="w"> </span><span class="l">s31_power</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">icon</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;mdi:meter-electric-outline&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># On the device page, HA will display a widget so we can adjust bloom time</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">number</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;Pre Bloom Time&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="l">num_pre_bloom_sec</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">platform</span><span class="p">:</span><span class="w"> </span><span class="l">template</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">icon</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;mdi:timer-sand&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">entity_category</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;config&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">unit_of_measurement</span><span class="p">:</span><span class="w"> </span><span class="l">seconds</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">mode</span><span class="p">:</span><span class="w"> </span><span class="l">slide</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c"># Note: value for demonstration purposes; do your own testing to determine appropriate value for your</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c">#   environment / coffee maker</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">min_value</span><span class="p">:</span><span class="w"> </span><span class="m">10</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">max_value</span><span class="p">:</span><span class="w"> </span><span class="m">60</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">step</span><span class="p">:</span><span class="w"> </span><span class="m">2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">lambda</span><span class="p">:</span><span class="w"> </span><span class="p">|-</span><span class="sd">
</span></span></span><span class="line"><span class="cl"><span class="sd">      </span><span class="w">      </span><span class="l">return (int) id(glbl_pre_bloom_time_sec);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">set_action</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">then</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">globals.set</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="l">glbl_pre_bloom_time_sec</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">value</span><span class="p">:</span><span class="w"> </span>!<span class="l">lambda |-</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">// TODO</span><span class="p">:</span><span class="w"> </span><span class="l">we&#39;re relying on HA to pass an integer; perhaps we should do atoi() and catch any exceptions</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="l">return (int) x;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;Bloom Time&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="l">num_bloom_sec</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">platform</span><span class="p">:</span><span class="w"> </span><span class="l">template</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">icon</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;mdi:timer-sand-paused&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">entity_category</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;config&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">unit_of_measurement</span><span class="p">:</span><span class="w"> </span><span class="l">seconds</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">mode</span><span class="p">:</span><span class="w"> </span><span class="l">slider</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c"># Note: value for demonstration purposes; do your own testing to determine appropriate value for your</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c">#   environment / coffee maker</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">min_value</span><span class="p">:</span><span class="w"> </span><span class="m">10</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">max_value</span><span class="p">:</span><span class="w"> </span><span class="m">60</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">step</span><span class="p">:</span><span class="w"> </span><span class="m">2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">lambda</span><span class="p">:</span><span class="w"> </span><span class="p">|-</span><span class="sd">
</span></span></span><span class="line"><span class="cl"><span class="sd">      </span><span class="w">      </span><span class="l">return (int) id(glbl_bloom_time_sec);</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">set_action</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">then</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">globals.set</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="l">glbl_bloom_time_sec</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">value</span><span class="p">:</span><span class="w"> </span>!<span class="l">lambda |-</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">// TODO</span><span class="p">:</span><span class="w"> </span><span class="l">we&#39;re relying on HA to pass an integer; perhaps we should do atoi() and catch any exceptions</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="l">return (int) x;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># Show current phase (IDLE/BREW/BLOOM/NEEDS-CLEANING...etc)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">text_sensor</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;Mode&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="l">txt_operation_mode</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">platform</span><span class="p">:</span><span class="w"> </span><span class="l">template</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">icon</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;mdi:information-off-outline&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">entity_category</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;diagnostic&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c"># Will be called to update as necessary from other components</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">update_interval</span><span class="p">:</span><span class="w"> </span><span class="l">never</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">lambda</span><span class="p">:</span><span class="w"> </span><span class="p">|</span><span class="sd">
</span></span></span><span class="line"><span class="cl"><span class="sd">      // This lambda function should never be called / we should never update the text sensor this way
</span></span></span><span class="line"><span class="cl"><span class="sd">      return {&#34;Unknown&#34;};</span><span class="w">      
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># Not sure if useful but including it anyways.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">switch</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;${friendly_name_short} Relay Latch&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">platform</span><span class="p">:</span><span class="w"> </span><span class="l">template</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="l">sw_relay_mode</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">device_class</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;switch&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">icon</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;mdi:link-variant&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">entity_category</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;config&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">lambda</span><span class="p">:</span><span class="w"> </span><span class="p">|-</span><span class="sd">
</span></span></span><span class="line"><span class="cl"><span class="sd">      if (id(glbl_relay_latched)) {
</span></span></span><span class="line"><span class="cl"><span class="sd">        return true;
</span></span></span><span class="line"><span class="cl"><span class="sd">      } else {
</span></span></span><span class="line"><span class="cl"><span class="sd">        return false;
</span></span></span><span class="line"><span class="cl"><span class="sd">      }</span><span class="w">      
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">turn_on_action</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">globals.set</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="l">glbl_relay_latched</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">value</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;true&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">turn_off_action</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">globals.set</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="l">glbl_relay_latched</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">value</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;false&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;${friendly_name_short} Power&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="l">sw_relay_toggle</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">platform</span><span class="p">:</span><span class="w"> </span><span class="l">output</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">output</span><span class="p">:</span><span class="w"> </span><span class="l">out_relay_1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">icon</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;mdi:coffee-maker-outline&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">restore_mode</span><span class="p">:</span><span class="w"> </span><span class="l">ALWAYS_OFF</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">device_class</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;switch&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c"># As soon as the power is turned on, start the timer</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">on_turn_on</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">script.execute</span><span class="p">:</span><span class="w"> </span><span class="l">_brew_timer_tick</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c"># And if turned off, reset</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">on_turn_off</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">script.execute</span><span class="p">:</span><span class="w"> </span><span class="l">_on_brew_turned_off</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">binary_sensor</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># Make the manual activation button behave the same as &#34;stock&#34;.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># May use for some future functionality:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c">#   - Triple click to indicate that I want to descale / ignore bloom settings</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c">#   - Double click to indicate that the water / grounds have been refreshed</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c">##</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;${friendly_name_short} Button&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">platform</span><span class="p">:</span><span class="w"> </span><span class="l">gpio</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">internal</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">pin</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">number</span><span class="p">:</span><span class="w"> </span><span class="l">GPIO0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">mode</span><span class="p">:</span><span class="w"> </span><span class="l">INPUT_PULLUP</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">inverted</span><span class="p">:</span><span class="w"> </span><span class="kc">True</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c"># Press is momentary quick</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">on_press</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">then</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">if</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">condition</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="c"># If we are in latched mode</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">lambda</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;return id(glbl_relay_latched);&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">then</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span>- <span class="nt">switch.toggle</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                  </span><span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="l">sw_relay_toggle</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">else</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span>- <span class="nt">logger.log</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                  </span><span class="nt">level</span><span class="p">:</span><span class="w"> </span><span class="l">DEBUG</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">                  </span><span class="nt">format</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;Button1 pressed but relays unlinked&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># Every second we need to increment the timer</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">script</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="l">_brew_timer_tick</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c"># Start a new run after previous runs completes. This will happen until timer.stop() is called on us</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c">##</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">mode</span><span class="p">:</span><span class="w"> </span><span class="l">queued</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">max_runs</span><span class="p">:</span><span class="w"> </span><span class="m">0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">then</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="c"># A single &#39;tick&#39; is 1 second long</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">delay</span><span class="p">:</span><span class="w"> </span><span class="l">1s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">lambda</span><span class="p">:</span><span class="w"> </span><span class="p">|-</span><span class="sd">
</span></span></span><span class="line"><span class="cl"><span class="sd">          /*
</span></span></span><span class="line"><span class="cl"><span class="sd">            Called every second while relay is on.
</span></span></span><span class="line"><span class="cl"><span class="sd">            Compare number of invocations to user settings to figure out which phase we should be in.
</span></span></span><span class="line"><span class="cl"><span class="sd">            Update the text sensor and turn switch on/off as needed.
</span></span></span><span class="line"><span class="cl"><span class="sd">          */
</span></span></span><span class="line"><span class="cl"><span class="sd">          auto const static TAG = &#34;lambda._brew_timer_tick&#34;;
</span></span></span><span class="line"><span class="cl"><span class="sd">          // Number of seconds post bloom with low power before we transition from brewing to idle.
</span></span></span><span class="line"><span class="cl"><span class="sd">          static int idle_ticks_threshold = 30;
</span></span></span><span class="line"><span class="cl"><span class="sd">          static int num_ticks = 0;
</span></span></span><span class="line"><span class="cl"><span class="sd">          static int total_bloom_time_sec = 0;
</span></span></span><span class="line"><span class="cl"><span class="sd">          static bool post_bloom = false;
</span></span></span><span class="line"><span class="cl"><span class="sd">          total_bloom_time_sec = (id(glbl_bloom_time_sec) + id(glbl_pre_bloom_time_sec));
</span></span></span><span class="line"><span class="cl"><span class="sd">          ESP_LOGD(TAG, &#34;Idle. num_ticks: %i, total_bloom_time_sec: %i&#34;, num_ticks, total_bloom_time_sec);
</span></span></span><span class="line"><span class="cl"><span class="sd">
</span></span></span><span class="line"><span class="cl"><span class="sd">          // Count execution
</span></span></span><span class="line"><span class="cl"><span class="sd">          id(_glbl_brew_timer_ticks) += 1;
</span></span></span><span class="line"><span class="cl"><span class="sd">          num_ticks = id(_glbl_brew_timer_ticks);
</span></span></span><span class="line"><span class="cl"><span class="sd">
</span></span></span><span class="line"><span class="cl"><span class="sd">          // If the switch has been turned off - for any reason - we cancel any scheduled executions and don&#39;t continue
</span></span></span><span class="line"><span class="cl"><span class="sd">          if( !id(sw_relay_toggle) ) {
</span></span></span><span class="line"><span class="cl"><span class="sd">            id(_brew_timer_tick).stop();
</span></span></span><span class="line"><span class="cl"><span class="sd">            return;
</span></span></span><span class="line"><span class="cl"><span class="sd">          }
</span></span></span><span class="line"><span class="cl"><span class="sd">
</span></span></span><span class="line"><span class="cl"><span class="sd">          // If the brew timer ticks counter is 0, assume IDLE
</span></span></span><span class="line"><span class="cl"><span class="sd">          if (num_ticks == 0) {
</span></span></span><span class="line"><span class="cl"><span class="sd">            ESP_LOGE(TAG, &#34;Idle. _glbl_brew_timer_ticks: %i&#34;, _glbl_brew_timer_ticks);
</span></span></span><span class="line"><span class="cl"><span class="sd">            id(txt_operation_mode).publish_state(&#34;Idle&#34;);
</span></span></span><span class="line"><span class="cl"><span class="sd">          }
</span></span></span><span class="line"><span class="cl"><span class="sd">
</span></span></span><span class="line"><span class="cl"><span class="sd">          // If we are between 1 and glbl_pre_bloom_time_sec then brewing -&gt; Blooming
</span></span></span><span class="line"><span class="cl"><span class="sd">          if( (num_ticks &gt;= 1 ) &amp;&amp; (num_ticks &lt;= id(glbl_pre_bloom_time_sec)) ) {
</span></span></span><span class="line"><span class="cl"><span class="sd">            id(txt_operation_mode).publish_state(&#34;Pre Bloom&#34;);
</span></span></span><span class="line"><span class="cl"><span class="sd">          }
</span></span></span><span class="line"><span class="cl"><span class="sd">
</span></span></span><span class="line"><span class="cl"><span class="sd">          // If we are between glbl_pre_bloom_time_sec and glbl_bloom_time_sec then blooming.
</span></span></span><span class="line"><span class="cl"><span class="sd">          if( (num_ticks &gt; id(glbl_pre_bloom_time_sec) ) &amp;&amp; (num_ticks &lt;= total_bloom_time_sec ) ) {
</span></span></span><span class="line"><span class="cl"><span class="sd">            id(txt_operation_mode).publish_state(&#34;Blooming&#34;);
</span></span></span><span class="line"><span class="cl"><span class="sd">            // Note, we turn the relay off directly and not the switch. We want the switch / web UI to still show &#34;on/brewing&#34;.
</span></span></span><span class="line"><span class="cl"><span class="sd">            // The text sensor will show that we are blooming
</span></span></span><span class="line"><span class="cl"><span class="sd">            id(out_relay_1).turn_off();
</span></span></span><span class="line"><span class="cl"><span class="sd">          }
</span></span></span><span class="line"><span class="cl"><span class="sd">
</span></span></span><span class="line"><span class="cl"><span class="sd">          // Otherwise we are brewing.
</span></span></span><span class="line"><span class="cl"><span class="sd">          if(num_ticks &gt; total_bloom_time_sec ) {
</span></span></span><span class="line"><span class="cl"><span class="sd">            id(txt_operation_mode).publish_state(&#34;Brewing&#34;);
</span></span></span><span class="line"><span class="cl"><span class="sd">            id(out_relay_1).turn_on();
</span></span></span><span class="line"><span class="cl"><span class="sd">            post_bloom = true;
</span></span></span><span class="line"><span class="cl"><span class="sd">          }
</span></span></span><span class="line"><span class="cl"><span class="sd">
</span></span></span><span class="line"><span class="cl"><span class="sd">          // After bloom, start counting the number of times we observe low power.
</span></span></span><span class="line"><span class="cl"><span class="sd">          // After T seconds of no power use, we assume that we&#39;re out of water and reset everything.
</span></span></span><span class="line"><span class="cl"><span class="sd">          ESP_LOGD(TAG, &#34;post bloom: %i, Current power consumption: %f Watts&#34;, post_bloom, id(s31_power).state);
</span></span></span><span class="line"><span class="cl"><span class="sd">          if ( post_bloom &amp;&amp; (id(s31_power).state &lt; 2)) {
</span></span></span><span class="line"><span class="cl"><span class="sd">            id(_glbl_brew_low_power_ticks) +=1;
</span></span></span><span class="line"><span class="cl"><span class="sd">            ESP_LOGD(TAG, &#34;_glbl_brew_low_power_ticks: %i&#34;, id(_glbl_brew_low_power_ticks));
</span></span></span><span class="line"><span class="cl"><span class="sd">          }
</span></span></span><span class="line"><span class="cl"><span class="sd">
</span></span></span><span class="line"><span class="cl"><span class="sd">          if (id(_glbl_brew_low_power_ticks) &gt;= idle_ticks_threshold){
</span></span></span><span class="line"><span class="cl"><span class="sd">            ESP_LOGD(TAG, &#34;Assuming done with brew as _glbl_brew_low_power_ticks: %i &gt;= %i&#34;, id(_glbl_brew_low_power_ticks), idle_ticks_threshold);
</span></span></span><span class="line"><span class="cl"><span class="sd">            id(sw_relay_toggle).turn_off();
</span></span></span><span class="line"><span class="cl"><span class="sd">            return;
</span></span></span><span class="line"><span class="cl"><span class="sd">          }
</span></span></span><span class="line"><span class="cl"><span class="sd">
</span></span></span><span class="line"><span class="cl"><span class="sd">          //re-schedule so we&#39;re called again in a second!
</span></span></span><span class="line"><span class="cl"><span class="sd">          id(_brew_timer_tick).execute();</span><span class="w">          
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="l">_on_brew_turned_off</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">mode</span><span class="p">:</span><span class="w"> </span><span class="l">single</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">then</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c"># Disable timer, have the text sensor update</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">lambda</span><span class="p">:</span><span class="w"> </span><span class="p">|-</span><span class="sd">
</span></span></span><span class="line"><span class="cl"><span class="sd">        id(_glbl_brew_timer_ticks) = 0;
</span></span></span><span class="line"><span class="cl"><span class="sd">        id(_glbl_brew_low_power_ticks) = 0;
</span></span></span><span class="line"><span class="cl"><span class="sd">        id(txt_operation_mode).publish_state(&#34;Idle&#34;);
</span></span></span><span class="line"><span class="cl"><span class="sd">        id(_brew_timer_tick).stop();</span><span class="w">        
</span></span></span></code></pre></td></tr></table>
</div>
</div><h3 id="home-assistant-automations">Home Assistant automations</h3>
<p>When some automation determines that it&rsquo;s now time to start making coffee, this is a portion of the script that is executed:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">sequence</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># ...</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">service</span><span class="p">:</span><span class="w"> </span><span class="l">number.set_value</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">data</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="c"># This is a bit simplified; my template does some more maths to map the temperature to a more precise value.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="c"># I simplified the value template here to illustrate how the adjustable timers are meant to be used.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">value</span><span class="p">:</span><span class="w"> </span><span class="p">&gt;-</span><span class="sd">
</span></span></span><span class="line"><span class="cl"><span class="sd">        {% if states(&#39;sensor.kitchen_temperature&#39;)|float(-1) &lt; 25 %}35{% else
</span></span></span><span class="line"><span class="cl"><span class="sd">        %}20{% endif %}</span><span class="w">        
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">target</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">entity_id</span><span class="p">:</span><span class="w"> </span><span class="l">number.pre_bloom_time</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">service</span><span class="p">:</span><span class="w"> </span><span class="l">number.set_value</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">data</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">value</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;35.0&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">target</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">entity_id</span><span class="p">:</span><span class="w"> </span><span class="l">number.bloom_time</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">turn_on</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">device_id</span><span class="p">:</span><span class="w"> </span><span class="c">#&lt; Your Device ID Here &gt;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">entity_id</span><span class="p">:</span><span class="w"> </span><span class="l">switch.coffee_power</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">domain</span><span class="p">:</span><span class="w"> </span><span class="l">switch</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div>]]></description></item><item><title>Integrating ESPHome with a cheap Geiger Counter</title><link>https://karlquinsland.com/esphome-geiger-counter/</link><pubDate>Wed, 09 Nov 2022 00:00:00 +0000</pubDate><author>Author</author><guid>https://karlquinsland.com/esphome-geiger-counter/</guid><description><![CDATA[<p>Yes, there have <a href="https://community.home-assistant.io/t/geiger-counter-with-ha-integration/107660/12" target="_blank" rel="noopener noreffer">been</a> <em>loads</em> of <a href="https://www.rhelectronics.store/radiation-detector-geiger-counter-diy-kit-second-edition" target="_blank" rel="noopener noreffer">people</a> doing <a href="https://www.connectix.nl/connecting-a-geiger-counter-to-home-assistant/" target="_blank" rel="noopener noreffer">similar</a> <a href="https://old.reddit.com/r/homeassistant/comments/l92fbf/doomsday_sensor_v10/" target="_blank" rel="noopener noreffer">things</a>! ESPHome already has a tutorial <a href="https://esphome.io/cookbook/geiger-counter.html" target="_blank" rel="noopener noreffer">covering <em>exactly</em> this</a>!</p>
<p>I&rsquo;m writing this up because the approach that I ended up taking was <em>not</em> the intended/planned approach.</p>
<!-- markdownlint-disable-file MD002 -->
<h2 id="the-geiger-counter">The Geiger Counter</h2>
<p>I originally pulled the trigger on this particular version because it had a built in screen attached to a micro controller.</p>
<figure >

    
        
    

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>I naïvely thought that I&rsquo;d be able to get a simple UART from the 4 pins next to the microcontroller or maybe even get data directly off of the micro USB port.</p>
<div class="details admonition info open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-info-circle fa-fw"></i>Info<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">As of 2022.11, the geiger counter pictured above can be found <a href="https://www.aliexpress.us/item/3256804497523971.html" target="_blank" rel="noopener noreffer">here</a>.
The listing title is <code>DIY Geiger Counter Kit Assembled Module Nuclear Radiation Detector X γ β rays Iodine 131 Detecting OLED Display Radiation Tester</code></div>
        </div>
    </div>
<h3 id="the-usb--uart-port">The USB / UART port</h3>
<p>After receiving and unpacking it, I probed around and determined that the micro USB port did have the data lines going to the <code>U5</code> micro and that the 4 pins <em>also</em> went to the micro.</p>
<p>Unfortunately both seemed dead; the pins didn&rsquo;t have any signal on them and the software on the micro implementing the USB stack didn&rsquo;t seem to be fully implemented.
Using <code>dmesg</code> I could see <em>a device</em> being plugged in but the device failed to respond to any probes.</p>
<p>So much for the easy way out.</p>
<h2 id="plan-b">Plan B</h2>
<p>With the identifying markings sanded off of the chip, attempting to dump / reverse / re-program the firmware wasn&rsquo;t the most appealing option.</p>
<p>After some quick testing, I determined that the micro controller toggles the beeper and the LED via <em>distinct</em> GPIO pins and that the LED is pulsed to 3.3v for 5ms.</p>
<figure >

    
        
    

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>For reference, here are the points that I chose to inject power and observe the LED.
I am injecting 5V into the geiger counter from the ESP module so I can program and power the entire assembly with a single cable.
If you choose to use separate power supplies for both, make sure that the ESP and geiger counter share a ground!</p>
<p>Removing <code>R1</code> is optional; keep it if you want the beeper to click as well.
I have some thoughts on being able to toggle this behavior <a href="#beeper" rel="">below</a></p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        I left R1 in place so it&#39;s easier to reverse the mod.
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>And with a bit of hot glue, we&rsquo;re done with the hardware assembly.</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        There&#39;s no good place for the ESP module so I chose to strategically obfuscate the portion of the screen that does not display the actual measurements.
        
            
        
        </p> 
    </figcaption>
    
</figure>


<div class="details admonition warning open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-exclamation-triangle fa-fw"></i>Warning<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">There&rsquo;s no <em>good</em> place to put the ESP module such that the screen is unobstructed and such that the ESP is not near the geiger tube.
As the tube is charged up to ~400v, it putting the ESP module directly over it seems like a potential problem.</div>
        </div>
    </div>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        I wouldn&#39;t put the ESP right here because a) the tube is partially obstructed and b) the tube is charged to a few hundred volts and putting any delicate electronics that close seems like a bad idea.
        
            
        
        </p> 
    </figcaption>
    
</figure>


<h2 id="esphome">ESPHome</h2>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        Ignore that 12 hour gap in the data... I forgot to plug the assembly back in after doing some tests.
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>The firmware is pretty simple.
The configuration below is an abridged version of what I am currently using.
I&rsquo;ve stripped out unnecessary things but left some comments in to serve as basic documentation.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="c">##</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># To convert from particles per unit time, there&#39;s supposed to be some conversion factor.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># This conversion factor depends on the tube and the cheap Ali Express tubes all seem to be J321 style.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># Not a ton of documentation out there, but I did find one source that says J321 is basically J305.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># See: https://www.radmon.org/index.php/forum/geiger-muller-tubes/1245-information-on-j321-gm-tube</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># But even then, the conversion factor is derived from some known isotope. They expose the tube to some</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#   known isotope and then measure the counts. Because they also know the proper dosing info for the</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#   isotope, the tube then gets a conversion factor.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># Additionally, the micro controller sits between the raw data from the tube and the LED that I am tapping into.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># Each time there is _any_ radiation detected, the micro controller pluses the LED for 5ms. In theory, multiple</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#   radioactive particles could strike the tube in the 5ms window and the microcontroller would know ... but I wouldn&#39;t.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># At 5ms per pulse, the maximum number of particles per second that I can detect is 200. Even if the TRUE count</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#   is 3x that... 200 is still way more than enough to know that _something_ isn&#39;t right and that&#39;s really what I&#39;m after here.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># So for now, just stick with basic counts per min w/ the understanding that the signal that I&#39;m observing might not</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#   be with the full resolution that the tube is capable of.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">##</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">esphome</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># Note: this will be the hostname that device request during the DHCP dance...</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;geiger-counter&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">esp32</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">board</span><span class="p">:</span><span class="w"> </span><span class="l">mhetesp32minikit</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># Enable logging</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">logger</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">level</span><span class="p">:</span><span class="w"> </span><span class="l">INFO</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">sensor</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># See: https://esphome.io/components/sensor/pulse_counter.html</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Particle Count</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">platform</span><span class="p">:</span><span class="w"> </span><span class="l">pulse_counter</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="l">sense_p_cnt</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c"># Does not really matter which pin for ESP32</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">pin</span><span class="p">:</span><span class="w"> </span><span class="l">GPIO32</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">use_pcnt</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c"># Measured with oScope: pulse is 5ms _exactly_.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c"># Docs say to use falling edge detection with the hardware pulse counter</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">count_mode</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">rising_edge</span><span class="p">:</span><span class="w"> </span><span class="l">DISABLE</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">falling_edge</span><span class="p">:</span><span class="w"> </span><span class="l">INCREMENT</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c"># Docs ALSO say that you can&#39;t configure a filter of more than 13us when using the</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c">#   internal pulse counter. 5ms is ... 5000 us and that&#39;s more than 13us so I guess we&#39;ll</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c">#   stick with the defaults?</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c">##</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">internal_filter</span><span class="p">:</span><span class="w"> </span><span class="l">13us</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c"># As best I can tell, pulses trigger an ISR which just increases some counter somewhere.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c"># Every update_interval, esphome checks the value in the storage and computes the count</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c">#   per min.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c">##</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">update_interval</span><span class="p">:</span><span class="w"> </span><span class="l">60s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">unit_of_measurement</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;cpm&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">state_class</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;measurement&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">icon</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;mdi:radioactive-circle-outline&#34;</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><h3 id="beeper">Beeper</h3>
<p>I can&rsquo;t confirm it, but I suspect that the beeper is driven independently of the LED because the original designer wanted to implement a software toggle for the sound.</p>
<p>I don&rsquo;t need the sound functionality but I also don&rsquo;t want to <em>permanently</em> disable it. It would be nice to be able to toggle it on/off as needed.
There are a few ways to get similar functionality:</p>
<ul>
<li>
<p>Hack the hardware&hellip; more. The TO92 driving the beeper (via <code>R1</code>) is a <code>SS9014 NPN</code>. I could add <em>another</em> transistor in series with <code>R1</code> and then control the current flow via another GPIO on the ESP.</p>
</li>
<li>
<p>Inspired by this <a href="https://old.reddit.com/r/Esphome/comments/uhu3uy/trying_to_detect_falling_edge_on_input_where_also/" target="_blank" rel="noopener noreffer">reddit thread</a>, I could try to get the ESP to toggle a beeper directly when a pulse is detected.
There are some issues with this approach, though.</p>
</li>
</ul>
<p>It is not possible to get <em>direct</em> access to the ISR via ESPHome.
I&rsquo;d have to create my own custom component to pull this off.
Not the end of the world but also more time than I wanted to spend so I went with a different approach that <em>appears to work</em>.</p>
<p>Basically, create <em>two</em> instances of the <a href="https://esphome.io/components/sensor/pulse_counter.html" target="_blank" rel="noopener noreffer"><code>pulse_counter</code></a> sensor using the same GPIO pin.
One of them will remain external and will publish data to Home Assistant at 60s intervals.
The other will be internal and will be updated every <code>loop()</code>.
By attaching a <a href="https://esphome.io/guides/automations.html#lambda-action" target="_blank" rel="noopener noreffer"><code>lambda</code> function</a> to the sensor evaluation loop, we can compare the number of recorded pulses many times per second.
The number of cycles that the internal pulse counter will sum pulses over is 1 so any time the current value does not match the previous value &hellip; should indicate that a pulse was fired off.</p>
<p>Here&rsquo;s what I came up with:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">sensor</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># See: https://esphome.io/components/sensor/pulse_counter.html</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Particle Count</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c"># &lt;...&gt;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">INTERNAL Particle Count</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">internal</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">platform</span><span class="p">:</span><span class="w"> </span><span class="l">pulse_counter</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c"># &lt;... literally the exact same config as the external pulse counter ...&gt;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c">##</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c"># 0ms means every loop()</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">update_interval</span><span class="p">:</span><span class="w"> </span><span class="l">0ms</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">filters</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="c"># LogE because we want it to stand out on the console while testing</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">lambda</span><span class="p">:</span><span class="w"> </span><span class="p">|-</span><span class="sd">
</span></span></span><span class="line"><span class="cl"><span class="sd">          static int num_zeros = 0;
</span></span></span><span class="line"><span class="cl"><span class="sd">          if (x &gt; 0) {
</span></span></span><span class="line"><span class="cl"><span class="sd">            // reset
</span></span></span><span class="line"><span class="cl"><span class="sd">            num_zeros = 0;
</span></span></span><span class="line"><span class="cl"><span class="sd">            // Indicate that a non 0 measurement was taken and dump to console
</span></span></span><span class="line"><span class="cl"><span class="sd">            // This is where a beeper would be fired off if desired...
</span></span></span><span class="line"><span class="cl"><span class="sd">            ESP_LOGE(&#34;filterLambda&#34;, &#34;raw is %f&#34;, x );
</span></span></span><span class="line"><span class="cl"><span class="sd">          } else {
</span></span></span><span class="line"><span class="cl"><span class="sd">            num_zeros++;
</span></span></span><span class="line"><span class="cl"><span class="sd">          }
</span></span></span><span class="line"><span class="cl"><span class="sd">          // Dont spam console
</span></span></span><span class="line"><span class="cl"><span class="sd">          if (num_zeros % 1000 == 0) {
</span></span></span><span class="line"><span class="cl"><span class="sd">            ESP_LOGI(&#34;filterLambda&#34;, &#34;num_zeros is %d&#34;, num_zeros );
</span></span></span><span class="line"><span class="cl"><span class="sd">          }
</span></span></span><span class="line"><span class="cl"><span class="sd">          return x;</span><span class="w">          
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>In testing, I would get logs like:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">[17:34:18][E][filterLambda:165]: raw is 10000.000000
</span></span><span class="line"><span class="cl">[17:34:18][I][filterLambda:170]: num_zeros is 0
</span></span><span class="line"><span class="cl">[17:34:19][E][filterLambda:165]: raw is 10000.000000
</span></span><span class="line"><span class="cl">[17:34:19][I][filterLambda:170]: num_zeros is 0
</span></span><span class="line"><span class="cl">[17:34:19][E][filterLambda:165]: raw is 10000.000000
</span></span><span class="line"><span class="cl">[17:34:19][I][filterLambda:170]: num_zeros is 0
</span></span><span class="line"><span class="cl">[17:34:20][E][filterLambda:165]: raw is 10000.000000
</span></span><span class="line"><span class="cl">[17:34:20][I][filterLambda:170]: num_zeros is 0
</span></span><span class="line"><span class="cl">[17:34:22][E][filterLambda:165]: raw is 10000.000000
</span></span><span class="line"><span class="cl">[17:34:22][I][filterLambda:170]: num_zeros is 0
</span></span><span class="line"><span class="cl">[17:34:24][E][filterLambda:165]: raw is 10000.000000
</span></span><span class="line"><span class="cl">[17:34:24][I][filterLambda:170]: num_zeros is 0
</span></span><span class="line"><span class="cl">[17:34:24][E][filterLambda:165]: raw is 10000.000000
</span></span><span class="line"><span class="cl">[17:34:24][I][filterLambda:170]: num_zeros is 0
</span></span><span class="line"><span class="cl">[17:34:25][E][filterLambda:165]: raw is 10000.000000
</span></span><span class="line"><span class="cl">[17:34:25][I][filterLambda:170]: num_zeros is 0
</span></span><span class="line"><span class="cl">[17:34:26][E][filterLambda:165]: raw is 10000.000000
</span></span><span class="line"><span class="cl">[17:34:26][I][filterLambda:170]: num_zeros is 0
</span></span><span class="line"><span class="cl">[17:34:32][E][filterLambda:165]: raw is 10000.000000
</span></span><span class="line"><span class="cl">[17:34:32][I][filterLambda:170]: num_zeros is 0
</span></span><span class="line"><span class="cl">[17:34:33][E][filterLambda:165]: raw is 10000.000000
</span></span><span class="line"><span class="cl">[17:34:33][I][filterLambda:170]: num_zeros is 0
</span></span><span class="line"><span class="cl">[17:34:35][E][filterLambda:165]: raw is 10000.000000
</span></span><span class="line"><span class="cl">[17:34:35][I][filterLambda:170]: num_zeros is 0
</span></span><span class="line"><span class="cl">[17:34:40][E][filterLambda:165]: raw is 10000.000000
</span></span><span class="line"><span class="cl">[17:34:40][I][filterLambda:170]: num_zeros is 0
</span></span><span class="line"><span class="cl">[17:34:42][E][filterLambda:165]: raw is 10000.000000
</span></span><span class="line"><span class="cl">[17:34:42][I][filterLambda:170]: num_zeros is 0
</span></span><span class="line"><span class="cl">[17:34:43][E][filterLambda:165]: raw is 10000.000000
</span></span><span class="line"><span class="cl">[17:34:43][I][filterLambda:170]: num_zeros is 0
</span></span><span class="line"><span class="cl">[17:34:44][E][filterLambda:165]: raw is 10000.000000
</span></span><span class="line"><span class="cl">[17:34:44][I][filterLambda:170]: num_zeros is 0
</span></span><span class="line"><span class="cl">[17:34:45][E][filterLambda:165]: raw is 10000.000000
</span></span><span class="line"><span class="cl">[17:34:45][I][filterLambda:170]: num_zeros is 0
</span></span><span class="line"><span class="cl">[17:34:46][E][filterLambda:165]: raw is 10000.000000
</span></span><span class="line"><span class="cl">[17:34:46][I][filterLambda:170]: num_zeros is 0
</span></span><span class="line"><span class="cl">[17:34:47][E][filterLambda:165]: raw is 10000.000000
</span></span><span class="line"><span class="cl">[17:34:47][I][filterLambda:170]: num_zeros is 0
</span></span><span class="line"><span class="cl">[17:34:50][E][filterLambda:165]: raw is 10000.000000
</span></span><span class="line"><span class="cl">[17:34:50][I][filterLambda:170]: num_zeros is 0
</span></span><span class="line"><span class="cl">[17:34:52][E][filterLambda:165]: raw is 10000.000000
</span></span><span class="line"><span class="cl">[17:34:52][I][filterLambda:170]: num_zeros is 0
</span></span><span class="line"><span class="cl">[17:34:54][E][filterLambda:165]: raw is 10000.000000
</span></span><span class="line"><span class="cl">[17:34:54][I][filterLambda:170]: num_zeros is 0
</span></span><span class="line"><span class="cl">[17:34:58][E][filterLambda:165]: raw is 10000.000000
</span></span><span class="line"><span class="cl">[17:34:58][I][filterLambda:170]: num_zeros is 0
</span></span><span class="line"><span class="cl">[17:35:00][E][filterLambda:165]: raw is 10000.000000
</span></span><span class="line"><span class="cl">[17:35:00][I][filterLambda:170]: num_zeros is 0
</span></span><span class="line"><span class="cl">[17:35:02][E][filterLambda:165]: raw is 10000.000000
</span></span><span class="line"><span class="cl">[17:35:02][I][filterLambda:170]: num_zeros is 0
</span></span><span class="line"><span class="cl">[17:35:05][E][filterLambda:165]: raw is 10000.000000
</span></span><span class="line"><span class="cl">[17:35:05][I][filterLambda:170]: num_zeros is 0
</span></span><span class="line"><span class="cl">[17:35:11][I][filterLambda:170]: num_zeros is 1000
</span></span><span class="line"><span class="cl">[17:35:17][E][filterLambda:165]: raw is 10000.000000
</span></span><span class="line"><span class="cl">[17:35:17][I][filterLambda:170]: num_zeros is 0
</span></span></code></pre></td></tr></table>
</div>
</div><p>The period between <code>17:34:18</code> and <code>17:35:17</code> is basically 60 seconds long and the number of times that <code>num_zeros is 0</code> is printed is 27.
Coincidentally, the external facing sensor published a value of 27 to Home Assistant.</p>
<p>This is not a <em>conclusive</em> test but - at least at <strong>background</strong> radiation levels - using two instances of the same sensor type on the same GPIO might work.</p>
<p>I don&rsquo;t have any easy way to induce higher counts on the geiger tube so I can&rsquo;t test how well this holds up &ldquo;under load&rdquo; nor can I confirm that this works reliably across all ESP chips/modules and versions of ESPHome/PlatformIO&hellip;etc.</p>
<p>Doing this with a custom component probably is the better way to do it but I wasn&rsquo;t going to pull that off in the time I had allotted.</p>
]]></description></item><item><title>ESPHome for Sinilink PC remotes</title><link>https://karlquinsland.com/esphome-sinilink-pc-remotes/</link><pubDate>Sat, 22 Oct 2022 00:00:00 +0000</pubDate><author>Author</author><guid>https://karlquinsland.com/esphome-sinilink-pc-remotes/</guid><description><![CDATA[<h1 id="pc-power-remote-control">PC (power) remote control</h1>
<p>While doing research for a potential project, I stumbled onto a device that fit&rsquo;s so squarely into that &ldquo;it&rsquo;s so simple and obvious, why didn&rsquo;t I think tof that?!&rdquo; category that I immediately placed an order for a few.</p>
<p>That device?</p>
<p>A simple WiFi equipped micro controller that gets wired between the power button on a PC and the motherboard.
This makes it possible to remotely control and monitor the power state of any PC!</p>
<p>I am using these devices in conjunction with my <a href="/hdmi-kvm-teardown-and-esphome/" rel="">previously integrated KVM switch</a> to automate turning hosts on/off as they are activated/deactivated on the KVM switch.</p>
<div class="details admonition note open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-pencil-alt fa-fw"></i>Note<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><p>There are <em>several</em> different types of device on Ali Express.
Most appear to use TuYa MCUs so it&rsquo;s not immediately clear if/how those devices can be converted to use ESPHome or not; buy those at your own risk.</p>
<p>The two Sinilink devices liked below are trivial to get working with ESPHome/Tasmota though!</p>
</div>
        </div>
    </div>
<ul>
<li><a href="https://templates.blakadder.com/sinilink_XY-WPCE.html" target="_blank" rel="noopener noreffer">Sinilink PCIe Computer Remote (XY-WPCE)</a></li>
<li><a href="https://templates.blakadder.com/sinilink_XY-WPCL.html" target="_blank" rel="noopener noreffer">Sinilink USB Computer Remote (XY-WPCL)</a></li>
</ul>
<p><figure >

    
        
    

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<figure >

    
        
    

    

    <figcaption>
        
        
    </figcaption>
    
</figure>

</p>
<p>The PCI Express version is simpler to integrate with a PC as it uses the 3.3v power rails to determine when the PC is on.
The USB version does not have this luxury so power must be supplied via the DC barrel jack.
Additionally, the USB version is also wired series with the power LED(s) on the computer so the module can discern the PCs power state.</p>
<div class="details admonition question open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-question-circle fa-fw"></i>Why not just use Wake On Lan?<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><p>Yes, Home Assistant does have support for <a href="https://www.home-assistant.io/integrations/wake_on_lan/" target="_blank" rel="noopener noreffer">Wake On Lan</a> but I chose not to use it for a few reasons:</p>
<ul>
<li>
<p>Does not work across subnets. WoL uses a broadcast packet and routers tend to frown on forwarding those between subnets. As my HA instance runs inside of Kubernetes, it&rsquo;s going to be more than a little difficult to get the WoL packets out of the cluster!</p>
</li>
<li>
<p>Does not do status checking. The Sinilink modules have direct feedback about the state of the PC power.</p>
</li>
<li>
<p>Does not do shutdown. There is no WoL packet that can send a PC back to sleep!</p>
</li>
</ul>
</div>
        </div>
    </div>
<div class="details admonition tip open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-lightbulb fa-fw"></i>Tip<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><p>If you use the PCI Express version and find that the module does not stay powered up while the PC is asleep/off, check your PC BIOS for <a href="https://superuser.com/questions/1074074/disadvantages-of-enabling-erp-in-bios" target="_blank" rel="noopener noreffer"><code>ErP</code> settings</a>.</p>
<p>I had to explicitly turn off ErP <em>and</em> permit the PC to wake from PCI-E devices before the 3.3v standby rail was activated.</p>
</div>
        </div>
    </div>
<h2 id="a-quick-detour-about-write_flash-errors">A quick detour about <code>write_flash</code> errors</h2>
<p>I don&rsquo;t see this error <em>often</em> but I do see it enough to warrant talking about.</p>
<p>I ordered 3 of the PCI Express <em>and</em> the USB version of the devices above.
Of the 6 devices I received, 3 didn&rsquo;t &ldquo;take&rdquo; the custom firmware.</p>
<p>Devices that have defects with the onboard flash will appear to be function when probed with <code>esptool.py</code> but will exhibit some sort of error when doing any <code>write_flash</code> operations.</p>
<p>The symptoms present like this</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="c1"># Note the baud rate; it&#39;s considerably slower than the default baud rate.</span>
</span></span><span class="line"><span class="cl"><span class="c1"># Trying lower baud rates is a suggested &#39;fix&#39;.</span>
</span></span><span class="line"><span class="cl">❯ esptool.py -b <span class="m">19200</span> --port /dev/ttyUSB0 write_flash -fs 1MB -fm dout 0x0 ~/Downloads/tasmota-lite.bin
</span></span><span class="line"><span class="cl">esptool.py v3.3.1
</span></span><span class="line"><span class="cl">Serial port /dev/ttyUSB0
</span></span><span class="line"><span class="cl">Connecting...................
</span></span><span class="line"><span class="cl">Detecting chip type... Unsupported detection protocol, switching and trying again...
</span></span><span class="line"><span class="cl">Connecting...
</span></span><span class="line"><span class="cl">Detecting chip type... ESP8266
</span></span><span class="line"><span class="cl">Chip is ESP8285H16
</span></span><span class="line"><span class="cl">Features: WiFi, Embedded Flash
</span></span><span class="line"><span class="cl">Crystal is 26MHz
</span></span><span class="line"><span class="cl">MAC: e8:aa:bb:cc:dd:ee
</span></span><span class="line"><span class="cl">Uploading stub...
</span></span><span class="line"><span class="cl">Running stub...
</span></span><span class="line"><span class="cl">Stub running...
</span></span><span class="line"><span class="cl">Configuring flash size...
</span></span><span class="line"><span class="cl">Flash will be erased from 0x00000000 to 0x0007afff...
</span></span><span class="line"><span class="cl">Compressed <span class="m">501328</span> bytes to 358200...
</span></span><span class="line"><span class="cl">Wrote <span class="m">501328</span> bytes <span class="o">(</span><span class="m">358200</span> compressed<span class="o">)</span> at 0x00000000 in 188.8 seconds <span class="o">(</span>effective 21.2 kbit/s<span class="o">)</span>...
</span></span><span class="line"><span class="cl">File  md5: 693ff98fbada203ab23ced0650e45ab7
</span></span><span class="line"><span class="cl">Flash md5: 2a3e7abaf93800f4193d03a9da8c52fa
</span></span><span class="line"><span class="cl">MD5 of 0xFF is 36d49993e146cee00d35f8793084f71c
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">A fatal error occurred: MD5 of file does not match data in flash!
</span></span></code></pre></td></tr></table>
</div>
</div><p>and</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">❯ esptool.py --port /dev/ttyUSB0 write_flash -fs 1MB -fm dout 0x0 ~/Downloads/tasmota-lite.bin
</span></span><span class="line"><span class="cl">esptool.py v3.3.1
</span></span><span class="line"><span class="cl">Serial port /dev/ttyUSB0
</span></span><span class="line"><span class="cl">Connecting...
</span></span><span class="line"><span class="cl">Detecting chip type... Unsupported detection protocol, switching and trying again...
</span></span><span class="line"><span class="cl">Connecting...
</span></span><span class="line"><span class="cl">Detecting chip type... ESP8266
</span></span><span class="line"><span class="cl">Chip is ESP8285H16
</span></span><span class="line"><span class="cl">Features: WiFi, Embedded Flash
</span></span><span class="line"><span class="cl">Crystal is 26MHz
</span></span><span class="line"><span class="cl">MAC: e8:aa:bb:cc:dd:ee
</span></span><span class="line"><span class="cl">Stub is already running. No upload is necessary.
</span></span><span class="line"><span class="cl">Configuring flash size...
</span></span><span class="line"><span class="cl">Flash will be erased from 0x00000000 to 0x0007afff...
</span></span><span class="line"><span class="cl">Compressed <span class="m">501328</span> bytes to 358200...
</span></span><span class="line"><span class="cl">Writing at 0x00075960... <span class="o">(</span><span class="m">100</span> %<span class="o">)</span>
</span></span><span class="line"><span class="cl">A fatal error occurred: Serial data stream stopped: Possible serial noise or corruption.
</span></span></code></pre></td></tr></table>
</div>
</div><p>There are a few &ldquo;fixes&rdquo; for this issue but none worked for me:</p>
<ul>
<li>Check for loose or fault connections.</li>
<li>Use a robust power supply</li>
<li>Try <code>write_flash_status</code> with <code>--non-volatile 0</code></li>
<li>Try a different USB &lt;-&gt; 232/TTL adapter</li>
</ul>
<p>I tried <em>all</em> of the above and nothing worked.</p>
<ul>
<li>I soldered wires directly to the modules instead of just inserting pins into the programming header.</li>
<li>I tried a <a href="/electronics-lab-enhanced-bench-psu/" rel="">power supply that can supply <em>considerably more</em> than</a> the ~200 ma needed to power/flash the chip.</li>
<li>I tried a few different USB ports and a few different USB &lt;-&gt; TTL adapters with both counterfeit and authentic FTDI chips.</li>
<li>I used <code>read_flash_status</code> and saw that the <code>--non-volatile</code> settings were already <code>0x0000</code>.</li>
</ul>
<p>None of the above worked for me.</p>
<p>While disappointing and frustrating, there&rsquo;s only one probable conclusion: there&rsquo;s a subtle defect in the flash memory that either wasn&rsquo;t noticed or checked for at the factory when the OEM firmware was flashed onto the devices.</p>
<p>I cut my losses and moved on.</p>
<h2 id="esphome-configurations">ESPHome configurations</h2>
<p>For SEO/Archival purposes, I have also uploaded a copy of the config to the <a href="https://github.com/esphome-devices/esphome-devices/pull/294" target="_blank" rel="noopener noreffer">esphome-devices.com</a> site.
<del>As of publishing <em>this</em> article, the PR is pending review.
If/When the page goes live, I&rsquo;ll update the link here.</del></p>
<div class="details admonition success open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-check-circle fa-fw"></i>Success<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">The pr is <a href="https://www.esphome-devices.com/devices/Sinilink-XY-WPCE" target="_blank" rel="noopener noreffer">LIVE</a>. Thanks to the super quick work of <a href="https://github.com/tekmaven" target="_blank" rel="noopener noreffer"><code>@tekmaven</code></a>!</div>
        </div>
    </div>
<p>The configurations there are bare-bones and cover <em>just</em> the basics required to get the GPIO working with ESPhome.</p>
<p>The configuration below is a bit more featured and is a lot closer to the versions that I use in production.
It features a &ldquo;pc power button lockout&rdquo; feature and more.</p>
<div class="details admonition warning open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-exclamation-triangle fa-fw"></i>Warning<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">The code below will not compile &ldquo;as is&rdquo;.
All of the entities under the <code>packages:</code> heading are &ldquo;standard&rdquo; across all of my ESPHome configurations and are not included here.
Either remove them or substitute as needed to get something that works for <em>you</em>.</div>
        </div>
    </div>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">  1
</span><span class="lnt">  2
</span><span class="lnt">  3
</span><span class="lnt">  4
</span><span class="lnt">  5
</span><span class="lnt">  6
</span><span class="lnt">  7
</span><span class="lnt">  8
</span><span class="lnt">  9
</span><span class="lnt"> 10
</span><span class="lnt"> 11
</span><span class="lnt"> 12
</span><span class="lnt"> 13
</span><span class="lnt"> 14
</span><span class="lnt"> 15
</span><span class="lnt"> 16
</span><span class="lnt"> 17
</span><span class="lnt"> 18
</span><span class="lnt"> 19
</span><span class="lnt"> 20
</span><span class="lnt"> 21
</span><span class="lnt"> 22
</span><span class="lnt"> 23
</span><span class="lnt"> 24
</span><span class="lnt"> 25
</span><span class="lnt"> 26
</span><span class="lnt"> 27
</span><span class="lnt"> 28
</span><span class="lnt"> 29
</span><span class="lnt"> 30
</span><span class="lnt"> 31
</span><span class="lnt"> 32
</span><span class="lnt"> 33
</span><span class="lnt"> 34
</span><span class="lnt"> 35
</span><span class="lnt"> 36
</span><span class="lnt"> 37
</span><span class="lnt"> 38
</span><span class="lnt"> 39
</span><span class="lnt"> 40
</span><span class="lnt"> 41
</span><span class="lnt"> 42
</span><span class="lnt"> 43
</span><span class="lnt"> 44
</span><span class="lnt"> 45
</span><span class="lnt"> 46
</span><span class="lnt"> 47
</span><span class="lnt"> 48
</span><span class="lnt"> 49
</span><span class="lnt"> 50
</span><span class="lnt"> 51
</span><span class="lnt"> 52
</span><span class="lnt"> 53
</span><span class="lnt"> 54
</span><span class="lnt"> 55
</span><span class="lnt"> 56
</span><span class="lnt"> 57
</span><span class="lnt"> 58
</span><span class="lnt"> 59
</span><span class="lnt"> 60
</span><span class="lnt"> 61
</span><span class="lnt"> 62
</span><span class="lnt"> 63
</span><span class="lnt"> 64
</span><span class="lnt"> 65
</span><span class="lnt"> 66
</span><span class="lnt"> 67
</span><span class="lnt"> 68
</span><span class="lnt"> 69
</span><span class="lnt"> 70
</span><span class="lnt"> 71
</span><span class="lnt"> 72
</span><span class="lnt"> 73
</span><span class="lnt"> 74
</span><span class="lnt"> 75
</span><span class="lnt"> 76
</span><span class="lnt"> 77
</span><span class="lnt"> 78
</span><span class="lnt"> 79
</span><span class="lnt"> 80
</span><span class="lnt"> 81
</span><span class="lnt"> 82
</span><span class="lnt"> 83
</span><span class="lnt"> 84
</span><span class="lnt"> 85
</span><span class="lnt"> 86
</span><span class="lnt"> 87
</span><span class="lnt"> 88
</span><span class="lnt"> 89
</span><span class="lnt"> 90
</span><span class="lnt"> 91
</span><span class="lnt"> 92
</span><span class="lnt"> 93
</span><span class="lnt"> 94
</span><span class="lnt"> 95
</span><span class="lnt"> 96
</span><span class="lnt"> 97
</span><span class="lnt"> 98
</span><span class="lnt"> 99
</span><span class="lnt">100
</span><span class="lnt">101
</span><span class="lnt">102
</span><span class="lnt">103
</span><span class="lnt">104
</span><span class="lnt">105
</span><span class="lnt">106
</span><span class="lnt">107
</span><span class="lnt">108
</span><span class="lnt">109
</span><span class="lnt">110
</span><span class="lnt">111
</span><span class="lnt">112
</span><span class="lnt">113
</span><span class="lnt">114
</span><span class="lnt">115
</span><span class="lnt">116
</span><span class="lnt">117
</span><span class="lnt">118
</span><span class="lnt">119
</span><span class="lnt">120
</span><span class="lnt">121
</span><span class="lnt">122
</span><span class="lnt">123
</span><span class="lnt">124
</span><span class="lnt">125
</span><span class="lnt">126
</span><span class="lnt">127
</span><span class="lnt">128
</span><span class="lnt">129
</span><span class="lnt">130
</span><span class="lnt">131
</span><span class="lnt">132
</span><span class="lnt">133
</span><span class="lnt">134
</span><span class="lnt">135
</span><span class="lnt">136
</span><span class="lnt">137
</span><span class="lnt">138
</span><span class="lnt">139
</span><span class="lnt">140
</span><span class="lnt">141
</span><span class="lnt">142
</span><span class="lnt">143
</span><span class="lnt">144
</span><span class="lnt">145
</span><span class="lnt">146
</span><span class="lnt">147
</span><span class="lnt">148
</span><span class="lnt">149
</span><span class="lnt">150
</span><span class="lnt">151
</span><span class="lnt">152
</span><span class="lnt">153
</span><span class="lnt">154
</span><span class="lnt">155
</span><span class="lnt">156
</span><span class="lnt">157
</span><span class="lnt">158
</span><span class="lnt">159
</span><span class="lnt">160
</span><span class="lnt">161
</span><span class="lnt">162
</span><span class="lnt">163
</span><span class="lnt">164
</span><span class="lnt">165
</span><span class="lnt">166
</span><span class="lnt">167
</span><span class="lnt">168
</span><span class="lnt">169
</span><span class="lnt">170
</span><span class="lnt">171
</span><span class="lnt">172
</span><span class="lnt">173
</span><span class="lnt">174
</span><span class="lnt">175
</span><span class="lnt">176
</span><span class="lnt">177
</span><span class="lnt">178
</span><span class="lnt">179
</span><span class="lnt">180
</span><span class="lnt">181
</span><span class="lnt">182
</span><span class="lnt">183
</span><span class="lnt">184
</span><span class="lnt">185
</span><span class="lnt">186
</span><span class="lnt">187
</span><span class="lnt">188
</span><span class="lnt">189
</span><span class="lnt">190
</span><span class="lnt">191
</span><span class="lnt">192
</span><span class="lnt">193
</span><span class="lnt">194
</span><span class="lnt">195
</span><span class="lnt">196
</span><span class="lnt">197
</span><span class="lnt">198
</span><span class="lnt">199
</span><span class="lnt">200
</span><span class="lnt">201
</span><span class="lnt">202
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">substitutions</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># Displayed in HA frontend</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">friendly_name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;Desktop Power Control&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">friendly_name_short</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;Desktop&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">hostname</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;desktop-power-control&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">esphome</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">${hostname}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># Shows up in UI</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">comment</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;Remote power button for ${friendly_name_short}.&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">esp8266</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># Specifically a &#39;ESP8285H16&#39; with 2MB built in flash</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># See: https://docs.platformio.org/en/stable/boards/espressif8266/esp8285.html</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">board</span><span class="p">:</span><span class="w"> </span><span class="l">esp8285</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">logger</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">level</span><span class="p">:</span><span class="w"> </span><span class="l">INFO</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># See: https://esphome.io/guides/configuration-types.html#packages</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">packages</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># General</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">wifi</span><span class="p">:</span><span class="w"> </span>!<span class="l">include ../../packages/wifi.yaml</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">mqtt</span><span class="p">:</span><span class="w"> </span>!<span class="l">include ../../packages/mqtt.yaml</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">time</span><span class="p">:</span><span class="w"> </span>!<span class="l">include ../../packages/ntp.yaml</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">ota</span><span class="p">:</span><span class="w"> </span>!<span class="l">include ../../packages/ota.yaml</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">web_server</span><span class="p">:</span><span class="w"> </span>!<span class="l">include ../../packages/web_server.yaml</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">status_led</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">pin</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">number</span><span class="p">:</span><span class="w"> </span><span class="l">GPIO02</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">inverted</span><span class="p">:</span><span class="w"> </span><span class="kc">True</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># Keep track of weather or not case button press should be forwarded to the motherboard</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">globals</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="l">glbl_relay_latched</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">bool</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">restore_value</span><span class="p">:</span><span class="w"> </span><span class="kc">no</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">initial_value</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;true&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">script</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="l">regular_press</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">mode</span><span class="p">:</span><span class="w"> </span><span class="l">single</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">then</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">output.turn_on</span><span class="p">:</span><span class="w"> </span><span class="l">out_relay</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">delay</span><span class="p">:</span><span class="w"> </span><span class="l">.5s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">output.turn_off</span><span class="p">:</span><span class="w"> </span><span class="l">out_relay</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="l">long_press</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">mode</span><span class="p">:</span><span class="w"> </span><span class="l">single</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">then</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">output.turn_on</span><span class="p">:</span><span class="w"> </span><span class="l">out_relay</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="c"># MB seems to respond to 5s, add 2 just to be safe</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">delay</span><span class="p">:</span><span class="w"> </span><span class="l">7s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">output.turn_off</span><span class="p">:</span><span class="w"> </span><span class="l">out_relay</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">button</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># We expose a button to the HA web UI that mimics the &#34;forceful&#34; power down sequence</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;${friendly_name_short} Long Press&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="l">btn_forceful_down</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">platform</span><span class="p">:</span><span class="w"> </span><span class="l">template</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">on_press</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">lambda</span><span class="p">:</span><span class="w"> </span><span class="p">|-</span><span class="sd">
</span></span></span><span class="line"><span class="cl"><span class="sd">          // If the power state is off, we&#39;ll emit a WARN level message before running the script
</span></span></span><span class="line"><span class="cl"><span class="sd">          if( !id(inp_power_status).state ){
</span></span></span><span class="line"><span class="cl"><span class="sd">            ESP_LOGW(&#34;forcefulShutdown&#34;, &#34;Power state is OFF but forceful shutdown requested...&#34;);
</span></span></span><span class="line"><span class="cl"><span class="sd">          } else {
</span></span></span><span class="line"><span class="cl"><span class="sd">            ESP_LOGW(&#34;forcefulShutdown&#34;, &#34;Power state is ON. Forceful shutdown requested...&#34;);
</span></span></span><span class="line"><span class="cl"><span class="sd">          }
</span></span></span><span class="line"><span class="cl"><span class="sd">          id(long_press).execute();</span><span class="w">          
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">binary_sensor</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># React to connection status, if needed</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">&lt;&lt;</span><span class="p">:</span><span class="w"> </span>!<span class="l">include ../../packages/binary_sensor/connection_status.config.yaml</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;${friendly_name_short} WiFi Config Button&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">platform</span><span class="p">:</span><span class="w"> </span><span class="l">gpio</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="l">inp_wifi_cfg_btn</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">entity_category</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;diagnostic&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">icon</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;mdi:radiobox-marked&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">pin</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">number</span><span class="p">:</span><span class="w"> </span><span class="l">GPIO04</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">mode</span><span class="p">:</span><span class="w"> </span><span class="l">INPUT_PULLUP</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">inverted</span><span class="p">:</span><span class="w"> </span><span class="kc">True</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;${friendly_name_short} Case Button&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">platform</span><span class="p">:</span><span class="w"> </span><span class="l">gpio</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="l">inp_pc_case_btn_status</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">entity_category</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;diagnostic&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">icon</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;mdi:power-standby&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">pin</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">number</span><span class="p">:</span><span class="w"> </span><span class="l">GPIO10</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">mode</span><span class="p">:</span><span class="w"> </span><span class="l">INPUT_PULLUP</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">inverted</span><span class="p">:</span><span class="w"> </span><span class="kc">True</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">on_press</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">then</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">if</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">condition</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">lambda</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;return id(glbl_relay_latched);&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">then</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span>- <span class="nt">output.turn_on</span><span class="p">:</span><span class="w"> </span><span class="l">out_relay</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">else</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span>- <span class="nt">logger.log</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;PC Case button press but disarmed!&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">on_release</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">then</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">if</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">condition</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">lambda</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;return id(glbl_relay_latched);&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">then</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span>- <span class="nt">output.turn_off</span><span class="p">:</span><span class="w"> </span><span class="l">out_relay</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">else</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span>- <span class="nt">logger.log</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;PC Case button release but disarmed!&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c">##</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c"># Press is momentary quick</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">on_click</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">then</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">lambda</span><span class="p">:</span><span class="w"> </span><span class="p">|-</span><span class="sd">
</span></span></span><span class="line"><span class="cl"><span class="sd">            // If relay isn&#39;t latched, do nothing
</span></span></span><span class="line"><span class="cl"><span class="sd">            if( !id(glbl_relay_latched) ){
</span></span></span><span class="line"><span class="cl"><span class="sd">              ESP_LOGD(&#34;caseBtnPress&#34;, &#34;button pressed, not latched so doing nothing.&#34;);
</span></span></span><span class="line"><span class="cl"><span class="sd">              return;
</span></span></span><span class="line"><span class="cl"><span class="sd">            }
</span></span></span><span class="line"><span class="cl"><span class="sd">            ESP_LOGD(&#34;caseBtnPress&#34;, &#34;button pressed, latched. Toggling power now...&#34;);
</span></span></span><span class="line"><span class="cl"><span class="sd">            id(sw_pc_power).toggle();</span><span class="w">            
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">on_multi_click</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">timing</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="kc">ON</span><span class="w"> </span><span class="l">for at most 1s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="kc">OFF</span><span class="w"> </span><span class="l">for at most 2s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="kc">ON</span><span class="w"> </span><span class="l">for at most 1s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="kc">OFF</span><span class="w"> </span><span class="l">for at most 2s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="kc">ON</span><span class="w"> </span><span class="l">for at most 1s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="kc">OFF</span><span class="w"> </span><span class="l">for at most 2s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">then</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="c"># We&#39;d want to press a virtual / template button for hard power down</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="c"># That template button would run a script that just raised the output hight for 10s</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">logger.log</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;Triple clicked!&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">button.press</span><span class="p">:</span><span class="w"> </span><span class="l">btn_forceful_down</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;${friendly_name_short} Power Status&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">platform</span><span class="p">:</span><span class="w"> </span><span class="l">gpio</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="l">inp_power_status</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">device_class</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;power&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">entity_category</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;diagnostic&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">icon</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;mdi:power-settings&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">pin</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">number</span><span class="p">:</span><span class="w"> </span><span class="l">GPIO12</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">mode</span><span class="p">:</span><span class="w"> </span><span class="l">INPUT_PULLUP</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">inverted</span><span class="p">:</span><span class="w"> </span><span class="kc">True</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">switch</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;${friendly_name_short} Relay Latch&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">platform</span><span class="p">:</span><span class="w"> </span><span class="l">template</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="l">sw_relay_mode</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">device_class</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;switch&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">icon</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;mdi:link-variant&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">entity_category</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;config&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">lambda</span><span class="p">:</span><span class="w"> </span><span class="p">|-</span><span class="sd">
</span></span></span><span class="line"><span class="cl"><span class="sd">      if (id(glbl_relay_latched)) {
</span></span></span><span class="line"><span class="cl"><span class="sd">        return true;
</span></span></span><span class="line"><span class="cl"><span class="sd">      } else {
</span></span></span><span class="line"><span class="cl"><span class="sd">        return false;
</span></span></span><span class="line"><span class="cl"><span class="sd">      }</span><span class="w">      
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">turn_on_action</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">globals.set</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="l">glbl_relay_latched</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">value</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;true&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">turn_off_action</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">globals.set</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="l">glbl_relay_latched</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">value</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;false&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;${friendly_name_short} Power&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="l">sw_pc_power</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">platform</span><span class="p">:</span><span class="w"> </span><span class="l">template</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">icon</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;mdi:power-plug&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">device_class</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;switch&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">lambda</span><span class="p">:</span><span class="w"> </span><span class="p">|-</span><span class="sd">
</span></span></span><span class="line"><span class="cl"><span class="sd">      if (id(inp_power_status).state) {
</span></span></span><span class="line"><span class="cl"><span class="sd">        return true;
</span></span></span><span class="line"><span class="cl"><span class="sd">      } else {
</span></span></span><span class="line"><span class="cl"><span class="sd">        return false;
</span></span></span><span class="line"><span class="cl"><span class="sd">      }</span><span class="w">      
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c"># Mimic the user pressing the button</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">turn_on_action</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">script.execute</span><span class="p">:</span><span class="w"> </span><span class="l">regular_press</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">turn_off_action</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">script.execute</span><span class="p">:</span><span class="w"> </span><span class="l">regular_press</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">output</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">platform</span><span class="p">:</span><span class="w"> </span><span class="l">gpio</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="l">out_relay</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">pin</span><span class="p">:</span><span class="w"> </span><span class="l">GPIO5</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div>]]></description></item><item><title>Using ESPHome with the Treatlife DS03</title><link>https://karlquinsland.com/treatlife-ds03-esphome/</link><pubDate>Thu, 09 Jun 2022 00:00:00 +0000</pubDate><author>Author</author><guid>https://karlquinsland.com/treatlife-ds03-esphome/</guid><description><![CDATA[<div class="details admonition tip open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-lightbulb fa-fw"></i>Post depreciation notice<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">This is an update to the <a href="/treatlife-ds03-tasmota-autoconfig-with-homeassistant/" rel=""><code>Fixing Home Assistant discovery with Tasmota on the Treatlife DS03</code> post</a>.</div>
        </div>
    </div>
<h1 id="tasmota-reliability">Tasmota reliability</h1>
<p>A few months ago, I started to notice some bizarre behavior with the DS03 ceiling fan controllers that I had previously flashed with Tasmota.
Very regularly, the devices would crash and reboot! I almost never noticed unless I was explicitly looking at the uptime / boot count graphs for the devices but every once in a while, the device would reboot <em>right as I was trying to control it remotely</em>.</p>
<p>I was able to confirm that the rules I was using to &lsquo;augment&rsquo; the Home Assistant auto-discovery payload were the culprit. Odd since nothing had changed; only the version of tasmota has been changing.</p>
<p>While it&rsquo;s not clear <em>what</em> the issue is, it <strong>probably</strong> has something to do with RAM exhaustion.
The details are <a href="https://github.com/arendst/Tasmota/issues/15636#issuecomment-1130511474" target="_blank" rel="noopener noreffer">in Tasmota issue #15636</a> if your curious.</p>
<p>The Tasmota rules were a workaround to a broader problem: tasmota offers very little to customize <em>how</em> the entity is advertised to Home Assistant. Since the workaround was no longer working, the next logical step is to re-evaluate if Tasmota is the appropriate firmware for the device.</p>
<h1 id="using-esphome-with-the-ds03">Using ESPHome with the DS03</h1>
<div class="details admonition info open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-info-circle fa-fw"></i>Beta software release<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><p>I <strong>strongly</strong> prefer MQTT for my Home Automation interoperability.</p>
<p>The MQTT &lt;-&gt; Home Assistant mechanism in ESPHome has been playing second fiddle to the native ESPHome &lt;-&gt; Home Assistant API as of late so there are more bugs and usability issues. As such, the YAML below depends on a fix for <code>mqtt.fan</code> component that exists in the  <a href="https://github.com/esphome/esphome/releases/tag/2022.6.0b2" target="_blank" rel="noopener noreffer">2022.06.b2</a> or later release.</p>
<p>Specifically, <a href="https://github.com/esphome/esphome/pull/3537" target="_blank" rel="noopener noreffer">this</a> commit.</p>
<p>If you do not use MQTT for your ESPHome &lt;-&gt; Home Assistant linking, you should be fine using the latest &lsquo;stable&rsquo; release of ESPHome.</p>
</div>
        </div>
    </div>
<p>After <a href="https://esphome.io/guides/migrate_sonoff_tasmota.html" target="_blank" rel="noopener noreffer">migrating the tasmota install to ESPHome</a>, I am happy to report that ESPHome is running on the DS03 and that the full/proper MQTT auto-discovery payload is published. 🥳</p>
<p>Here is a &lsquo;reference&rsquo; YAML file that is similar to the ones I use in &lsquo;production&rsquo;. You will need to add your own MQTT/WiFi&hellip; etc configuration.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">substitutions</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">hostname</span><span class="p">:</span><span class="w"> </span><span class="l">YourHostNameHere</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">friendly_name</span><span class="p">:</span><span class="w"> </span><span class="l">YourDeviceNameHere</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">esphome</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">${hostname}</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">platform</span><span class="p">:</span><span class="w"> </span><span class="l">ESP8266</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">board</span><span class="p">:</span><span class="w"> </span><span class="l">esp01_1m</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># Enable logging</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">logger</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">level</span><span class="p">:</span><span class="w"> </span><span class="l">INFO</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># Uses a TuYa MCU to drive the power components</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># See: https://esphome.io/components/tuya.html</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">##</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">tuya</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># See: https://esphome.io/components/uart.html</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">uart</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">rx_pin</span><span class="p">:</span><span class="w"> </span><span class="l">GPIO3</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">tx_pin</span><span class="p">:</span><span class="w"> </span><span class="l">GPIO1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># Not sure why/where/how this error shows up but seems functional as is /shrug</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># [E][uart:015]:   Invalid baud_rate: Integration requested baud_rate 9600 but you have 115200!</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">baud_rate</span><span class="p">:</span><span class="w"> </span><span class="m">115200</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># See: https://esphome.io/components/light/tuya.html</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">light</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">${friendly_name} Light</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="l">device_light</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">platform</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;tuya&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">dimmer_datapoint</span><span class="p">:</span><span class="w"> </span><span class="m">10</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">switch_datapoint</span><span class="p">:</span><span class="w"> </span><span class="m">9</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">min_value</span><span class="p">:</span><span class="w"> </span><span class="m">100</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">max_value</span><span class="p">:</span><span class="w"> </span><span class="m">1000</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">icon</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;mdi:ceiling-fan-light&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">restore_mode</span><span class="p">:</span><span class="w"> </span><span class="l">ALWAYS_OFF</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># See: https://esphome.io/components/fan/tuya.html</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">fan</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">${friendly_name} Speed</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="l">device_fan</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">platform</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;tuya&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">switch_datapoint</span><span class="p">:</span><span class="w"> </span><span class="m">1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">speed_datapoint</span><span class="p">:</span><span class="w"> </span><span class="m">3</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">speed_count</span><span class="p">:</span><span class="w"> </span><span class="m">4</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">icon</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;mdi:ceiling-fan&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">restore_mode</span><span class="p">:</span><span class="w"> </span><span class="l">ALWAYS_OFF</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div>]]></description></item><item><title>Configuring additional ZwaveJS entities in Home Assistant over MQTT</title><link>https://karlquinsland.com/zwavejs-autodiscovery-additional-entities/</link><pubDate>Thu, 12 May 2022 00:00:00 +0000</pubDate><author>Author</author><guid>https://karlquinsland.com/zwavejs-autodiscovery-additional-entities/</guid><description><![CDATA[<p>This is a super quick &ldquo;because the official docs didn&rsquo;t make it super clear so here&rsquo;s what ended up working for me&rdquo; post.</p>
<hr>
<!-- markdownlint-disable-file MD033 -->
<p>After some <a href="https://karlquinsland.com/venstar-t7850-teardown-review/#an-update-on-wifi-connectivity" rel="">very disappointing WiFi connectivity issues</a>, I settled on a Zwave based thermostat to replace the Venstar thermostat.</p>
<p>After installing the Honeywell TH6320 and connecting it to the ZwaveJS gateway, a new `climate`` entity appeared in Home Assistant. From there, I was able to see/control:</p>
<ul>
<li>The current thermostat setpoint/mode</li>
<li>The current air temp and humidity</li>
<li>The current battery level / if the thermostat thought the battery was low</li>
</ul>
<p>I knew that it was possible to adjust the the screen backlight from the thermostat itself so I was a bit confused when there was no such configuration entity exposed in Home Assistant.</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        Note the `Idle_brightness` sensor. That&#39;s not part of the &#39;default&#39; zwavejs2mqtt install.
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>After playing around with the ZwaveJS2MQTT web interface for bit, I discovered that it was possible to adjust the backlight brightness&hellip;and over 40 other settings under the <code>Configuration v4</code> section.</p>
<p>I can totally understand why only the &ldquo;core&rdquo; functionality would be automatically exposed to Home Assistant; most of the 40+ knobs are things that do not need to be set beyond the initial installation.</p>
<p>So, How do I go about getting ZwaveJS2MQTT to automatically tell Home Assistant about the current backlight level?</p>
<h2 id="exposing-idle-brightness-to-home-assistant-as-a-sensor">Exposing &lsquo;idle brightness&rsquo; to Home Assistant as a Sensor</h2>
<p>From the <code>Configuration v4</code> tab for the thermostat node, I found the input field <code>[4-112-0-39] Idle Brightness</code> which let me control the thermostat screen backlight level.
I don&rsquo;t know what the numbers mean, but they are important / uniquely identify <em>a specific setting</em>.</p>
<div class="details admonition note open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-pencil-alt fa-fw"></i>Note<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">If you are using this as a guide but for a <em>different</em> setting (perhaps you want to keep an eye on <code>[4-112-0-28] Minimum Cool Temperature</code>, for example) then you will want to substitute your parameter setting &lsquo;address&rsquo; as appropriate.</div>
        </div>
    </div>
<p>After some more experimentation and trying to grok <a href="https://zwave-js.github.io/zwavejs2mqtt/#/homeassistant/homeassistant-mqtt?id=add-new-component" target="_blank" rel="noopener noreffer">documentation</a>, I figured out how to get ZwaveJS to advertise the current value for the backlight brightness as a sensor in Home Assistant.</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        The &#39;HOME ASSISTANT&#39; tab of my thermostats&#39; page.
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>Here&rsquo;s how to do it:</p>
<ul>
<li>Select the <code>node</code> in question from the <code>Control Panel</code> page on the ZwaveJS2MQTT web UI. In this case, you can see that my thermostat is node <code>4</code>. Yours will likely be different.</li>
<li>Select the <code>Home Assistant</code> tab from the left. You can see it selected in the above screenshot.</li>
<li>In the blank <code>Hass Device JSON</code> box, paste the JSON document that describes the sensor / entity you wish to expose to Home Assistant. I struggled for some time trying to figure out what the document should look like but was able to &lsquo;reverse engineer&rsquo; a working payload by studying the <code>sensor_humidity_air</code> entity that was automatically created.</li>
<li>Then click the <code>ADD</code> button that should have activated just above the <code>Hass Device JSON</code>. A new row should appear in the <code>Home Assistant - Devices table</code></li>
<li>Click the newly added row so the <code>Hass Device JSON</code> field is populated with the JSON document you have added.</li>
<li>Click the <code>UPDATE</code> button that should appear just above the <code>Hass Device JSON</code> label</li>
<li>Assuming no issues, this will send the MQTT message which tells Home Assistant about your new sensor. You may wish to use a MQTT broker inspection app to monitor the exact payload that is sent to the <code>homeassistant/...</code> topic as well as <code>tail -f home-assistant.log</code>. If Home Assistant gets the message, any validation errors will show up in the HA log.</li>
<li>Once you are satisfied with how the entity is presented in Home Assistant, click the <code>STORE</code> button just below the <code>Home Assistant - Devices</code> heading on the ZwaveJS2MQTT web UI.</li>
</ul>
<p>When all is said and done, this is what you should see:</p>
<figure >

    
        
    

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<h3 id="example-payload">Example payload</h3>
<p>Here is a (slightly edited) version of the JSON document I added via the <code>Hass Device JSON</code> entry.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;type&#34;</span><span class="p">:</span> <span class="s2">&#34;sensor&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;object_id&#34;</span><span class="p">:</span> <span class="s2">&#34;idle_brightness&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;discovery_payload&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;value_template&#34;</span><span class="p">:</span> <span class="s2">&#34;{{ value_json.value }}&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;state_topic&#34;</span><span class="p">:</span> <span class="s2">&#34;zwave/YourThermostat_NameHere/112/0/39&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;json_attributes_topic&#34;</span><span class="p">:</span> <span class="s2">&#34;zwave/YourThermostat_NameHere/112/0/39&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;device&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;identifiers&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;zwavejs2mqtt_0xdeadbeef_node4&#34;</span>
</span></span><span class="line"><span class="cl">      <span class="p">],</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;manufacturer&#34;</span><span class="p">:</span> <span class="s2">&#34;Honeywell&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;model&#34;</span><span class="p">:</span> <span class="s2">&#34;T6 Pro Z-Wave Programmable Thermostat (TH6320ZW)&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;YourThermostat NameHere&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;sw_version&#34;</span><span class="p">:</span> <span class="s2">&#34;1.3&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;YourThermostat NameHere idle_brightness&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;unique_id&#34;</span><span class="p">:</span> <span class="s2">&#34;zwavejs2mqtt_0xdeadbeef_4-112-0-Idle_Brightness&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;entity_category&#34;</span><span class="p">:</span> <span class="s2">&#34;config&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;icon&#34;</span><span class="p">:</span> <span class="s2">&#34;mdi:brightness-percent&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;discoveryTopic&#34;</span><span class="p">:</span> <span class="s2">&#34;sensor/YourThermostat_NameHere/idle_brightness/config&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;values&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;112-0-39&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="p">],</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;persistent&#34;</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;ignoreDiscovery&#34;</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;id&#34;</span><span class="p">:</span> <span class="s2">&#34;sensor_idle_brightness&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>I have replaced a few things in the example payload. You will want to retrieve the correct values for your payload from one of the automatically generated payloads. I used the <code>sensor_humidity_air</code> device as a starting point for my payload.</p>
<h2 id="ok-but-what-about-writing-to-the-thermostat">Ok, but what about writing to the thermostat?</h2>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        A basic &#39;helper&#39; widget for use in Home Assistant Automations.
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>Once the sensor exists in Home Assistant, you will probably want to use it in an automation.
Here is a simple automation that watches a basic number input widget and sets the backlight brightness for the thermostat based on what the widget is set to:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">alias</span><span class="p">:</span><span class="w"> </span><span class="l">Sync thermostat brightness to input select</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="l">An Example automation.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">trigger</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">platform</span><span class="p">:</span><span class="w"> </span><span class="l">state</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">entity_id</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">sensor.yourthermostat_namehere_idle_brightness</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="l">physical</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">platform</span><span class="p">:</span><span class="w"> </span><span class="l">state</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">entity_id</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">input_number.thermostat_backlight</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="l">virtual</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">condition</span><span class="p">:</span><span class="w"> </span><span class="p">[]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">action</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">choose</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">conditions</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="nt">condition</span><span class="p">:</span><span class="w"> </span><span class="l">trigger</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="l">virtual</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">sequence</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="nt">service</span><span class="p">:</span><span class="w"> </span><span class="l">mqtt.publish</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">data</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">topic</span><span class="p">:</span><span class="w"> </span><span class="l">zwave/YourThermostat_NameHere/112/0/39/set</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">payload_template</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;{{trigger.to_state.state}}&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">conditions</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="nt">condition</span><span class="p">:</span><span class="w"> </span><span class="l">trigger</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="l">physical</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">sequence</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="nt">service</span><span class="p">:</span><span class="w"> </span><span class="l">input_number.set_value</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">target</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">entity_id</span><span class="p">:</span><span class="w"> </span><span class="l">input_number.thermostat_backlight</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">data_template</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">value</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;{{trigger.to_state.state | float}}&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">default</span><span class="p">:</span><span class="w"> </span><span class="p">[]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">mode</span><span class="p">:</span><span class="w"> </span><span class="l">single</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">max_exceeded</span><span class="p">:</span><span class="w"> </span><span class="l">silent</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>This <em>works</em> but it&rsquo;s not <em>automagic</em>. We can do better!</p>
<h2 id="more-automagic-more-better">More Automagic, More Better</h2>
<p>The primary downside with the above automation is that the user (read: you) needs to create the <code>input_number</code> widget and then spend the time telling Home Assistant what to do when the value changes.</p>
<p>This isn&rsquo;t a particularly difficult task - only ~30 lines of yaml&hellip; but what if we didn&rsquo;t have to do that?</p>
<p>What if Home Assistant had a robust auto discovery mechanism that we could take advantage of to <em>automagically</em> set up a basic input widget that would transmit the necessary MQTT payload to adjust the backlight &hellip; automatically?</p>
<p>I have good news and bad news.</p>
<p>The good news is that we totally can do this. 🎉</p>
<p>The bad news is that ZwaveJS2MQTT does not appear to support the <a href="https://www.home-assistant.io/integrations/input_select/" target="_blank" rel="noopener noreffer"><code>input_select</code></a> type of entity that we&rsquo;ll need to pull this off. 👎</p>
<p>I am not super familiar with the ZwaveJS2MQTT code base, but it looks like there is no validation on the JSON you enter under the <code>Hass Device JSON</code> field but there <em>is</em> some validation / filtering on the MQTT message that is sent for auto discovery. <a href="https://github.com/zwave-js/zwavejs2mqtt/blob/master/hass/configurations.ts#L6" target="_blank" rel="noopener noreffer">ZwaveJS2MQTT does not seem to support <code>select</code> components via MQTT</a> so the payload that is sent to Home Assistant is incomplete and results in errors:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">│ ERROR <span class="o">(</span>MainThread<span class="o">)</span> <span class="o">[</span>homeassistant.util.logging<span class="o">]</span> Exception in discovery_callback when dispatching <span class="s1">&#39;mqtt_discovery_updated_(&#39;</span><span class="k">select</span><span class="s1">&#39;, &#39;</span>YourThermostat NameHere idle_brightness │
</span></span><span class="line"><span class="cl">│ Traceback <span class="o">(</span>most recent call last<span class="o">)</span>:
</span></span><span class="line"><span class="cl">│   File <span class="s2">&#34;/usr/src/homeassistant/homeassistant/components/mqtt/mixins.py&#34;</span>, line 724, in discovery_callback      
</span></span><span class="line"><span class="cl">│     await self._discovery_update<span class="o">(</span>payload<span class="o">)</span>    
</span></span><span class="line"><span class="cl">│   File <span class="s2">&#34;/usr/src/homeassistant/homeassistant/components/mqtt/mixins.py&#34;</span>, line 886, in discovery_update        
</span></span><span class="line"><span class="cl">│     <span class="nv">config</span> <span class="o">=</span> self.config_schema<span class="o">()(</span>discovery_payload<span class="o">)</span>                                                          
</span></span><span class="line"><span class="cl">│   File <span class="s2">&#34;/usr/local/lib/python3.9/site-packages/voluptuous/validators.py&#34;</span>, line 232, in __call__               
</span></span><span class="line"><span class="cl">│     <span class="k">return</span> self._exec<span class="o">((</span>Schema<span class="o">(</span>val<span class="o">)</span> <span class="k">for</span> val in self.validators<span class="o">)</span>, v<span class="o">)</span>                                            
</span></span><span class="line"><span class="cl">│   File <span class="s2">&#34;/usr/local/lib/python3.9/site-packages/voluptuous/validators.py&#34;</span>, line 355, in _exec                  
</span></span><span class="line"><span class="cl">│     raise e <span class="k">if</span> self.msg is None <span class="k">else</span> AllInvalid<span class="o">(</span>self.msg, <span class="nv">path</span><span class="o">=</span>path<span class="o">)</span>                                          
</span></span><span class="line"><span class="cl">│   File <span class="s2">&#34;/usr/local/lib/python3.9/site-packages/voluptuous/validators.py&#34;</span>, line 351, in _exec                  
</span></span><span class="line"><span class="cl">│     <span class="nv">v</span> <span class="o">=</span> func<span class="o">(</span>v<span class="o">)</span>                              
</span></span><span class="line"><span class="cl">│   File <span class="s2">&#34;/usr/local/lib/python3.9/site-packages/voluptuous/schema_builder.py&#34;</span>, line 272, in __call__           
</span></span><span class="line"><span class="cl">│     <span class="k">return</span> self._compiled<span class="o">([]</span>, data<span class="o">)</span>          
</span></span><span class="line"><span class="cl">│   File <span class="s2">&#34;/usr/local/lib/python3.9/site-packages/voluptuous/schema_builder.py&#34;</span>, line 818, in validate_callable  
</span></span><span class="line"><span class="cl">│     <span class="k">return</span> schema<span class="o">(</span>data<span class="o">)</span>                      
</span></span><span class="line"><span class="cl">│   File <span class="s2">&#34;/usr/local/lib/python3.9/site-packages/voluptuous/schema_builder.py&#34;</span>, line 272, in __call__           
</span></span><span class="line"><span class="cl">│     <span class="k">return</span> self._compiled<span class="o">([]</span>, data<span class="o">)</span>          
</span></span><span class="line"><span class="cl">│   File <span class="s2">&#34;/usr/local/lib/python3.9/site-packages/voluptuous/schema_builder.py&#34;</span>, line 595, in validate_dict      
</span></span><span class="line"><span class="cl">│     <span class="k">return</span> base_validate<span class="o">(</span>path, iteritems<span class="o">(</span>data<span class="o">)</span>, out<span class="o">)</span>                                                          
</span></span><span class="line"><span class="cl">│   File <span class="s2">&#34;/usr/local/lib/python3.9/site-packages/voluptuous/schema_builder.py&#34;</span>, line 433, in validate_mapping   
</span></span><span class="line"><span class="cl">│     raise er.MultipleInvalid<span class="o">(</span>errors<span class="o">)</span>         
</span></span><span class="line"><span class="cl">│ voluptuous.error.MultipleInvalid: required key not provided @ data<span class="o">[</span><span class="s1">&#39;options&#39;</span><span class="o">]</span>   
</span></span></code></pre></td></tr></table>
</div>
</div><p>While it would be nice if ZwaveJS2MQTT would support more device types, we have a pretty simple fix: use another device to publish a valid configuration payload.</p>
<p>And as it turns out, it&rsquo;s <em>trivial</em> to get Home Assistant to publish an arbitrary payload to an arbitrary topic when it starts up.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">alias</span><span class="p">:</span><span class="w"> </span><span class="l">Autoconfigure Thermostat Backlight select</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="p">&gt;-</span><span class="sd">
</span></span></span><span class="line"><span class="cl"><span class="sd">  On HA start up, publish MQTT payload so HA auto-discovers the input_select to
</span></span></span><span class="line"><span class="cl"><span class="sd">  automate thermostat backlight brightness</span><span class="w">  
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">trigger</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">platform</span><span class="p">:</span><span class="w"> </span><span class="l">homeassistant</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">event</span><span class="p">:</span><span class="w"> </span><span class="l">start</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">condition</span><span class="p">:</span><span class="w"> </span><span class="p">[]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">action</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">service</span><span class="p">:</span><span class="w"> </span><span class="l">mqtt.publish</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">data</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">topic</span><span class="p">:</span><span class="w"> </span><span class="l">homeassistant/select/YourThermostat_NameHere/idle_brightness/config</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">payload</span><span class="p">:</span><span class="w"> </span><span class="p">&gt;-</span><span class="sd">
</span></span></span><span class="line"><span class="cl"><span class="sd">        </span><span class="w">        </span>{<span class="s2">&#34;options&#34;</span><span class="p">:[</span><span class="s2">&#34;0&#34;</span><span class="p">,</span><span class="s2">&#34;1&#34;</span><span class="p">,</span><span class="s2">&#34;2&#34;</span><span class="p">,</span><span class="s2">&#34;3&#34;</span><span class="p">,</span><span class="s2">&#34;4&#34;</span><span class="p">,</span><span class="s2">&#34;5&#34;</span><span class="p">],</span><span class="s2">&#34;name&#34;</span><span class="p">:</span><span class="s2">&#34;MainThermostat idle_brightness&#34;</span><span class="p">,</span><span class="s2">&#34;state_topic&#34;</span><span class="p">:</span><span class="s2">&#34;zwave/YourThermostat_NameHere/112/0/39&#34;</span><span class="p">,</span><span class="s2">&#34;value_template&#34;</span><span class="p">:</span><span class="s2">&#34;{{&#39;{{value_json.value}}&#39;}}&#34;</span><span class="p">,</span><span class="s2">&#34;command_topic&#34;</span><span class="p">:</span><span class="s2">&#34;zwave/YourThermostat_NameHere/112/0/39/set&#34;</span><span class="p">,</span><span class="s2">&#34;command_template&#34;</span><span class="p">:</span><span class="s2">&#34;{{&#39;{{value}}&#39;}}&#34;</span><span class="p">,</span><span class="s2">&#34;unique_id&#34;</span><span class="p">:</span><span class="s2">&#34;zwavejs2mqtt_0xdeadbeef_4-112-0-Idle_Brightness_Select&#34;</span><span class="p">,</span><span class="s2">&#34;device&#34;</span><span class="p">:</span>{<span class="s2">&#34;identifiers&#34;</span><span class="p">:[</span><span class="s2">&#34;zwavejs2mqtt_0xdeadbeef_node4&#34;</span><span class="p">],</span><span class="s2">&#34;manufacturer&#34;</span><span class="p">:</span><span class="s2">&#34;Honeywell&#34;</span><span class="p">,</span><span class="s2">&#34;model&#34;</span><span class="p">:</span><span class="s2">&#34;T6ProZ-WaveProgrammableThermostat(TH6320ZW)&#34;</span><span class="p">,</span><span class="s2">&#34;name&#34;</span><span class="p">:</span><span class="s2">&#34;MainThermostat&#34;</span><span class="p">,</span><span class="s2">&#34;sw_version&#34;</span><span class="p">:</span><span class="s2">&#34;1.3&#34;</span>}<span class="p">,</span><span class="s2">&#34;entity_category&#34;</span><span class="p">:</span><span class="s2">&#34;config&#34;</span><span class="p">,</span><span class="s2">&#34;icon&#34;</span><span class="p">:</span><span class="s2">&#34;mdi:brightness-percent&#34;</span>}<span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">mode</span><span class="p">:</span><span class="w"> </span><span class="l">single</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><div class="details admonition important open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-pencil-alt fa-fw"></i>Notice<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><p>If you look carefully, you will notice two things:</p>
<ul>
<li>The json payload has been escaped and turned into a string</li>
<li>The templates inside the string are <a href="https://community.home-assistant.io/t/how-can-i-use-escape-characters-while-templating/135324" target="_blank" rel="noopener noreffer"><em>further</em> escaped</a> by wrapping them in <code>{{ '</code> and <code>'}}</code>.</li>
</ul>
</div>
        </div>
    </div>
<p>Here is a pretty formatted JSON document:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">   <span class="nt">&#34;options&#34;</span><span class="p">:[</span>
</span></span><span class="line"><span class="cl">      <span class="s2">&#34;0&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="s2">&#34;1&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="s2">&#34;2&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="s2">&#34;3&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="s2">&#34;4&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="s2">&#34;5&#34;</span>
</span></span><span class="line"><span class="cl">   <span class="p">],</span>
</span></span><span class="line"><span class="cl">   <span class="nt">&#34;name&#34;</span><span class="p">:</span><span class="s2">&#34;YourThermostat NameHere idle_brightness&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">   <span class="nt">&#34;state_topic&#34;</span><span class="p">:</span><span class="s2">&#34;zwave/YourThermostat_NameHere/112/0/39&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">   <span class="nt">&#34;value_template&#34;</span><span class="p">:</span><span class="s2">&#34;{{ &#39;{{value_json.value}}&#39; }}&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">   <span class="nt">&#34;command_topic&#34;</span><span class="p">:</span><span class="s2">&#34;zwave/YourThermostat_NameHere/112/0/39/set&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">   <span class="nt">&#34;command_template&#34;</span><span class="p">:</span><span class="s2">&#34;{{ &#39;{{value}}&#39; }}&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">   <span class="nt">&#34;unique_id&#34;</span><span class="p">:</span><span class="s2">&#34;zwavejs2mqtt_0xdeadbeef_4-112-0-Idle_Brightness_Select&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">   <span class="nt">&#34;device&#34;</span><span class="p">:{</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;identifiers&#34;</span><span class="p">:[</span>
</span></span><span class="line"><span class="cl">         <span class="s2">&#34;zwavejs2mqtt_0xdeadbeef_node4&#34;</span>
</span></span><span class="line"><span class="cl">      <span class="p">],</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;manufacturer&#34;</span><span class="p">:</span><span class="s2">&#34;Honeywell&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;model&#34;</span><span class="p">:</span><span class="s2">&#34;T6 Pro Z-Wave Programmable Thermostat (TH6320ZW)&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;name&#34;</span><span class="p">:</span><span class="s2">&#34;YourThermostat NameHere&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;sw_version&#34;</span><span class="p">:</span><span class="s2">&#34;1.3&#34;</span>
</span></span><span class="line"><span class="cl">   <span class="p">},</span>
</span></span><span class="line"><span class="cl">   <span class="nt">&#34;entity_category&#34;</span><span class="p">:</span><span class="s2">&#34;config&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">   <span class="nt">&#34;icon&#34;</span><span class="p">:</span><span class="s2">&#34;mdi:brightness-percent&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Once the automation is created, save it. You can test your work by clicking &ldquo;run actions&rdquo; and monitoring the home assistant log file.</p>
<p>When the payload is properly escaped, you should see a new entity added to the Device page:</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        Automatically created!
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>When you select a brightness value from the drop down, the backlight brightness should change.
That&rsquo;s how you get a &rsquo;non standard&rsquo; thermostat configuration value to automatically show up on the correct device page.</p>
<p>You now no longer need the example automation from <a href="#ok-but-what-about-writing-to-the-thermostat" rel="">above</a>. 😎.</p>
]]></description></item><item><title>Quick look inside Venstar T7850 - One of the only 'no-cloud' WiFi Thermostats that plays nice with Home Assistant</title><link>https://karlquinsland.com/venstar-t7850-teardown-review/</link><pubDate>Sat, 23 Apr 2022 00:00:00 +0000</pubDate><author>Author</author><guid>https://karlquinsland.com/venstar-t7850-teardown-review/</guid><description><![CDATA[<div class="details admonition info open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-info-circle fa-fw"></i>Info<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">As of 2022-05-11, there is an update on my experience with the thermostat <a href="#an-update-on-wifi-connectivity" rel="">below</a>!</div>
        </div>
    </div>
<p>This is another one of those posts from my never ending quest to integrate Home Assistant with All The Things!</p>
<p>The thermostat that was installed when I moved in was an early Nest thermostat. These thermostats are - for the most part - well reviewed and liked. I had no complaints&hellip; except one.</p>
<p>Google only permits programmatic interaction with Nest devices through their <a href="https://developers.google.com/nest/device-access/api" target="_blank" rel="noopener noreffer">Smart Device Management API</a>.
This API is essentially cloud hosted MQTT and requires a small fee to access.
There is no way to control a supported Nest device without an Internet connection&hellip; even if the Home Assistant server and the Nest device are on the same subnet! 👎</p>
<p>This policy makes it needlessly complicated to integrate the thermostat with Home Assistant and that cripples my climate control automations beyond a tolerable level.</p>
<p>With summer approaching, I started looking for a thermostat that would play nice with Home Assistant.
My criteria:</p>
<ul>
<li>Work with existing HVAC system and wiring.</li>
<li>Play nice with Home Assistant, preferably with a <em><strong>local</strong></em> API.</li>
<li>Cost no more than the Nest thermostat.</li>
<li>Use TCP/IP over WiFi instead of Zigbee or Zwave.</li>
</ul>
<p>As it turns out, I am not the only one on a similar hunt:</p>
<ul>
<li>
<p><a href="https://community.home-assistant.io/t/which-of-these-thermostats-have-the-best-experience-with-ha/207520" target="_blank" rel="noopener noreffer">Which of these thermostats have the best experience with HA?</a></p>
</li>
<li>
<p><a href="https://community.home-assistant.io/t/smart-thermostat-recommendations-for-2021/359434" target="_blank" rel="noopener noreffer">Smart Thermostat Recommendations for 2021</a></p>
</li>
<li>
<p><a href="https://community.home-assistant.io/t/best-easiest-and-of-course-lowest-cost-smart-thermostat-for-home-assistant/384927" target="_blank" rel="noopener noreffer">Best, easiest and of course lowest cost smart thermostat for Home Assistant</a></p>
</li>
<li>
<p><a href="https://www.reddit.com/r/homeassistant/comments/kzavi9/what_is_the_best_thermostats_to_use_with_home/" target="_blank" rel="noopener noreffer">What is the best thermostats to use with Home Automation</a></p>
</li>
</ul>
<p>The &ldquo;TL;DR:&rdquo; of most of those threads is: <em>&ldquo;Any thermostat with zwave of zigbee will work&rdquo;</em>.</p>
<p>As most people don&rsquo;t particularly care about the network protocol(s) used to link Home Assistant to the thermostat, that&rsquo;s fine advice.</p>
<p>For whatever reason, you have to dig much deeper to find people discussing <strong>WiFi</strong> based thermostats that play nice with Home Assistant w/o an internet connection but there are a few out there. I settled on the Venstar T7850.</p>
<figure >

    
        
    

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<h1 id="initial-impressions">Initial Impressions:</h1>
<p>Below is a super concise review that is based mostly on my initial impressions / install experience.
I have only recently acquired and installed the T7850 so I can&rsquo;t comment on any of the finer points or drawbacks that could only be known after several months experience with the thermostat.</p>
<p>TL;DR: I wish I had more insight into Google&rsquo;s disappointing decision to not implement a local API for the Nest; I&rsquo;ll uninstall the Venstar and put it up on eBay the nanosecond the Nest gets a local API!</p>
<h2 id="an-update-on-wifi-connectivity">An Update on WiFi connectivity</h2>
<p>Less than 48 hours after installing the thermostat, I noticed that Home Assistant was no longer able to control it.
Every entity on the device showed <code>Unavailable</code>. Apparently, the thermostat had fallen off the network and was struggling to get back on.</p>
<p>I went through all the usual troubleshooting steps and was able to confirm a few interesting things:</p>
<ul>
<li>Changing the network name and password didn&rsquo;t help.</li>
<li>I disabled the SSID on my access point and created an identical SSID/network key on an old raspberry pi. The thermostat was <em>usually</em> able to connect to the AP. If I powered down the raspberry pi AP and re-enabled the same network name/key on my AP, the thermostat would not connect. If left on the raspberry pi AP, the thermostat would eventually eventually &ldquo;fall off&rdquo;.</li>
</ul>
<p>I initially suspected that the initial firmware update I didn&rsquo;t consent to may have broken something and started to look for a way to downgrade the firmware to the previous version that <em>did</em> manage to connect to my AP quickly.</p>
<p>No such luck.</p>
<p>While the thermostat does have an A/B partition scheme, I couldn&rsquo;t find any way to force a downgrade or even get older firmware files from the manufacturer.</p>
<p>After a few factory resets and additional troubleshooting, I started to look around&hellip; and apparently this is not a new problem.</p>
<p>Here are two &lsquo;relatively new&rsquo; reddit threads that mention similar connection issues with similar models in the same product family:</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        Source: /r/homeassistant post:
        <a href="https://www.reddit.com/r/homeassistant/comments/nge04w/all_local_control_thermostat_with_mqtt_and_home/hvxxpwy/?context=3"> 
            ALL Local Control Thermostat with MQTT and Home Assistant - Venstar T7900
        </a> 
        </p> 
    </figcaption>
    
</figure>


<figure >

    
        
    

    

    <figcaption>
        
        <p>
        Source: /r/thermostats post:
        <a href="https://www.reddit.com/r/thermostats/comments/og9bae/comment/hgzqdmj/?context=3"> 
            Venstar T7900 - problem with WIFI
        </a> 
        </p> 
    </figcaption>
    
</figure>


<p>And an Amazon question from years ago indicating that this might not be a &rsquo;new&rsquo; issue:</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        Source: Amazon question: 
        <a href="https://www.amazon.com/ask/questions/Tx2N92LOB3XBR7U"> 
            My venstar phone app says thermostat is offline. How do I reconnect it ?
        </a> 
        </p> 
    </figcaption>
    
</figure>


<p>A Home Assistant community/support form poster seems to have a similar issue and even offers a fix&hellip; which did not work.</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        Source: Home Assistant community forums: 
        <a href="https://community.home-assistant.io/t/venstar-t7900-trane-air-conditioning-amana-forced-air-furnace/314969"> 
            Venstar T7900 &amp; Trane Air Conditioning / Amana Forced Air Furnace
        </a> 
        </p> 
    </figcaption>
    
</figure>


<p>My access point is also a Unifi AP so of course there are a few threads on the unifi support forums:</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        Source: Ubiquity community forums: 
        <a href="https://community.ui.com/questions/Trouble-associating-Venstar-Wifi-thermostats-with-one-particular-UAP-AC-PRO/ad597f22-b8ff-4b7c-8e01-1676e92cc318"> 
            Trouble associating Venstar Wifi thermostats with one particular UAP-AC-PRO
        </a> 
        </p> 
    </figcaption>
    
</figure>


<div class="details admonition note open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-pencil-alt fa-fw"></i>Note<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">Note: <a href="https://fccid.io/MUH-SKYPORT2/Attestation-Statements/Models-Covered-2531030" target="_blank" rel="noopener noreffer">The FCC documents indicate</a> that Venstar did re-brand the thermostat for <code>First Alert</code> and <code>Bionaire</code>. It is likely that they also did this for <code>Carrier</code> as well judging by <a href="https://images.google.com/search?q=carrier&#43;infinity&#43;touch&#43;control&amp;tbm=isch" target="_blank" rel="noopener noreffer">pictures</a> of a <code>Carrier Infinity Touch Control</code> thermostat.</div>
        </div>
    </div>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        Source: Ubiquity community forums: 
        <a href="https://community.ui.com/questions/Cant-connect-to-Carrier-Infinity-Thermostat/e95531ef-ac18-452a-be4d-7ac0157258fe"> 
            Cant connect to Carrier Infinity Thermostat
        </a> 
        </p> 
    </figcaption>
    
</figure>


<p>The user name seems familiar; probably the same user from one of the above reddit threads:
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        Source: Ubiquity community forums: 
        <a href="https://community.ui.com/questions/Venstar-T7900-Thermostat-Wont-Connect-to-WiFi/48eff0a3-5b27-4cdd-9c2f-80bcdb5e0bc3"> 
            Venstar T7900 Thermostat Won&#39;t Connect to WiFi
        </a> 
        </p> 
    </figcaption>
    
</figure>

</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        Source: Ubiquity community forums: 
        <a href="https://community.ui.com/questions/Venstar-ColorTouch-Thermostat-Unable-to-Connect-to-AC-LR/77e08c30-246d-4a39-923c-c912c259fca9"> 
            Venstar ColorTouch Thermostat Unable to Connect to AC-LR
        </a> 
        </p> 
    </figcaption>
    
</figure>


<div class="details admonition warning open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-exclamation-triangle fa-fw"></i>TL;DR:<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><p>Ubiquity&rsquo;s Unifi line of wireless access points has a pretty solid reputation for a reason; by and large they just work. I have installed dozens of them over the years and have supported installs with <em>thousands</em> of them and had far fewer issues with those customers/sites than with your typical &lsquo;soho&rsquo; routers and other consumer-grade access points.</p>
<p>As of <strong>right now</strong>, I have a little more than a hundred wireless devices hanging off of the same AP that the thermostat failed to reliably connect to. Over the past several years, I have acquired many more devices and - with the exception of <strong>one other device</strong> - I have never had issues connecting anything to my wireless network.</p>
<p>Even if only some users experience issues with Venstar thermostats connecting to WiFi, I have to wonder why the issue exists at all. It&rsquo;s 2022 and there&rsquo;s no excuse for basic WiFi network compatibility issues like the kind that were more common in the bad old days of early WiFi circa <em>2005</em>. Somehow, the hundred+ other devices got their WiFi right&hellip; what is Venstar missing?</p>
<p>While I didn&rsquo;t want to introduce <em>yet another</em> wireless&rsquo;s networking standard to my home, I am <em>considerably</em> happier with the Honeywell TH6320ZW2003 that has replaced the T7850.</p>
</div>
        </div>
    </div>
<h2 id="the-good">The Good</h2>
<ul>
<li>It has <em>optional</em> cloud connectivity! It&rsquo;s trivial to turn this off and - as far as I can tell - it is <strong>mostly</strong> disabled. More on that <a href="#network" rel="">below</a>.</li>
<li>API is <a href="https://developer.venstar.com/documentation/" target="_blank" rel="noopener noreffer">documented</a>!</li>
<li>API accessible over HTTP or HTTPS and can be put behind <a href="https://en.wikipedia.org/wiki/Basic_access_authentication" target="_blank" rel="noopener noreffer">BasicAuth</a>! 👏</li>
<li>Thermostat has <em>lots</em> of tweaks and options meant for &lsquo;power users&rsquo;. These settings ship with reasonably sane default values. I suspect that most of these options are included in the &ldquo;residential&rdquo; devices only because they&rsquo;re already baked into the firmware for &ldquo;commercial&rdquo; customers that legitimately do need lots of knobs to adjust.</li>
<li>It&rsquo;s a reasonably good looking LCD screen; viewing angles are decent and the screen is plenty readable in direct sunlight when the brightness is turned all the way up.</li>
<li>The piezoelectric beeper can be disabled in software! 🔇</li>
</ul>
<h2 id="the-bad">The Bad</h2>
<ul>
<li>The API is <a href="#api-limitations" rel="">pretty limited</a>.</li>
<li>The screen has an integrated <em>resistive</em> touch panel. This was a poor choice for for a product design in 2014/2015 and is inexcusable for in 2022! 👎</li>
<li>There is no way to use your own TLS certificate. You have to use the certificate generated by the device. 🙁</li>
<li>There is no way to disable automatic firmware updates or view release notes on device. If there&rsquo;s an update found, the thermostat will download it and restart&hellip; even if the user is <em>actively using the device</em>. 😡 Even <a href="https://support.microsoft.com/en-us/windows/defer-feature-updates-in-windows-10-770c0ea8-eee5-ae25-f695-8e33f541e04d" target="_blank" rel="noopener noreffer">windows (finally) let you push the update to <em>after</em> you&rsquo;re done using the device</a>!</li>
<li>There is no ambient brightness sensor or presence detection sensor so the screen is always on at one brightness level.</li>
<li>The device has WiFI and communicates with the mothership using TLS1.2&hellip; but somehow it does not have <a href="https://en.wikipedia.org/wiki/Network_Time_Protocol" target="_blank" rel="noopener noreffer">NTP</a> support! Yep! This is literally the <strong>only</strong> internet enabled <em>thing</em> that I own that <strong>still requires me to manually set the date/time</strong> 😡. What a glaring oversight!</li>
</ul>
<h3 id="api-limitations">API limitations</h3>
<div class="details admonition warning open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-exclamation-triangle fa-fw"></i>Warning<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><p>The only <em>documented</em> portions of the API <a href="https://developer.venstar.com/documentation/#query" target="_blank" rel="noopener noreffer">cover interrogating the device for state about sensors and mode</a>.
Keep these limitations in mind when considering exactly what you want to be able to control via the API.</p>
<p>E.G.: It was <em>very</em> disappointing to find out that I can&rsquo;t adjust the screen on/off/brightness state via the API! So much for automatically turning the screen at night and waking it only when nearby motion was detected!</p>
</div>
        </div>
    </div>
<p>There is no <em>documented</em> way to control most of the other device settings that can be manipulated through the screen.
Things you can do via the screen but not via the (documented) API:</p>
<ul>
<li>Adjust the date / time</li>
<li>Adjust the screen brightness</li>
<li>Adjust any program/schedule settings or adjust vacation mode settings</li>
<li>Adjust setpoint limits (e.g.: don&rsquo;t let the user try to cool below 25°C or heat above 35°C)</li>
<li>Set/Disable Screen lock (requires a PIN code to access controls)</li>
<li>Set &lsquo;screensaver&rsquo; functionality. You can&rsquo;t toggle this via the API nor can you set the &ldquo;idle timeout&rdquo; setting or upload custom photos. You have to resort to a desktop / electron app to do so!</li>
</ul>
<p>I have not bothered with the &ldquo;skyport&rdquo; remote control functionality that Venstar offers but their marketing literature implies that some of the above points <em>can</em> be manipulated via their remote service. This leads me to believe that there is more to the API that what is documented publicly.</p>
<p>Given that the thermostat seems to have it&rsquo;s own CA created by Venstar engineering, I would bet that simple TLS proxy will not be enough to discover any undocumented API endpoints in the unit that could allow for more control.</p>
<p>If anybody does know of a local API endpoint that allows for controlling the screen brightness&hellip;<a href="https://karlquinsland.com/contact/" rel="">please do get in touch</a>!</p>
<h1 id="teardown">Teardown</h1>
<p>It&rsquo;s not a particularly complicated device: everything is on one side of a multi-layer PCB.
A ton of electronics for directly interfacing with thermostat wires and a few ICs for all the fun stuff!</p>
<p>The photos are mine, taken right before installing the unit.
There are more / similar photos at the <a href="https://fccid.io/MUH-SKYPORT2/Internal-Photos/Internal-Photos-Revised-2531033" target="_blank" rel="noopener noreffer">FCC filing</a> if you&rsquo;re curious.</p>
<p>I am including mine for some additional detail and as a &lsquo;mirror&rsquo; of the FCC photos. Shoutout to the <em>amazing</em> <code>fccid.io</code> ❤️!</p>
<p>The main PCB is readily accessed - just remove the rear panel / wall mount bracket.</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        I don&#39;t see any (mechanical) relays
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>Lots of passives and misc ICs and a few unpopulated footprints. This is consistent with <a href="https://fccid.io/MUH-SKYPORT2/Attestation-Statements/Models-Covered-2531030" target="_blank" rel="noopener noreffer">some of the documentation on file with the FCC</a>: there is 1 PCB for all 6 products in the family and the only significant difference is the software and the humidity sensor.
If i had to guess, I&rsquo;d be that <code>U13</code> is the humidity sensor.</p>
<p>Only one obvious pin header but the silkscreen <code>JP2</code> implies that there&rsquo;s another one somewhere (<code>JP1</code>).
The pins are suspiciously close to the full sized SD card and don&rsquo;t match the pinout for an obvious UART but 6 pins could be JTAG.</p>
<figure >

    
        
    

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>There&rsquo;s nothing remarkable on the other side; just a connection for the LCD and a beeper. At least the beeper module is trivial to &ldquo;factory delete&rdquo; if the software option to disable it ever stops working!</p>
<p>The full sized SD card is for users to store photos and firmware upgrades.
Photo parsing is notoriously tricky so there&rsquo;s a decent chance that a malicious photo could be crafted to attack the thermostat. 🤔</p>
<p>All the business logic lives under the big metal shield. I didn&rsquo;t probe the two test points but they certainly look like they could be UART or similar interface to the app processor.</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        Highly integrated ARM with external flash and ram. Almost a given these days!
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>Here&rsquo;s a partial shot of the LCD panel barcode.
<figure >

    
        
    

    

    <figcaption>
        
        
    </figcaption>
    
</figure>

</p>
<p>And a quick bonus picture! I took this just a few moments after the thermostat had been installed and powered up.
I had connected it to the WiFi network just 45 seconds before and was exploring the system settings when the unit locked up for a second and then kicked me to this screen:</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        No way to cancel or defer. No explanation of &#39;why&#39;!
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>There was no explanation for the abrupt reboot but after the device came back, the system settings indicated the device was running the latest firmware.</p>
<p><strong>Note:</strong> Look at the date/time! The device <em>obviously</em> has been able to phone home and download the latest firmware file&hellip; but does nothing with the NTP server it asked for (and received!)</p>
<h1 id="other-technical-details">Other technical details</h1>
<h2 id="firmware">Firmware</h2>
<p>The firmware updates can be obtained through the desktop app. They are written out to a SD card with this directory structure:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">❯ tree
</span></span><span class="line"><span class="cl">.
</span></span><span class="line"><span class="cl">├── FOUND.000
</span></span><span class="line"><span class="cl">│   └── FILE0000.CHK
</span></span><span class="line"><span class="cl">├── System Volume Information
</span></span><span class="line"><span class="cl">│   ├── IndexerVolumeGuid
</span></span><span class="line"><span class="cl">│   └── WPSettings.dat
</span></span><span class="line"><span class="cl">├── VC
</span></span><span class="line"><span class="cl">│   └── firmware
</span></span><span class="line"><span class="cl">│       └── Update.bin
</span></span><span class="line"><span class="cl">├── VH
</span></span><span class="line"><span class="cl">│   ├── dealer.bin
</span></span><span class="line"><span class="cl">│   ├── dealerlogo.bin
</span></span><span class="line"><span class="cl">│   ├── dealerlogo - Copy.jpg
</span></span><span class="line"><span class="cl">│   ├── firmware1a
</span></span><span class="line"><span class="cl">│   │   └── update.bin
</span></span><span class="line"><span class="cl">│   ├── gallery
</span></span><span class="line"><span class="cl">│   │   ├── 0.bin
</span></span><span class="line"><span class="cl">│   │   ├── gallery.bin
</span></span><span class="line"><span class="cl">│   │   └── thumbs
</span></span><span class="line"><span class="cl">│   │       └── 0.bin
</span></span><span class="line"><span class="cl">│   ├── name.bin
</span></span><span class="line"><span class="cl">│   ├── schedule.bin
</span></span><span class="line"><span class="cl">│   └── settings.bin
</span></span><span class="line"><span class="cl">├── VR
</span></span><span class="line"><span class="cl">│   └── firmware
</span></span><span class="line"><span class="cl">│       └── Update.bin
</span></span><span class="line"><span class="cl">└── VW
</span></span><span class="line"><span class="cl">    └── firmware1a
</span></span><span class="line"><span class="cl">        └── update.bin
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="m">12</span> directories, <span class="m">16</span> files
</span></span></code></pre></td></tr></table>
</div>
</div><p>The <code>dealerlogo - Copy.jpg</code> was me testing something related to the &ldquo;user photos&rdquo; function of the desktop app. The <code>gallery/*.bin</code> files are just re-sized jpeg files.
There is a mechanism for backing up / importing settings using <code>bin</code> files which are just <code>json</code> files store in the root directory for the device model; <code>VH</code> in this case. Those files are not pictured above as I discovered the export function after I drafted this section of the post.</p>
<p>I could do a whole <em>series</em> of posts on reverse engineering the firmware but that&rsquo;s going to have to wait for another day / more time. In the interim, here&rsquo;s some of my findings:</p>
<ul>
<li>The user interface is javascript. Yep! The entire interface is a single page web app that seems to be hosted by a binary called <code>maestero2</code>. Not much comes up on google, but <a href="https://github.com/grassroot72/Maestro2" target="_blank" rel="noopener noreffer">this repo</a> does seem like it could be related.
<ul>
<li>I can <em>see</em> in the source code where the javascript controls the LCD backlight&hellip; so there is <strong>absolutely no good reason</strong> why I can&rsquo;t do the same via the &ldquo;local API&rdquo;.</li>
</ul>
</li>
<li>The device appears to use mutual TLS when talking to the remote endpoints. Try to make a request to <code>https://ctupdate.skyport.io/feed</code> and you&rsquo;ll see the server ask you for a certificate :D.
<ul>
<li>I don&rsquo;t know if the certificates are <em>per device</em> or not. The certificates are stored in a separate <code>jffs2</code> partition which is <em>not</em> distributed in the firmware updates (as best I can tell).</li>
<li>There are a few strings that mention code signing certificates but I have not probed the firmware update routines in depth to know how it all works.</li>
</ul>
</li>
<li>It appears that the TTY is disabled and there are no telnet/ssh services started on boot so it&rsquo;s unclear how the <code>root</code> user can be used remotely&hellip; but I did find this in <code>/etc/shadow</code>: <code>root:$1$JEstzl9y$Ed7nAJIsY/0irewnqZoqn1:10933:0:99999:7:::</code>.</li>
</ul>
<h2 id="network">network</h2>
<div class="details admonition warning open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-exclamation-triangle fa-fw"></i>Warning<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">Even though the <code>skyport</code> functionality has been switched off, <a href="#dns" rel="">I still see the thermostat phoning home to <code>ctupdate.skyport.io</code> on startup</a>. In addition to the usual &ldquo;write firewall rules preventing WAN access&rdquo;, I would suggest sinkholing the <code>skyport.io</code> domain.</div>
        </div>
    </div>
<p>Like with all new devices, I ran <code>tcpdump</code> while setting it up. Almost all of the traffic was TLS1.2 protected but I did notice a few interesting things from the packet capture.</p>
<p>Immediately after booting / joining the network, the device sends out a DHCP request:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">Dynamic Host Configuration Protocol (Discover)
</span></span><span class="line"><span class="cl">    Message type: Boot Request (1)
</span></span><span class="line"><span class="cl">    Hardware type: Ethernet (0x01)
</span></span><span class="line"><span class="cl">    Hardware address length: 6
</span></span><span class="line"><span class="cl">    Hops: 0
</span></span><span class="line"><span class="cl">    Transaction ID: 0x1308ee40
</span></span><span class="line"><span class="cl">    Seconds elapsed: 0
</span></span><span class="line"><span class="cl">    Bootp flags: 0x0000 (Unicast)
</span></span><span class="line"><span class="cl">    Client IP address: 0.0.0.0
</span></span><span class="line"><span class="cl">    Your (client) IP address: 0.0.0.0
</span></span><span class="line"><span class="cl">    Next server IP address: 0.0.0.0
</span></span><span class="line"><span class="cl">    Relay agent IP address: 0.0.0.0
</span></span><span class="line"><span class="cl">    Client MAC address: MurataMa_de:ad:bf (10:98:c3🇩🇪ad:bf)
</span></span><span class="line"><span class="cl">    Client hardware address padding: 00000000000000000000
</span></span><span class="line"><span class="cl">    Server host name not given
</span></span><span class="line"><span class="cl">    Boot file name not given
</span></span><span class="line"><span class="cl">    Magic cookie: DHCP
</span></span><span class="line"><span class="cl">    Option: (53) DHCP Message Type (Discover)
</span></span><span class="line"><span class="cl">        Length: 1
</span></span><span class="line"><span class="cl">        DHCP: Discover (1)
</span></span><span class="line"><span class="cl">    Option: (61) Client identifier
</span></span><span class="line"><span class="cl">        Length: 7
</span></span><span class="line"><span class="cl">        Hardware type: Ethernet (0x01)
</span></span><span class="line"><span class="cl">        Client MAC address: MurataMa_de:ad:bf (10:98:c3🇩🇪ad:bf)
</span></span><span class="line"><span class="cl">    Option: (57) Maximum DHCP Message Size
</span></span><span class="line"><span class="cl">        Length: 2
</span></span><span class="line"><span class="cl">        Maximum DHCP Message Size: 576
</span></span><span class="line"><span class="cl">    Option: (55) Parameter Request List
</span></span><span class="line"><span class="cl">        Length: 7
</span></span><span class="line"><span class="cl">        Parameter Request List Item: (1) Subnet Mask
</span></span><span class="line"><span class="cl">        Parameter Request List Item: (3) Router
</span></span><span class="line"><span class="cl">        Parameter Request List Item: (6) Domain Name Server
</span></span><span class="line"><span class="cl">        Parameter Request List Item: (12) Host Name
</span></span><span class="line"><span class="cl">        Parameter Request List Item: (15) Domain Name
</span></span><span class="line"><span class="cl">        Parameter Request List Item: (28) Broadcast Address
</span></span><span class="line"><span class="cl">        Parameter Request List Item: (42) Network Time Protocol Servers
</span></span><span class="line"><span class="cl">    Option: (60) Vendor class identifier
</span></span><span class="line"><span class="cl">        Length: 12
</span></span><span class="line"><span class="cl">        Vendor class identifier: udhcp 1.29.2
</span></span><span class="line"><span class="cl">    Option: (255) End
</span></span><span class="line"><span class="cl">        Option End: 255
</span></span><span class="line"><span class="cl">    Padding: 0000000000000000000000000000000000000000
</span></span></code></pre></td></tr></table>
</div>
</div><p><strong>Note:</strong> <code>de:ad:bf </code> is replacing the <em>actual</em> octets of my thermostat MAC :).</p>
<p>Interesting! The DHCP server <em>explicitly asks for a NTP server</em> and then the thermostat &hellip; does not use it!</p>
<p>The <code>udhcp 1.29.2</code> string implies a relatively recent build of - possibly - busybox running the show&hellip;</p>
<p>The next packets after that are basic SSDP and IGMP:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">NOTIFY ALIVE SDDP/1.0
</span></span><span class="line"><span class="cl">From: &#34;123.456.789.012:1902&#34;
</span></span><span class="line"><span class="cl">Host: &#34;10:98:c3🇩🇪ad:bf&#34;
</span></span><span class="line"><span class="cl">Max-Age: 300
</span></span><span class="line"><span class="cl">Type: &#34;venstar:control4_thermostat_proxy:colortouch&#34;
</span></span><span class="line"><span class="cl">Primary-Proxy: &#34;thermostatV2&#34;
</span></span><span class="line"><span class="cl">Proxies: &#34;thermostatV2&#34;
</span></span><span class="line"><span class="cl">Manufacturer: &#34;Venstar&#34;
</span></span><span class="line"><span class="cl">Model: &#34;ColorTouch&#34;
</span></span><span class="line"><span class="cl">Driver: &#34;venstar_ip_colortouch_hvac.c4z&#34;
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">Internet Group Management Protocol
</span></span><span class="line"><span class="cl">    [IGMP Version: 3]
</span></span><span class="line"><span class="cl">    Type: Membership Report (0x22)
</span></span><span class="line"><span class="cl">    Reserved: 00
</span></span><span class="line"><span class="cl">    Checksum: 0xea03 [correct]
</span></span><span class="line"><span class="cl">    [Checksum Status: Good]
</span></span><span class="line"><span class="cl">    Reserved: 0000
</span></span><span class="line"><span class="cl">    Num Group Records: 1
</span></span><span class="line"><span class="cl">    Group Record : 239.255.255.250  Change To Exclude Mode
</span></span><span class="line"><span class="cl">        Record Type: Change To Exclude Mode (4)
</span></span><span class="line"><span class="cl">        Aux Data Len: 0
</span></span><span class="line"><span class="cl">        Num Src: 0
</span></span><span class="line"><span class="cl">        Multicast Address: 239.255.255.250
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="dns">DNS</h3>
<p>And <em>just before</em> the TLS traffic, there is a single DNS query:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">Queries
</span></span><span class="line"><span class="cl">    ctupdate.skyport.io: type A, class IN
</span></span><span class="line"><span class="cl">        Name: ctupdate.skyport.io
</span></span><span class="line"><span class="cl">        [Name Length: 19]
</span></span><span class="line"><span class="cl">        [Label Count: 3]
</span></span><span class="line"><span class="cl">        Type: A (Host Address) (1)
</span></span><span class="line"><span class="cl">        Class: IN (0x0001)
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="web-server">Web server</h3>
<p>After setting a user/password and selecting the <code>https</code> option for the local API, here&rsquo;s what I see:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span><span class="lnt">76
</span><span class="lnt">77
</span><span class="lnt">78
</span><span class="lnt">79
</span><span class="lnt">80
</span><span class="lnt">81
</span><span class="lnt">82
</span><span class="lnt">83
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">❯ openssl s_client -connect 123.456.789.012:443
</span></span><span class="line"><span class="cl">CONNECTED<span class="o">(</span>00000003<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="nv">depth</span><span class="o">=</span><span class="m">0</span> <span class="nv">C</span> <span class="o">=</span> US, <span class="nv">ST</span> <span class="o">=</span> California, <span class="nv">L</span> <span class="o">=</span> Chatsworth, <span class="nv">O</span> <span class="o">=</span> Venstar Inc., <span class="nv">OU</span> <span class="o">=</span> Engineering, <span class="nv">CN</span> <span class="o">=</span> CT1A_100163664
</span></span><span class="line"><span class="cl">verify error:num<span class="o">=</span>20:unable to get <span class="nb">local</span> issuer certificate
</span></span><span class="line"><span class="cl">verify <span class="k">return</span>:1
</span></span><span class="line"><span class="cl"><span class="nv">depth</span><span class="o">=</span><span class="m">0</span> <span class="nv">C</span> <span class="o">=</span> US, <span class="nv">ST</span> <span class="o">=</span> California, <span class="nv">L</span> <span class="o">=</span> Chatsworth, <span class="nv">O</span> <span class="o">=</span> Venstar Inc., <span class="nv">OU</span> <span class="o">=</span> Engineering, <span class="nv">CN</span> <span class="o">=</span> CT1A_100163664
</span></span><span class="line"><span class="cl">verify error:num<span class="o">=</span>21:unable to verify the first certificate
</span></span><span class="line"><span class="cl">verify <span class="k">return</span>:1
</span></span><span class="line"><span class="cl"><span class="nv">depth</span><span class="o">=</span><span class="m">0</span> <span class="nv">C</span> <span class="o">=</span> US, <span class="nv">ST</span> <span class="o">=</span> California, <span class="nv">L</span> <span class="o">=</span> Chatsworth, <span class="nv">O</span> <span class="o">=</span> Venstar Inc., <span class="nv">OU</span> <span class="o">=</span> Engineering, <span class="nv">CN</span> <span class="o">=</span> CT1A_100163664
</span></span><span class="line"><span class="cl">verify <span class="k">return</span>:1
</span></span><span class="line"><span class="cl">---
</span></span><span class="line"><span class="cl">Certificate chain
</span></span><span class="line"><span class="cl"> <span class="m">0</span> s:C <span class="o">=</span> US, <span class="nv">ST</span> <span class="o">=</span> California, <span class="nv">L</span> <span class="o">=</span> Chatsworth, <span class="nv">O</span> <span class="o">=</span> Venstar Inc., <span class="nv">OU</span> <span class="o">=</span> Engineering, <span class="nv">CN</span> <span class="o">=</span> CT1A_100163664
</span></span><span class="line"><span class="cl">   i:C <span class="o">=</span> US, <span class="nv">ST</span> <span class="o">=</span> California, <span class="nv">O</span> <span class="o">=</span> Venstar Inc., <span class="nv">OU</span> <span class="o">=</span> Engineering, <span class="nv">CN</span> <span class="o">=</span> Skyport Root CA
</span></span><span class="line"><span class="cl">---
</span></span><span class="line"><span class="cl">Server certificate
</span></span><span class="line"><span class="cl">-----BEGIN CERTIFICATE-----
</span></span><span class="line"><span class="cl">MIIGAzCCA+ugAwIBAgIJAIMdu2UK2QoqMA0GCSqGSIb3DQEBDQUAMGkxCzAJBgNV
</span></span><span class="line"><span class="cl">BAYTAlVTMRMwEQYDVQQIDApDYWxpZm9ybmlhMRUwEwYDVQQKDAxWZW5zdGFyIElu
</span></span><span class="line"><span class="cl">Yy4xFDASBgNVBAsMC0VuZ2luZWVyaW5nMRgwFgYDVQQDDA9Ta3lwb3J0IFJvb3Qg
</span></span><span class="line"><span class="cl">Q0EwHhcNMTkxMTA4MDUxOTM2WhcNMzcwNTE3MjM1OTU5WjB9MQswCQYDVQQGEwJV
</span></span><span class="line"><span class="cl">UzETMBEGA1UECAwKQ2FsaWZvcm5pYTETMBEGA1UEBwwKQ2hhdHN3b3J0aDEVMBMG
</span></span><span class="line"><span class="cl">A1UECgwMVmVuc3RhciBJbmMuMRQwEgYDVQQLDAtFbmdpbmVlcmluZzEXMBUGA1UE
</span></span><span class="line"><span class="cl">AwwOQ1QxQV8xMDAxNjM2NjQwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoIC
</span></span><span class="line"><span class="cl">AQDIYpgYtd/+KVEwVKTAHjFzp3FZXJx+RFQjUwdCGMOOWqrztokmNF5I/qXbWqA7
</span></span><span class="line"><span class="cl">okUmO7FKUdW3hAKq358tjcPZytEr1RtRQVtc4/fg35IwtNWf1g/UACazkFOgmOLd
</span></span><span class="line"><span class="cl">yQ4AwMWvfgDFLxREGH3WfPCHJS7v1ddO02WZMEpligK8g7iSEsqw1ZD4gD2xIbwf
</span></span><span class="line"><span class="cl">OxgbIdWJyakNbOebVMul5HUoqtVOLawaOefgh65gf4x0gBgMJ95E32cXZxjUB016
</span></span><span class="line"><span class="cl">r2sAanTkeK7gJhYjVuwFkepEgiLEfj+VY23Qv6CnhR2Kg4g1hv0ZxacHvNw1HCYU
</span></span><span class="line"><span class="cl">5o38tyQQWNHFw4+CadUPLzSnjhK/8TaaIdVcXDgxpQTdwr3l4Q8Dyz4SX+VihdGT
</span></span><span class="line"><span class="cl">Zb2s4K7emuJFlQv9ZlSYpltC7o44sLnQbETBdDwoS8EjOb/T1QyfEvNoqLvWSPOD
</span></span><span class="line"><span class="cl">V1VPPAHp68q9DOgnXa8PJj9nlz0btITmYWhGPobtGeD25Qxl/FulAZLaHWVDfkXb
</span></span><span class="line"><span class="cl">VbWquGMxm5xkYqcsI7UM4r0O8W94x9QZcobQ1sgZ6rs1vDsMGCZBmdexvqZgGN/t
</span></span><span class="line"><span class="cl">oPEIA8MaI4R1UfkqJx3haxYS4AOYt2IEE12kiPeAZlER4PIKbcGny7BgJPi72JSb
</span></span><span class="line"><span class="cl">eacDm7djJBqTP/G/O6Pdny9aWh2WVh0Kom5pLCHm3qydawIDAQABo4GZMIGWMAkG
</span></span><span class="line"><span class="cl">A1UdEwQCMAAwSQYJYIZIAYb4QgENBDwWOklmIHlvdSBrZXB0IHRoZSBzbWFsbCBy
</span></span><span class="line"><span class="cl">dWxlcywgeW91IGNvdWxkIGJyZWFrIHRoZSBiaWcgb25lcy4wHQYDVR0OBBYEFNwF
</span></span><span class="line"><span class="cl">Q5GfrnSlRDSGT/QZ6f283vPMMB8GA1UdIwQYMBaAFLEAWEXFwN/oc5doNhyOE47D
</span></span><span class="line"><span class="cl">w/qxMA0GCSqGSIb3DQEBDQUAA4ICAQA6sUR9fZ0CiwWFnYOKQ5CTzy2rDsXGtP9t
</span></span><span class="line"><span class="cl">DJcN/Ga396Pd2CwxDxp1fXXsbrcLELsuupYnLtsm6VzAaix+fgTtxeFTaQR4vqPf
</span></span><span class="line"><span class="cl">wMXfRzLe0Bk6m+BpWSslD7FTCyDVCnGtuHGCfesOFVvqR897vgU4mGG0qsI8OoD9
</span></span><span class="line"><span class="cl">0EEeX2HVG8QYvKSbJF3FhmKiCDemG9TVfITHKSody/iHpUNo0uHHGjsPfVXq4iWe
</span></span><span class="line"><span class="cl">bkQ3dqRXZmjcGPwzQK4CjlKcmXBDWyEhR25/U+dDItaTQet0GGaYK+KrpjDLH56d
</span></span><span class="line"><span class="cl">XWm7YDP5/EMbfRR7en7L6Ca3TFhpyNF5PxDfmz1fywqr85wdAb/ACJztew9f9hqG
</span></span><span class="line"><span class="cl">35rOH+OqucGeHqfYk6UW46fjXSnybBMJG8+HcVUMpYn7myfFK0tnwQZb477dV7Fs
</span></span><span class="line"><span class="cl">G+rYViPjPmfgxi5/kvXpn0FvTzNg73vkgSBCRxuFIPtMkHrpQdSTr1umAXhKCd7d
</span></span><span class="line"><span class="cl">3mragcL61lhKhh17vOBG73C4bhlAGBFsuACYrmnJFghlfv2X5PbLksc3h8P0DEn3
</span></span><span class="line"><span class="cl">36x/fGTVRvq14/9hxeKmOhL5KFQXrja5YJpoLRs/pgBl2zXQGF3+dLdbcAdaDVjy
</span></span><span class="line"><span class="cl">LyDkRMOfhugXmRh7TuWaqGrpcyXVeL4Kn6nWpq51PEval1HKoUMIkahRJu2WK0BT
</span></span><span class="line"><span class="cl"><span class="nv">kVBzZrkbvA</span><span class="o">==</span>
</span></span><span class="line"><span class="cl">-----END CERTIFICATE-----
</span></span><span class="line"><span class="cl"><span class="nv">subject</span><span class="o">=</span><span class="nv">C</span> <span class="o">=</span> US, <span class="nv">ST</span> <span class="o">=</span> California, <span class="nv">L</span> <span class="o">=</span> Chatsworth, <span class="nv">O</span> <span class="o">=</span> Venstar Inc., <span class="nv">OU</span> <span class="o">=</span> Engineering, <span class="nv">CN</span> <span class="o">=</span> CT1A_100163664
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">issuer</span><span class="o">=</span><span class="nv">C</span> <span class="o">=</span> US, <span class="nv">ST</span> <span class="o">=</span> California, <span class="nv">O</span> <span class="o">=</span> Venstar Inc., <span class="nv">OU</span> <span class="o">=</span> Engineering, <span class="nv">CN</span> <span class="o">=</span> Skyport Root CA
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">---
</span></span><span class="line"><span class="cl">No client certificate CA names sent
</span></span><span class="line"><span class="cl">Peer signing digest: SHA256
</span></span><span class="line"><span class="cl">Peer signature type: RSA-PSS
</span></span><span class="line"><span class="cl">Server Temp Key: X25519, <span class="m">253</span> bits
</span></span><span class="line"><span class="cl">---
</span></span><span class="line"><span class="cl">SSL handshake has <span class="nb">read</span> <span class="m">2277</span> bytes and written <span class="m">430</span> bytes
</span></span><span class="line"><span class="cl">Verification error: unable to verify the first certificate
</span></span><span class="line"><span class="cl">---
</span></span><span class="line"><span class="cl">New, TLSv1.2, Cipher is ECDHE-RSA-AES128-GCM-SHA256
</span></span><span class="line"><span class="cl">Server public key is <span class="m">4096</span> bit
</span></span><span class="line"><span class="cl">Secure Renegotiation IS supported
</span></span><span class="line"><span class="cl">Compression: NONE
</span></span><span class="line"><span class="cl">Expansion: NONE
</span></span><span class="line"><span class="cl">No ALPN negotiated
</span></span><span class="line"><span class="cl">SSL-Session:
</span></span><span class="line"><span class="cl">    Protocol  : TLSv1.2
</span></span><span class="line"><span class="cl">    Cipher    : ECDHE-RSA-AES128-GCM-SHA256
</span></span><span class="line"><span class="cl">    Session-ID: 1391DF607DB2888CA81220E321CB06CA6B5CBDE2031483A3E4AC075AD95A6A5D
</span></span><span class="line"><span class="cl">    Session-ID-ctx:
</span></span><span class="line"><span class="cl">    Master-Key: 7A37EEBC584574EBA6B114E85CCD685B30F640D17D38A9B2E90AC8739BC76EB4A15E38A8F3B74F3D428328F874C9807C
</span></span><span class="line"><span class="cl">    PSK identity: None
</span></span><span class="line"><span class="cl">    PSK identity hint: None
</span></span><span class="line"><span class="cl">    SRP username: None
</span></span><span class="line"><span class="cl">    Start Time: <span class="m">1650744968</span>
</span></span><span class="line"><span class="cl">    Timeout   : <span class="m">7200</span> <span class="o">(</span>sec<span class="o">)</span>
</span></span><span class="line"><span class="cl">    Verify <span class="k">return</span> code: <span class="m">21</span> <span class="o">(</span>unable to verify the first certificate<span class="o">)</span>
</span></span><span class="line"><span class="cl">    Extended master secret: yes
</span></span></code></pre></td></tr></table>
</div>
</div><p>The thermostat was pretty well closed off. <code>nmap</code> came back with port 53 and 443 open. Taking a closer lok at 443:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">PORT    STATE SERVICE  VERSION
</span></span><span class="line"><span class="cl">443/tcp open  ssl/http Neato Botvac Connected
</span></span><span class="line"><span class="cl"><span class="p">|</span> ssl-cert: Subject: <span class="nv">commonName</span><span class="o">=</span>CT1A_100163664/organizationName<span class="o">=</span>Venstar Inc./stateOrProvinceName<span class="o">=</span>California/countryName<span class="o">=</span>US
</span></span><span class="line"><span class="cl"><span class="p">|</span> Issuer: <span class="nv">commonName</span><span class="o">=</span>Skyport Root CA/organizationName<span class="o">=</span>Venstar Inc./stateOrProvinceName<span class="o">=</span>California/countryName<span class="o">=</span>US
</span></span><span class="line"><span class="cl"><span class="p">|</span> Public Key type: rsa
</span></span><span class="line"><span class="cl"><span class="p">|</span> Public Key bits: <span class="m">4096</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span> Signature Algorithm: sha512WithRSAEncryption
</span></span><span class="line"><span class="cl"><span class="p">|</span> Not valid before: 2019-11-08T05:19:36
</span></span><span class="line"><span class="cl"><span class="p">|</span> Not valid after:  2037-05-17T23:59:59
</span></span><span class="line"><span class="cl"><span class="p">|</span> MD5:   3efc 609c bbf3 cfb6 ddfb 4cbe bb54 1c63
</span></span><span class="line"><span class="cl"><span class="p">|</span>_SHA-1: 1e65 43f9 <span class="m">8404</span> 9bf6 acf4 0be8 <span class="m">5116</span> 78ff bc02 f024
</span></span><span class="line"><span class="cl">Service Info: Device: specialized
</span></span></code></pre></td></tr></table>
</div>
</div><p>And taking a closer look @ the web server:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">❯ curl -vvv --insecure -L &#39;https://123.456.789.012/&#39; -H &#39;Authorization: Digest username=&#34;SomeUserNameHere&#34;, realm=&#34;thermostat&#34;, nonce=&#34;1234567890&#34;, uri=&#34;/&#34;, response=&#34;some_64_char_string_here&#34;, qop=auth, nc=00000003, cnonce=&#34;some16CharStrHere&#34;&#39;
</span></span><span class="line"><span class="cl">*   Trying 123.456.789.012:443...
</span></span><span class="line"><span class="cl">* Connected to 123.456.789.012 (123.456.789.012) port 443 (#0)
</span></span><span class="line"><span class="cl">* ALPN, offering h2
</span></span><span class="line"><span class="cl">* ALPN, offering http/1.1
</span></span><span class="line"><span class="cl">* TLSv1.3 (OUT), TLS handshake, Client hello (1):
</span></span><span class="line"><span class="cl">* TLSv1.3 (IN), TLS handshake, Server hello (2):
</span></span><span class="line"><span class="cl">* TLSv1.2 (IN), TLS handshake, Certificate (11):
</span></span><span class="line"><span class="cl">* TLSv1.2 (IN), TLS handshake, Server key exchange (12):
</span></span><span class="line"><span class="cl">* TLSv1.2 (IN), TLS handshake, Server finished (14):
</span></span><span class="line"><span class="cl">* TLSv1.2 (OUT), TLS handshake, Client key exchange (16):
</span></span><span class="line"><span class="cl">* TLSv1.2 (OUT), TLS change cipher, Change cipher spec (1):
</span></span><span class="line"><span class="cl">* TLSv1.2 (OUT), TLS handshake, Finished (20):
</span></span><span class="line"><span class="cl">* TLSv1.2 (IN), TLS handshake, Finished (20):
</span></span><span class="line"><span class="cl">* SSL connection using TLSv1.2 / ECDHE-RSA-AES128-GCM-SHA256
</span></span><span class="line"><span class="cl">* ALPN, server did not agree to a protocol
</span></span><span class="line"><span class="cl">* Server certificate:
</span></span><span class="line"><span class="cl">*  subject: C=US; ST=California; L=Chatsworth; O=Venstar Inc.; OU=Engineering; CN=CT1A_100163664
</span></span><span class="line"><span class="cl">*  start date: Nov  8 05:19:36 2019 GMT
</span></span><span class="line"><span class="cl">*  expire date: May 17 23:59:59 2037 GMT
</span></span><span class="line"><span class="cl">*  issuer: C=US; ST=California; O=Venstar Inc.; OU=Engineering; CN=Skyport Root CA
</span></span><span class="line"><span class="cl">*  SSL certificate verify result: unable to get local issuer certificate (20), continuing anyway.
</span></span><span class="line"><span class="cl">&gt; GET / HTTP/1.1
</span></span><span class="line"><span class="cl">&gt; Host: 123.456.789.012
</span></span><span class="line"><span class="cl">&gt; User-Agent: curl/7.82.0
</span></span><span class="line"><span class="cl">&gt; Accept: */*
</span></span><span class="line"><span class="cl">&gt; Authorization: Digest username=&#34;SomeUserNameHere&#34;, realm=&#34;thermostat&#34;, nonce=&#34;1234567890&#34;, uri=&#34;/&#34;, response=&#34;some_64_char_string_here&#34;, qop=auth, nc=00000003, cnonce=&#34;some16CharStrHere&#34;
</span></span><span class="line"><span class="cl">&gt;
</span></span><span class="line"><span class="cl">* Mark bundle as not supporting multiuse
</span></span><span class="line"><span class="cl">&lt; HTTP/1.1 200 OK
</span></span><span class="line"><span class="cl">&lt; Transfer-Encoding: chunked
</span></span><span class="line"><span class="cl">&lt;
</span></span><span class="line"><span class="cl">* Connection #0 to host 123.456.789.012 left intact
</span></span><span class="line"><span class="cl">{&#34;api_ver&#34;:9,&#34;type&#34;:&#34;residential&#34;,&#34;model&#34;:&#34;COLORTOUCH&#34;,&#34;firmware&#34;:&#34;6.91&#34;}%
</span></span></code></pre></td></tr></table>
</div>
</div><p>Unfortunately no headers that leak details about the web server implementation. 😒</p>
<h2 id="ics-and-distinguishing-markings">ICs and distinguishing markings</h2>
<p>As noted above, the WiFi module was covered with a soldered on shield. Fortunately, the FCC filings give a good look!
The chip is a <code>muRata Type ZX WiFi Module</code> which is the <a href="https://learn.sparkfun.com/tutorials/nest-protect-teardown/sensor-scavenger-hunt" target="_blank" rel="noopener noreffer"><em>same</em> WiFi radio thats inside the Nest Protect</a>!</p>
<p>The larger of the two metal shields on the PCB can be removed giving a look at the main application processor:</p>
<ul>
<li>
<p><code>W971GG</code> (probably <a href="https://www.alldatasheet.com/datasheet-pdf/pdf/555599/WINBOND/W971GG6JB-25.html" target="_blank" rel="noopener noreffer"><code>W971GG6JB</code></a>) - DRAM.</p>
</li>
<li>
<p><a href="https://www.digikey.com/en/products/detail/winbond-electronics/W29N01HVBINA/5804021" target="_blank" rel="noopener noreffer"><code>W29N01HVBINA</code></a>: 1gigabit flash.</p>
</li>
<li>
<p><a href="https://www.microchip.com/en-us/product/AT91SAM9G15" target="_blank" rel="noopener noreffer"><code>AT91SAM9G15</code></a> - ARM926 with the peripherals needed for driving a LCD and reading from the resistive (🤮) touchscreen</p>
</li>
</ul>
<p>The LCD is marked with (partially visible):</p>
<pre><code>AT043HS40D07R2
30671T051KD
190805527 (0000000) L101661
</code></pre>
]]></description></item><item><title>Inside a generic/white-label HDMI KVM Switch</title><link>https://karlquinsland.com/hdmi-kvm-teardown-and-esphome/</link><pubDate>Sat, 16 Apr 2022 00:00:00 +0000</pubDate><author>Author</author><guid>https://karlquinsland.com/hdmi-kvm-teardown-and-esphome/</guid><description><![CDATA[<p>If you&rsquo;re here just for &ldquo;how do I get it working with ESPHome&rdquo; bit, skip to the <a href="#esphome-component" rel="">ESPHome Component</a> section below.</p>
<hr>
<div class="details admonition important open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-pencil-alt fa-fw"></i>Update 2022.05.14<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">I have just uploaded a basic PCB and enclosure to the  <a href="#esphome-component" rel="">ESPHome Component Repository</a>.</div>
        </div>
    </div>
<p>For the last few months, I have been looking for a KVM switch to simplify switching between work and personal computers.
Initially, I didn&rsquo;t think my criteria were that unreasonable, but for whatever reason there is no KVM switch that:</p>
<ul>
<li>Supports at least 4 hosts. Preferably dual monitors per host to ensure relevancy for years. Converting between HDMI and Display Port isn&rsquo;t that difficult so no strong preference as long as the KVM uses HDMI2.0+ or Display Port 1.4+ as my primary monitor is 4k.</li>
<li>USB 3 support. At least 5 gbps and Ideally using a USBC jack.</li>
<li>Some sort of programmatic control over which host is &lsquo;active&rsquo;. Ideally this interface would be bi-directional (RS232/RS485 or IP) but I&rsquo;d settle for having to record the IR remote codes and re-broadcast those with my own microcontroller if needed.</li>
<li>Works with the <a href="https://drop.com/buy/drop-shift-mechanical-keyboard" target="_blank" rel="noopener noreffer">DROP: SHIFT keyboard</a>; internally this keyboard presents as it&rsquo;s own USB Hub and requires more than the standard 500ma to operate. Some KVM switches don&rsquo;t supply enough current and others results in the number of USB hubs between the root and the keyboard being &gt; 5 which the USB spec does not support.</li>
<li>Costs less than $75 per host/port.</li>
</ul>
<p>Try as I might, I was not able to find anything that could satisfy all the requirements. If you know of any, <a href="https://karlquinsland.com/contact/" rel="">please do get in touch</a>!</p>
<p>I spent a decent chunk of time searching through the usual consumer/IT electronics sites and they all had similar offerings&hellip; none of which were sufficient.
I had some close contenders, but they are victims of the current chip shortage or otherwise very expensive unobtanium.</p>
<p>I recently read <a href="https://overengineer.dev/blog/2021/04/25/usb-c-hub-madness.html" target="_blank" rel="noopener noreffer">USB-C hubs and my slow descent into madness - Dennis Schubert</a> which prompted me to broaden my search horizons to include the marketplaces closer to where all the KVM switches I was seeing in my searches were actually designed.
After a bit of searching, I found the <a href="https://www.aliexpress.com/item/1005003927404402.html" target="_blank" rel="noopener noreffer"><code>PX-UHDKVM801-2.0</code></a>:</p>
<figure >

    
        
    

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>A single video channel isn&rsquo;t a deal breaker; ultra wide screens can render more pixels off of one HDMI port than 2 screens from a few years ago could. Assuming this continues, by the time my current monitor dies dual video might not matter at all.
Likewise, speedy USB is a &ldquo;nice to have&rdquo;. My keyboard, mouse and web cam <strong>must</strong> work with the KVM. If the webcam streams in SD over USB2 but full HD over a USB3 link that&rsquo;s a <em>nice</em> benefit but not a deal breaker. For the occasional times where I need to transfer a file and can&rsquo;t do it over the network, I can either plug directly into the host computers&rsquo; USB3.2 port or settle for slow USB2 file transfer speeds. Not the end of the world!</p>
<p>Of all the KVMs that I considered, this one came with the least compromises and came with explicit documentation about how to integrate/control the switch via TCP or RS232. Buoyed by the thought of not having to reverse engineer any IR remote codes or otherwise resort to some hackery, I pulled the trigger.</p>
<div class="details admonition note open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-pencil-alt fa-fw"></i>A quick note about the &#39;generic&#39; switch<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><p>I say &ldquo;generic&rdquo; because there are a few different brands / names on this thing and it&rsquo;s not clear who the actual manufacturer is.</p>
<p>I got it from a seller by the name of <a href="https://www.pourxuan.com/Product/9867345045.html" target="_blank" rel="noopener noreffer"><code>PourXuan</code></a> which does seem to be the OEM behind it.
However, there are a few other <a href="#ics-and-distinguishing-markings" rel="">interesting markings</a> that could indicate other companies contributing to / designing some internal components.</p>
</div>
        </div>
    </div>
<p>Anyways, lets look inside.</p>
<h1 id="teardown">Teardown</h1>
<p>TL;DR: It&rsquo;s been built down to a cost&hellip; but not <em>the lowest possible cost</em>.
The construction isn&rsquo;t flimsy and I didn&rsquo;t find any glaringly obvious safety issues / construction shortcuts.
None of the ICs have their markings scraped off and the internal architecture is simple and scalable.
I did not check, but I suspect that each of the primary functions / PCBs communicates over a simple serial bus so this switch is likely pretty hackable/serviceable, too.</p>
<h2 id="packaging--shipping">Packaging / shipping</h2>
<p>The switch came well packed in some nondescript packaging.</p>
<figure >

    
        
    

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>The small white box containing the power supply and some accessory hardware crumpled up the single page user manual.</p>
<p>I have uploaded a copy of this paper and the other software/documentation provided by the seller to the same git repository hosting the <a href="#esphome-component" rel="">ESPHome Component</a>.</p>
<p><figure >

    
        
    

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<figure >

    
        
    

    

    <figcaption>
        
        <p>
        An overview of everything that came in the box
        
            
        
        </p> 
    </figcaption>
    
</figure>

</p>
<p><figure >

    
        
    

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<figure >

    
        
    

    

    <figcaption>
        
        <p>
        Rack Mount ears, two extra screws and the proper connector block needed to interface with the UART.
        
            
        
        </p> 
    </figcaption>
    
</figure>

</p>
<p>I have not opened up the power supply to check its construction but it doesn&rsquo;t feel incredibly cheap.
It&rsquo;s rated for 2 Amps @ 12v but the switch only drew about 3.75 Watt when measured from the wall.</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        Nothing special. It doesn&#39;t feel cheap.
        
            
        
        </p> 
    </figcaption>
    
</figure>


<h2 id="the-switch">The switch</h2>
<p>The metal shell is generic; there are holes on the side for ventilation fans that are not populated.
Other than not-so-well hidden screw, the case is easy to open.</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        Don&#39;t forget the screw behind the sticker
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>With all screws out, the two halves slide apart easily to give us the first look at the internals!</p>
<figure >

    
        
    

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>It looks like this is a pretty modular design:</p>
<ul>
<li>A standalone front panel input and network control.</li>
<li>A dedicated PCB for each type of data; a HDMI/video plane and a HID/USB plane.</li>
<li>Each plane uses dedicated ASICs to route the signals.</li>
<li>A minimal number of microprocessors / wires coordinating between the PCBs.</li>
</ul>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        The small cable from the IR jack on the back is all that holds the two halves of the case together.
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>The LAN module plugs into the HDMI PCB very close to where the RS232 port is and the protocol specific documentation from the seller indicates that the payloads to control the switch are the same irrespective of the transport.</p>
<p>Each group of 4 HDMI &lsquo;inputs&rsquo; is routed to an identical looking IC and the differential signal pairs from <em>those</em> ICs are routed to the big one next to the output and RS232 and LAN circuitry.</p>
<p>The little micro next to the buzzer and grey ribbon cable is likely the main controller for the entire switch.
The small IC <em>on</em> the front panel is probably watching for IR signals, scanning the physical buttons, driving the LED display and communicating with the rest of the system over some serial bus.</p>
<p>This architecture would be pretty scalable; for a 16 port model, just add another HDMI and USB PCB and tweak the firmware on the main controller.</p>
<h3 id="front-pcb">Front PCB</h3>
<p>Nothing particularly interesting here. The single IC (<code>STM8S003F3</code>) is a cheap 8 bit microcontroller that - based on the PCB traces - is driving the LED display and handling the button matrix scanning and IR codes.</p>
<p>Most of the lines from the grey ribbon cable are not actually connected to the pcb so I&rsquo;d bet that this micro communicates with the &lsquo;main&rsquo; PCBs over some serial bus.</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        Sorry for the glare. There&#39;s a lot of flux residue on this PCB.
        
            
        
        </p> 
    </figcaption>
    
</figure>


<figure >

    
        
    

    

    <figcaption>
        
        <p>
        Notice how at least 4 of the pins from the ribbon cable connector are note soldered to the PCB...
        
            
        
        </p> 
    </figcaption>
    
</figure>


<figure >

    
        
    

    

    <figcaption>
        
        <p>
        This PCB is means to be used in other SKUs that come with two extra buttons that are unpopulated here.
        
            
        
        </p> 
    </figcaption>
    
</figure>


<h3 id="the-lan-module">The LAN module</h3>
<p>Very simple / standalone module. There&rsquo;s a dedicated PHY (<code>CH395Q</code>) and the same <code>STM8S003F3</code> micro controller again. The documentation that I received from the seller indicated that the LAN module did NOT use DHCP and there didn&rsquo;t seem to be a way to change the IP address configuration so I didn&rsquo;t bother with trying to automate via LAN.</p>
<p>Only after I made it most of the way through the ESPHome integration development did the seller provide <em>additional</em> documentation that indicates the IP address <em>can</em> be changed&hellip; but only if you use a Windows program.
I opted to keep going with the ESPHome &lt;-&gt; RS232 integration as that would be the most flexible and accessible approach.</p>
<figure >

    
        
    

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<figure >

    
        
    

    

    <figcaption>
        
        <p>
        The small LAN pcb is attached directly to the front panel with screws mating with some 90 degree flanges soldered to the PCB
        
            
        
        </p> 
    </figcaption>
    
</figure>


<h2 id="hdmi">HDMI</h2>
<p>In addition to the HDMI switching duties, the HDMI PCB hosts the UART electronics:</p>
<figure >

    
        
    

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>TTL to RS232 handled by the <code>SIPEX SP3223EEX</code>:</p>
<figure >

    
        
    

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>The main application processor appears to be a STM32 clone known as the <code>CHIPSEA F031C8T6</code>.</p>
<figure >

    
        
    

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>Switching / routing the HDMI is done with two <code>IT66341TE</code> chips reducing the 4 HDMI inputs down to a single output and a <code>IT66321E</code> to switch between those two streams.</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        2 to 1 HDMI mux to switch between the two outputs from the 4 -&gt; 1 muxes on board.
        
            
        
        </p> 
    </figcaption>
    
</figure>


<figure >

    
        
    

    

    <figcaption>
        
        <p>
        4 to 1 HDMI mux; one of two on the board
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>I would bet that the unpopulated connector in the bottom right is the bus connection to a second HDMI PCB in the 16 port model but I don&rsquo;t see where the differential pairs for the HDMI signal would come from so who knows 🤷.</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        4 to 1 HDMI mux; one of two on the board
        
            
        
        </p> 
    </figcaption>
    
</figure>


<figure >

    
        
    

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<h2 id="usb">USB</h2>
<p>Like the HDMI PCB, the USB PCB uses a series of ASICs and a microprocessor to coordinate them all.
Near the 4 &lsquo;output&rsquo; USB ports, you can see the <code>CH559L</code> which runs the show. This IC is monitoring the USB bus for key codes from the keyboard for display switching purposes; press some key combination to switch inputs.</p>
<p>This is usually <code>PrtScrn</code> a few times quickly followed by the number of the input bank you wish to switch to.
I have not tested / verified this functionality but the seller does advertise that there is similar functionality</p>
<p><figure >

    
        
    

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<figure >

    
        
    

    

    <figcaption>
        
        
    </figcaption>
    
</figure>

</p>
<p>Each &lsquo;input&rsquo; USB port is the same: unpopulated headphone jack footprint for audio input and a <code>FE1.1s USB 2.0 HUB</code> ASIC and an unknown IC that looks like it&rsquo;s related to the unpopulated headphone jack.</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        Each &#39;input&#39; USB port is managed with the same IC. Note the unpopulated Headphone jack footprint on the PCB
        
            
        
        </p> 
    </figcaption>
    
</figure>


<figure >

    
        
    

    

    <figcaption>
        
        <p>
        I can&#39;t make out the markings, but the 16 pin square IC is almost certainly an audio ID for the unpopulated headphone jack.
        
            
        
        </p> 
    </figcaption>
    
</figure>


<figure >

    
        
    

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>There&rsquo;s some generic 8:1 GPIO mux chips in the form of <code>3251QE</code>.
They are simple IO expanders that would allow a microcontroller to read/write 8 GPIO pins using just 3 GPIO.
I don&rsquo;t know why they&rsquo;re here or why an 8 port switch needs 2 of them&hellip; both on the USB PCB.</p>
<p><figure >

    
        
    

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<figure >

    
        
    

    

    <figcaption>
        
        
    </figcaption>
    
</figure>

</p>
<p>That&rsquo;s it for teardown!</p>
<h3 id="dmesg"><code>dmesg</code></h3>
<p>Just for completeness, here is how the KVM presents to the computer via USB.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="o">[</span>183000.909155<span class="o">]</span> usb 1-6: new high-speed USB device number <span class="m">63</span> using xhci_hcd
</span></span><span class="line"><span class="cl"><span class="o">[</span>183001.050545<span class="o">]</span> usb 1-6: New USB device found, <span class="nv">idVendor</span><span class="o">=</span>1a40, <span class="nv">idProduct</span><span class="o">=</span>0101, <span class="nv">bcdDevice</span><span class="o">=</span> 1.11
</span></span><span class="line"><span class="cl"><span class="o">[</span>183001.050550<span class="o">]</span> usb 1-6: New USB device strings: <span class="nv">Mfr</span><span class="o">=</span>0, <span class="nv">Product</span><span class="o">=</span>1, <span class="nv">SerialNumber</span><span class="o">=</span><span class="m">0</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>183001.050551<span class="o">]</span> usb 1-6: Product: USB 2.0 Hub
</span></span><span class="line"><span class="cl"><span class="o">[</span>183001.112333<span class="o">]</span> hub 1-6:1.0: USB hub found
</span></span><span class="line"><span class="cl"><span class="o">[</span>183001.112549<span class="o">]</span> hub 1-6:1.0: <span class="m">4</span> ports detected
</span></span><span class="line"><span class="cl"><span class="o">[</span>183001.495837<span class="o">]</span> usb 1-6.1: new high-speed USB device number <span class="m">64</span> using xhci_hcd
</span></span><span class="line"><span class="cl"><span class="o">[</span>183001.687327<span class="o">]</span> usb 1-6.1: New USB device found, <span class="nv">idVendor</span><span class="o">=</span>1a40, <span class="nv">idProduct</span><span class="o">=</span>0101, <span class="nv">bcdDevice</span><span class="o">=</span> 1.11
</span></span><span class="line"><span class="cl"><span class="o">[</span>183001.687332<span class="o">]</span> usb 1-6.1: New USB device strings: <span class="nv">Mfr</span><span class="o">=</span>0, <span class="nv">Product</span><span class="o">=</span>1, <span class="nv">SerialNumber</span><span class="o">=</span><span class="m">0</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>183001.687333<span class="o">]</span> usb 1-6.1: Product: USB 2.0 Hub
</span></span><span class="line"><span class="cl"><span class="o">[</span>183001.720379<span class="o">]</span> hub 1-6.1:1.0: USB hub found
</span></span><span class="line"><span class="cl"><span class="o">[</span>183001.720579<span class="o">]</span> hub 1-6.1:1.0: <span class="m">4</span> ports detected
</span></span><span class="line"><span class="cl"><span class="o">[</span>183001.912509<span class="o">]</span> usb 1-6.2: new low-speed USB device number <span class="m">65</span> using xhci_hcd
</span></span><span class="line"><span class="cl"><span class="o">[</span>183002.137295<span class="o">]</span> usb 1-6.2: New USB device found, <span class="nv">idVendor</span><span class="o">=</span>0c45, <span class="nv">idProduct</span><span class="o">=</span>7403, <span class="nv">bcdDevice</span><span class="o">=</span> 0.01
</span></span><span class="line"><span class="cl"><span class="o">[</span>183002.137300<span class="o">]</span> usb 1-6.2: New USB device strings: <span class="nv">Mfr</span><span class="o">=</span>1, <span class="nv">Product</span><span class="o">=</span>2, <span class="nv">SerialNumber</span><span class="o">=</span><span class="m">0</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>183002.137301<span class="o">]</span> usb 1-6.2: Product: USB Device
</span></span><span class="line"><span class="cl"><span class="o">[</span>183002.137303<span class="o">]</span> usb 1-6.2: Manufacturer: SONiX
</span></span><span class="line"><span class="cl"><span class="o">[</span>183002.239461<span class="o">]</span> input: SONiX USB Device as /devices/pci0000:00/0000:00:01.2/0000:02:00.0/0000:03:08.0/0000:05:00.1/usb1/1-6/1-6.2/1-6.2:1.0/0003:0C45:7403.00E4/input/input288
</span></span><span class="line"><span class="cl"><span class="o">[</span>183002.296065<span class="o">]</span> hid-generic 0003:0C45:7403.00E4: input,hidraw9: USB HID v1.00 Keyboard <span class="o">[</span>SONiX USB Device<span class="o">]</span> on usb-0000:05:00.1-6.2/input0
</span></span><span class="line"><span class="cl"><span class="o">[</span>183002.302457<span class="o">]</span> input: SONiX USB Device Mouse as /devices/pci0000:00/0000:00:01.2/0000:02:00.0/0000:03:08.0/0000:05:00.1/usb1/1-6/1-6.2/1-6.2:1.1/0003:0C45:7403.00E5/input/input289
</span></span><span class="line"><span class="cl"><span class="o">[</span>183002.302535<span class="o">]</span> input: SONiX USB Device System Control as /devices/pci0000:00/0000:00:01.2/0000:02:00.0/0000:03:08.0/0000:05:00.1/usb1/1-6/1-6.2/1-6.2:1.1/0003:0C45:7403.00E5/input/input290
</span></span><span class="line"><span class="cl"><span class="o">[</span>183002.359252<span class="o">]</span> hid-generic 0003:0C45:7403.00E5: input,hidraw10: USB HID v1.00 Mouse <span class="o">[</span>SONiX USB Device<span class="o">]</span> on usb-0000:05:00.1-6.2/input1
</span></span></code></pre></td></tr></table>
</div>
</div><p>And <code>lsusb</code> shows:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="p">|</span>__ Port 6: Dev 63, If 0, <span class="nv">Class</span><span class="o">=</span>Hub, <span class="nv">Driver</span><span class="o">=</span>hub/4p, 480M
</span></span><span class="line"><span class="cl">    ID 1a40:0101 Terminus Technology Inc. Hub
</span></span><span class="line"><span class="cl">    /sys/bus/usb/devices/1-6  /dev/bus/usb/001/063
</span></span><span class="line"><span class="cl">    <span class="p">|</span>__ Port 2: Dev 65, If 0, <span class="nv">Class</span><span class="o">=</span>Human Interface Device, <span class="nv">Driver</span><span class="o">=</span>usbhid, 1.5M
</span></span><span class="line"><span class="cl">        ID 0c45:7403 Microdia Foot Switch
</span></span><span class="line"><span class="cl">        /sys/bus/usb/devices/1-6.2  /dev/bus/usb/001/065
</span></span><span class="line"><span class="cl">    <span class="p">|</span>__ Port 2: Dev 65, If 1, <span class="nv">Class</span><span class="o">=</span>Human Interface Device, <span class="nv">Driver</span><span class="o">=</span>usbhid, 1.5M
</span></span><span class="line"><span class="cl">        ID 0c45:7403 Microdia Foot Switch
</span></span><span class="line"><span class="cl">        /sys/bus/usb/devices/1-6.2  /dev/bus/usb/001/065
</span></span><span class="line"><span class="cl">    <span class="p">|</span>__ Port 1: Dev 64, If 0, <span class="nv">Class</span><span class="o">=</span>Hub, <span class="nv">Driver</span><span class="o">=</span>hub/4p, 480M
</span></span><span class="line"><span class="cl">        ID 1a40:0101 Terminus Technology Inc. Hub
</span></span><span class="line"><span class="cl">        /sys/bus/usb/devices/1-6.1  /dev/bus/usb/001/064
</span></span></code></pre></td></tr></table>
</div>
</div><p>The <a href="http://blog.ssokolow.com/archives/2017/04/10/getting-your-cheap-chinese-usb-foot-pedal-doing-useful-things-on-linux/" target="_blank" rel="noopener noreffer"><code>Microdia Foot Switch</code> bit</a> is odd.
Could that have something to do with the <code>3251QE</code> muxes?
Perhaps this device indicates to the computer weather or not it is the activated one? 🤔 But why would you need two?</p>
<p>I did not dump <a href="https://en.wikipedia.org/wiki/Extended_Display_Identification_Data" target="_blank" rel="noopener noreffer"><code>EDID</code></a> information for the HDMI but I suspect that the switch is smart enough to just copy exactly what the display provides so the computers don&rsquo;t &lsquo;see&rsquo; the loss/change of a display which might re-arrange windows or adjust scaling.</p>
<h2 id="esphome-component">ESPHome component</h2>
<div class="details admonition info open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-info-circle fa-fw"></i>Info<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">The ESPHome component and some additional documentation/software/details are over at <a href="https://github.com/kquinsland/hdmi-kvm-esphome" target="_blank" rel="noopener noreffer"><code>kquinsland/hdmi-kvm-esphome</code></a>.</div>
        </div>
    </div>
<p>Yes, I wanted to be able to control this KVM from my Home Assistant install.
Some sort of API was a strong desire/requirement for KVM switches for a reason!</p>
<figure >

    
        
    

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>I am still working on a complementary ESPHome component to automate my standing desk (to be published soon!) but to give you an idea of the automations this KVM will be used in:</p>
<ul>
<li>
<p>Push a single button to:</p>
<ul>
<li>Turn on the VR computer</li>
<li>Switch KVM to the VR computer</li>
<li>Adjust the lighting as needed; turn most lights off as they&rsquo;re not needed with a VR headset on but turn on ambient lighting so the room isn&rsquo;t pitch dark when the headset is removed.</li>
</ul>
</li>
<li>
<p>When personal/work computer are not in use, switch to a host running Grafana dashboards on rotation</p>
</li>
<li>
<p>Allow me to track how much time per week is spent with each host</p>
</li>
</ul>
<h2 id="ics-and-distinguishing-markings">ICs and distinguishing markings</h2>
<p>The front panel PCB is labeled: <code>20170622</code> and features:</p>
<ul>
<li><a href="https://github.com/kquinsland/hdmi-kvm-esphome/blob/main/docs/datasheets/stm8s003f3.pdf" target="_blank" rel="noopener noreffer"><code>8S003F3P6</code></a> - A cheapish 8 bit micro controller.</li>
</ul>
<p>The LAN module PCB is marked with <code>20151030</code> and features:\</p>
<ul>
<li><a href="https://github.com/kquinsland/hdmi-kvm-esphome/blob/main/docs/datasheets/stm8s003f3.pdf" target="_blank" rel="noopener noreffer"><code>8S003F3P6</code></a> - The same micro used on the front panel</li>
<li><a href="https://github.com/kquinsland/hdmi-kvm-esphome/blob/main/docs/datasheets/2009031206_WCH-Jiangsu-Qin-Heng-CH395Q_C87390.pdf" target="_blank" rel="noopener noreffer"><code>CH395Q</code></a> - A dedicated ethernet interface.</li>
</ul>
<p>The HDMI PCB is populated with:</p>
<ul>
<li>
<p><a href="https://www.google.com/search?q=CHIPSEA&#43;F031C8T6" target="_blank" rel="noopener noreffer"><code>CHIPSEA F031C8T6</code></a> - STM32 clone; likely the main applications processor. I can&rsquo;t find a datasheet on this specific on the english speaking web but the naming is oddly similar to how some STM32 processors are named.</p>
</li>
<li>
<p><a href="https://github.com/kquinsland/hdmi-kvm-esphome/blob/main/docs/datasheets/sp3222_3232e.pdf" target="_blank" rel="noopener noreffer"><code>SIPEX SP3223EEX</code></a> - Basic TTL &lt;-&gt; RS232 chip, similar to MAX232.</p>
</li>
<li>
<p><a href="https://www.ite.com.tw/en/product/view?mid=100" target="_blank" rel="noopener noreffer"><code>IT66321E</code></a> - 2 IN to 1 OUT HDMI2.0 18Gb/s Switch with Audio In/Out</p>
</li>
<li>
<p><a href="https://www.ite.com.tw/en/product/view?mid=99" target="_blank" rel="noopener noreffer"><code>IT66341TE</code></a> - 4 IN to 1 OUT HDMI2.0 18Gb/s Switch with Audio In/Out</p>
</li>
<li>
<p>A sticker with the markings:</p>
<blockquote>
<p>XUFUNG
33.01.0072
2012020074</p>
</blockquote>
</li>
<li>
<p>The PCB is marked with:</p>
<blockquote>
<p>HK20801AU
32.02.0119
BJ</p>
</blockquote>
</li>
</ul>
<p>The USB PCB is marked with <code>HK20801A30-KVM</code> and is populated with:</p>
<ul>
<li><a href="https://github.com/kquinsland/hdmi-kvm-esphome/blob/main/docs/datasheets/PI5C3251QE-datasheetz.pdf" target="_blank" rel="noopener noreffer"><code>PI5C 3251QE</code></a> - 8:1 Mux/DeMux BusSwitch</li>
<li><a href="https://github.com/kquinsland/hdmi-kvm-esphome/blob/main/docs/datasheets//2008191807_WCH-Jiangsu-Qin-Heng-CH559L_C150548" target="_blank" rel="noopener noreffer"><code>CH559L</code></a> - 8 bit enhanced USB MCU CH559</li>
<li><a href="https://github.com/kquinsland/hdmi-kvm-esphome/blob/main/docs/datasheets/FE1.1s%2BData%2BSheet%2B%28Rev.%2B1.0%29.pdf" target="_blank" rel="noopener noreffer"><code>FE1.1s</code></a> - FE1.1S USB 2.0 HIGH SPEED 4-PORT HUB CONTROLLER</li>
</ul>
]]></description></item><item><title>Installing Tasmota on the Xiaomi Desk Lamp</title><link>https://karlquinsland.com/xaomi-s1-monitor-lamp-teardown-and-tasmota/</link><pubDate>Sat, 22 Jan 2022 00:00:00 +0000</pubDate><author>Author</author><guid>https://karlquinsland.com/xaomi-s1-monitor-lamp-teardown-and-tasmota/</guid><description><![CDATA[<div class="details admonition note open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-pencil-alt fa-fw"></i>MJGJD02YL vs MUGJD01YL<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">There are <em>at least two</em> versions of this lamp. Thanks to <code>@htvekov</code> for confirming that the <code>MUGJD01YL</code> variant <strong>does <em>not</em> contain an ESP32</strong>. It contains a <code>TLSR8368</code>.
Some photos of the <code>MUGJD01YL</code> internals are provided <a href="#mugjd01yl" rel="">below</a>.</div>
        </div>
    </div>
<p>If you&rsquo;re here just for &ldquo;how do I flash tasmota&rdquo; bit, skip to the <a href="#tasmota" rel="">Tasmota</a> section below.</p>
<hr>
<p>I was looking for a way to light my desk my desk without screen glare.
The easiest way to prevent glare on a screen is to change the orientation of the light relative to the screen either from under or behind the screen.
This is not practical for ceiling mounted lights or for any floor lamps.</p>
<p>You can get a nearly glare free light if you mount the light to the top of the screen and direct the light away from the screen at a <em>slight</em> angle.
Light hitting the screen and bouncing into eyes is minimized and the majority of the light ends up directed down onto the desk where it&rsquo;s needed.</p>
<p>This isn&rsquo;t a new problem; a quick search of any online retailor will reveal that there are <em>many</em> different options out there at all sorts of price points.
As this light source would be heavily used for all sorts of work, the <em>quality</em> of the light is incredibly important; a high General CRI (Ra) and adjustable color temperature are <em>requirements</em>.</p>
<p>I also wanted one that had some basic remote control functions so I don&rsquo;t have to reach to the top of my monitor and risk destabilizing whatever I am working on or getting finger prints on the panel.
A wired remote would be simpler and thus cheaper but my desk is already too crowded with wires and cords; if the cost difference between a wired and wireless remote was marginal, opt for wireless.</p>
<p>After a bit of searching, I found the <code>2021 Xiaomi Mijia Lite Desk Lamp 1S</code> which fit the bill exactly.</p>
<figure >

    
        
    

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>Beyond the basic puck shaped wireless remote, the listing indicated that the &rsquo;new 1s version&rsquo; could be controlled with the <code>Xiaomi</code> app.</p>
<p>🤔</p>
<p>Instead of some very basic 433Mhz radio, the lamp/remote probably used BTLE.
In some ways, that&rsquo;s even better; the lamp only has a few simple functions and those shouldn&rsquo;t be that hard to reverse engineer from the Android app.</p>
<p>Once I know what data to send for on/off/dim/bright/ww/cw selection, I can use an ESP chip as a MQTT &lt;-&gt; BTLE gateway for relatively easy integration into my home automation system.
Worst case, the fall back plan of using a microcontroller to emulate interacting with the remote and then integrating that microcontroller with my home automation system would work.</p>
<p>Once the lamp showed up, I of course opened up the remote to see what type of wireless system I was going to be dealing with.</p>
<figure >

    
        
    

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<div class="details admonition note open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-pencil-alt fa-fw"></i>Note<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">More photos of the remote are <a href="#teardown" rel="">below</a></div>
        </div>
    </div>
<p>Giving the model number <code>MHCB07P</code> a quick google didn&rsquo;t reveal much information other than confirm that it was using BTLE.
This almost certainly means that the phone app will <em>also</em> use BTLE to control the lamp!
If I&rsquo;m lucky, I can capture the entire discovery/pair/command packets using a rooted android device and then I won&rsquo;t have to bother with the puck at all.</p>
<h1 id="lamp---phone">Lamp &lt;-&gt; Phone</h1>
<p>After getting the app setup, it did discover the lamp and began to walk me through the setup flow.</p>
<figure >

    
        
    

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>WiFi!? Really!? But why? This must be some generic screen shown for all devices, right?</p>
<p><strong>Nope</strong>.</p>
<p>There really is a simple access point inside this lamp!</p>
<figure >

    
        
    

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>Well now I&rsquo;m curious.</p>
<p>What could this lamp <em>possibly need</em> WiFi credentials for? The remote used BTLE and every conceivable phone that will also control the lamp supports BTLE&hellip; so why spend the extra money for a WiFi enabled microcontroller at all!?</p>
<h1 id="et-lamp-phone-home"><del>ET</del> Lamp Phone Home:</h1>
<p>I threw the lamp behind an isolated access point and it sure is <em>chatty</em>&hellip;
After getting an IP address, the lamp looks up the <code>A</code> record for <code>dk.io.mi.com</code> and then attempts to open a TCP connection and send some bytes:</p>
<figure >

    
        
    

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>Now I&rsquo;m more than a little bit curious.</p>
<p>Why send raw bytes to TCP/80 without at least the typical HTTP request headers?
Why even use WiFi at all for a <em>lamp</em>? Is there no way to use my phone to control the lamp over BTLE?</p>
<h2 id="dumping-the-fw">Dumping the FW</h2>
<p>Fortunately, this was pretty easy. After a cursory analysis, the dumped firmware did not appear to be encrypted or otherwise protected.
I did a quick search for a few things that I hoped would show up in the dumped OEM firmware and was not disappointed:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">❯ cat lamp.bin.strings <span class="p">|</span> grep --ignore-case -E <span class="s1">&#39;certificate|encrypt|tls|agent|http|post|get|verify|remote|{&#34;&#39;</span> &gt; interesting_strings.txt
</span></span><span class="line"><span class="cl">❯ cat interesting_strings.txt<span class="p">|</span> wc -l
</span></span><span class="line"><span class="cl"><span class="m">710</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>🤨</p>
<p>Here are some of the highlights:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">[I] bluetooth_remote_double_click
</span></span><span class="line"><span class="cl">[E] %s: verify root cert is not valid! (%s,%d)
</span></span><span class="line"><span class="cl">[W] %s: Fail to get gatt db from connection %04x, ret = %d  (%s,%d)
</span></span><span class="line"><span class="cl">[E] %s: mbedtls_ecdh_calc_secret error %d (%s,%d)
</span></span><span class="line"><span class="cl">miio_signature_verify
</span></span><span class="line"><span class="cl">[E] %s: --&gt;login verify send failed. (%s,%d)
</span></span><span class="line"><span class="cl">-----BEGIN CERTIFICATE-----
</span></span><span class="line"><span class="cl">[E] %s: https need root cert. (%s,%d)
</span></span><span class="line"><span class="cl">User-Agent: MIoT
</span></span><span class="line"><span class="cl">http://dlg.io.mi.com/v1/ot/upload
</span></span><span class="line"><span class="cl">[W] %s: httpdns new resolve start failed, %d (%s,%d)
</span></span></code></pre></td></tr></table>
</div>
</div><p>There&rsquo;s a lot more interesting things in the dump but they&rsquo;ll have to wait for another day as
immediately after getting eyes on the PCB, I saw an ESP32 chip!</p>
<h2 id="a-change-of-plans">A change of plans</h2>
<p>Reverse engineering the firmware to figure out how/why the phone method of remote control was different from the remotes&rsquo; method no longer really mattered.
An ESP based chip means Tasmota or ESPHome should be possible.</p>
<p>If I could get either of those alternative firmwares running on the lamp, then cluttering up the desk with yet another remote and/or hacking MQTT support into the lamp via the remote was no longer necessary!</p>
<h1 id="teardown">Teardown</h1>
<div class="details admonition warning open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-exclamation-triangle fa-fw"></i>Warning<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">The plastic end caps on either end of the lamp tube are <em>glued in</em>.
You will need some force to break the glue.
Even with all possible precautions, getting access to the lamp PCB <em>is a <strong>destructive</strong> process</em>.
If you are <em>careful</em> you can keep the destruction and cosmetic damage to a minimum.</div>
        </div>
    </div>
<p>I did this teardown the hard way and damaged more of the lamp than necessary.
Some of the photos below reflect this.</p>
<p>Now that I know how it all is <em>meant</em> to come apart, you will hopefully have an easier time and incur less damage!</p>
<h2 id="the-lamp">The lamp</h2>
<p>A closer look at the marked device information before we move <em>into</em> the lamp.
The ESP that we will soon flash with Tasmota is just behind this product information.</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        Product info and regulatory markings
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>Locate the small rectangle shaped protrusion from the lamp tube that mates with the magnetic mount. The protrusion has two small pogo pins on it.
You can see the protrusion in the middle of the tube facing the coiled USB power cable:</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        Everything that came in the box
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>With the protrusion facing you, locate the plastic cap closest to the product information.
This should be plastic cap on the <em>left</em> side of the tube.</p>
<p>Use non-marring pliers or similar to grip the plastic cap and twist with enough force to break the glue.
Do not twist more than a few degrees!
The plastic cap has some features that will come into contact with and could damage the PCB if rotated too far!</p>
<p>Use a razor blade or similar to peel back the grip-tape sticker on the protrusion.
If you&rsquo;re careful and manage to remove the sticker in one piece you might be able to re-apply it during reassembly.
The lamp functions fine without the sticker, though.</p>
<p>Underneath the sticker will be two small philips screws.
Remove them and the metal protrusion and small plastic part containing the two pogo pins should come free.
Set these aside.</p>
<p>Gently remove the clear plastic diffuser from the lamp tube and set aside.</p>
<p>The matte finish on the interior side of the diffuser is a fingerprint magnet.
Consider using gloves for this step.</p>
<p>Carefully slide the PCB out of the aluminum tube.
Be mindful of the two spring like contacts on the back of the PCB that mated with the pogo pins!</p>
<p>You can see the small black plastic bracket holding the pogo pins and the protrusion bit with some of the grip-tape still attached:</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        If it feels like you&#39;re using too much force to open the lamp... you probably are!
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>If you try to remove the PCB without first detaching the pogo pins, you&rsquo;ll damage one or both of the spring contacts that mate the PCB to the pogo pins!</p>
<p>You <em>don&rsquo;t</em> want your <code>GND</code> spring to look like mine!</p>
<figure >

    
        
    

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>Before realizing that the pogo pins could be removed from the lamp, I removed <em>both</em> caps and tried push/pull the PCB out.</p>
<p>The PCB is supported inside the tube with a few black plastic &lsquo;sleds&rsquo; which are heat-staked on to the PCB.</p>
<p>The &lsquo;sled&rsquo; closest to the ESP partially covers the <code>3V3</code> test point.
Rather than use a dedicated 3V power supply during flashing, I found it easiest to use this pin to bring the <code>EN</code> pin up high.</p>
<p>If you&rsquo;re going to use the <code>3V3</code> test pin instead of a dedicated external power supply, you will probably want to remove the &lsquo;sled&rsquo; to get easy access to the test point.</p>
<p>You can do this with some flush-cut snips.</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        Be careful to not scratch the solder mask / PCB with the sharp edges of the snips
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>The sled isn&rsquo;t technically required for re-assembly but it&rsquo;s pretty easy to re-attach to the PCB with some hotglue. Discard it at your peril!</p>
<figure >

    
        
    

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>Here&rsquo;s a closeup of the PCB with most of the test points labeled.
You can see the <code>3V3</code> test point immediately to the left of <code>R6</code> in the shadow of the &lsquo;sled&rsquo;.</p>
<figure >

    
        
    

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>Repeat these steps in reverse order to re-assemble the lamp.</p>
<h3 id="the-puck">The puck</h3>
<p>Fortunately, opening up the remote is not difficult.</p>
<p>Remove the two philips screws under the bottom cap.</p>
<figure >

    
        
    

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>The main body / rotary knob lifts away from the midframe.</p>
<figure >

    
        
    

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<figure >

    
        
    

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<figure >

    
        
    

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>Like with the lamp PCB, there are a few test points:</p>
<figure >

    
        
    

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<figure >

    
        
    

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<h1 id="tasmota">Tasmota</h1>
<div class="details admonition warning open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-exclamation-triangle fa-fw"></i>Warning<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><p>It is likely that both the WW and CW LEDs <em>will</em> briefly light up during the flashing process. When this happens, you <em>will</em> draw more current than a typical USB &lt;-&gt; Serial adapter can provide. At <em>best</em> you&rsquo;ll cause a brownout and the flash will be interrupted.</p>
<p><strong>Use a dedicated 5V supply that can provide <em>at least</em> 10W of power</strong> while flashing the lamp! Make sure that the <code>GND</code> wire from your serial programmer <em>and</em> the <code>GND</code> wire for your dedicated 5V@2A/10W supply are tied together or you will likely destroy some of the electronics on both the lamp, your serial adapter <em>and</em> possibly your computer!</p>
</div>
        </div>
    </div>
<p>Having said all that, it&rsquo;s totally worth it:</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        When all is said and done, the lamp is easily integrated and controlled with Home Assistant
        
            
        
        </p> 
    </figcaption>
    
</figure>


<h2 id="flashing">Flashing</h2>
<div class="details admonition info open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-info-circle fa-fw"></i>Info<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">The ESP32 chip on this PCB is a <em>single core</em> version.
Follow the <a href="https://tasmota.github.io/docs/ESP32/#flashing" target="_blank" rel="noopener noreffer">instructions for flashing the ESP32 version of Tasmota</a>, specifically the <code>tasmota32solo1</code> version!</div>
        </div>
    </div>
<p>Solder wires to the usual <code>RX</code>, <code>TX</code>, <code>GPIO0</code> and <code>GND</code> test points.
The <code>GPIO0</code> test point is the test point nearest to the ESP32 chip; directly off the bottom right corner.
I used some solid-core cable from a length of cat5 cable but any similarly high gauge wire will work.</p>
<p>Solder a jumper between the <code>EN</code> and <code>3V3</code> test point. I used a small yellow wire for this.
The solid blue wire attached to <code>GPIO0</code> and the blue/white wire attached to <code>GND</code> are joined together just out of frame.
The ESP will not boot into programming mode unless <code>GPIO0</code> is tied to ground.</p>
<figure >

    
        
    

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>Leads from a dedicated 5V power supply are attached to the main contacts with reg/green alligator clips</p>
<figure >

    
        
    

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>After confirming that each point is soldered sufficiently and wired to the correct pin on your USB &lt;-&gt; Serial programmer, turn the dedicated power supply on and you should be able to flash.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">❯ esptool.py --chip esp32 --port /dev/ttyUSB0 --baud <span class="m">921600</span> --before default_reset --after hard_reset write_flash -z --flash_mode dout --flash_freq 40m --flash_size detect 0x1000 bootloader_dout_40m.bin 0x8000 partitions.bin 0xe000 boot_app0.bin 0x10000 tasmota32solo1.bin
</span></span><span class="line"><span class="cl">esptool.py v3.2
</span></span><span class="line"><span class="cl">Serial port /dev/ttyUSB0
</span></span><span class="line"><span class="cl">Connecting.....
</span></span><span class="line"><span class="cl">&lt;...&gt;
</span></span><span class="line"><span class="cl">Stub running...
</span></span><span class="line"><span class="cl">Changing baud rate to <span class="m">921600</span>
</span></span><span class="line"><span class="cl">Changed.
</span></span><span class="line"><span class="cl">Configuring flash size...
</span></span><span class="line"><span class="cl">Auto-detected Flash size: 4MB
</span></span><span class="line"><span class="cl">Flash will be erased from 0x00001000 to 0x00004fff...
</span></span><span class="line"><span class="cl">Flash will be erased from 0x00008000 to 0x00008fff...
</span></span><span class="line"><span class="cl">Flash will be erased from 0x0000e000 to 0x0000ffff...
</span></span><span class="line"><span class="cl">Flash will be erased from 0x00010000 to 0x00157fff...
</span></span><span class="line"><span class="cl">Compressed <span class="m">15536</span> bytes to 10862...
</span></span><span class="line"><span class="cl">Wrote <span class="m">15536</span> bytes <span class="o">(</span><span class="m">10862</span> compressed<span class="o">)</span> at 0x00001000 in 0.4 seconds <span class="o">(</span>effective 353.8 kbit/s<span class="o">)</span>...
</span></span><span class="line"><span class="cl">&lt;...&gt;
</span></span><span class="line"><span class="cl">Hash of data verified.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Leaving...
</span></span><span class="line"><span class="cl">Hard resetting via RTS pin...
</span></span></code></pre></td></tr></table>
</div>
</div><p>Turn off the dedicated 5V supply and desolder the <code>GPIO0</code> wire and the <code>3V3</code> &lt;-&gt; <code>EN</code> jumper.
Leave the <code>RX</code>, <code>TX</code>, and <code>GND</code> wires in place so you can easily check the boot logs to confirm Tasmota flashed OK:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">❯ screen /dev/ttyUSB0 <span class="m">115200</span>
</span></span><span class="line"><span class="cl">ets Jun  <span class="m">8</span> <span class="m">2016</span> 00:22:57
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">rst:0x1 <span class="o">(</span>POWERON_RESET<span class="o">)</span>,boot:0x13 <span class="o">(</span>SPI_FAST_FLASH_BOOT<span class="o">)</span>
</span></span><span class="line"><span class="cl">configsip: 0, SPIWP:0xee
</span></span><span class="line"><span class="cl">clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
</span></span><span class="line"><span class="cl">mode:DOUT, clock div:2
</span></span><span class="line"><span class="cl">load:0x3fff0030,len:184
</span></span><span class="line"><span class="cl">load:0x40078000,len:12352
</span></span><span class="line"><span class="cl">load:0x40080400,len:2912
</span></span><span class="line"><span class="cl">entry 0x400805c4
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">00:00:00.002-228/73 HDW: ESP32-S0WD-OEM 
</span></span><span class="line"><span class="cl">./components/esp_littlefs/src/littlefs/lfs.c:1071:error: Corrupted dir pair at <span class="o">{</span>0x0, 0x1<span class="o">}</span>
</span></span><span class="line"><span class="cl">00:00:00.777-231/73 UFS: FlashFS mounted with <span class="m">312</span> kB free
</span></span><span class="line"><span class="cl">00:00:00.782-231/73 CFG: Use defaults
</span></span><span class="line"><span class="cl">00:00:00.893 QPC: Reset
</span></span><span class="line"><span class="cl">00:00:00.941 BRY: Berry initialized, RAM <span class="nv">used</span><span class="o">=</span><span class="m">3849</span>
</span></span><span class="line"><span class="cl">00:00:00.950 BRY: no <span class="s1">&#39;preinit.be&#39;</span>
</span></span><span class="line"><span class="cl">00:00:00.963 Project tasmota - Tasmota Version 10.1.0<span class="o">(</span>tasmota<span class="o">)</span>-2_0_1_1<span class="o">(</span>2021-12-08T14:50:34<span class="o">)</span>
</span></span><span class="line"><span class="cl">00:00:00.984 BRY: no <span class="s1">&#39;autoexec.be&#39;</span>
</span></span><span class="line"><span class="cl">00:00:00.243 WIF: WifiManager active <span class="k">for</span> <span class="m">3</span> minutes
</span></span><span class="line"><span class="cl">00:00:01.200 HTP: Web server active on tasmota-197907-6407 with IP address 192.168.4.1
</span></span></code></pre></td></tr></table>
</div>
</div><p>After confirming a successful flash/boot, you can continue to configure Tasmota via the serial console or just power off and de-solder all wires and finish configuration after you re-assemble.</p>
<h2 id="templates">Templates</h2>
<p>The ESP32 controls the lamp via 3 GPIO pins:</p>
<ul>
<li><code>GPIO04</code>: Global light enable/disable.</li>
<li><code>GPIO19</code>: Cold White channel</li>
<li><code>GPIO21</code>: Warm White channel</li>
</ul>
<p>Irrespective of what the WW or CW channel are doing, there will be no light if <code>GPIO4</code> is not high.
This means you have two choices for how to configure the GPIO.</p>
<p>Tasmota will disable both <code>GPIO19</code> and <code>GPIO21</code> when the light is switched off so there really is no need for independent control via <code>GPIO4</code>.
This template keeps <code>GPIO4</code> high and relies on Tasmota setting  to fully off to shut the light off.</p>
<p>Most people should use this template.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="line"><span class="cl"><span class="p">{</span><span class="nt">&#34;NAME&#34;</span><span class="p">:</span><span class="s2">&#34;Mijia Desk Lamp 1S (MJGJD02YL)&#34;</span><span class="p">,</span><span class="nt">&#34;GPIO&#34;</span><span class="p">:[</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">3840</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">416</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">417</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">],</span><span class="nt">&#34;FLAG&#34;</span><span class="p">:</span><span class="mi">0</span><span class="p">,</span><span class="nt">&#34;BASE&#34;</span><span class="p">:</span><span class="mi">1</span><span class="p">,</span><span class="nt">&#34;CMND&#34;</span><span class="p">:</span><span class="s2">&#34;DimmerRange 45,255&#34;</span><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>If, for some reason, you want to control the global on/off (<code>GPIO04</code>) independently of the WW/CW channels, use this template:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="line"><span class="cl"><span class="p">{</span><span class="nt">&#34;NAME&#34;</span><span class="p">:</span><span class="s2">&#34;Mijia Desk Lamp 1S (MJGJD02YL)&#34;</span><span class="p">,</span><span class="nt">&#34;GPIO&#34;</span><span class="p">:[</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">224</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">416</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">417</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">],</span><span class="nt">&#34;FLAG&#34;</span><span class="p">:</span><span class="mi">0</span><span class="p">,</span><span class="nt">&#34;BASE&#34;</span><span class="p">:</span><span class="mi">1</span><span class="p">,</span><span class="nt">&#34;CMND&#34;</span><span class="p">:</span><span class="s2">&#34;DimmerRange 45,255&#34;</span><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>If you do not need dimmer control and only need full on/off control, you can adjust the module so <code>GPIO{04,19,21}</code> are always high, low or simple on/off outputs by configuring them to be of type <code>Relay</code> instead of <code>PWM</code> outputs.</p>
<h3 id="dimmer-range">Dimmer Range</h3>
<p>In testing, extremely low brightness values for both the WW and CW channel had some undesirable behavior:</p>
<ul>
<li>Values lower than ~30 didn&rsquo;t light at all</li>
<li>Values between 30-35 caused unpleasant flicker</li>
<li>Values lower than ~40 would also cause flicker when attempting to light the WW <em>and</em> CW channels together</li>
</ul>
<p>For this reason, a <code>DimmerRange</code> of 45-255 is suggested.
Tasmota will let you dim the light as low as possible without flicker.</p>
<p>Your lamp, eyes and needs will differ so feel free to see if a lower <code>dimmer</code> value will work for you by unlocking the full dimmer range with <code>DimmerRange 0,255</code> and then playing with the <code>ct</code> and <code>dimmer</code> commands to find the lowest tolerable brightness for your needs.</p>
<p>That is why you see the <code>DimmerRange 45,255</code> command in the above templates.</p>
<h3 id="pcbic-markings">PCB/IC Markings</h3>
<p>Some of the interesting ICs and PCB markings</p>
<h4 id="lamp">Lamp</h4>
<ul>
<li>PCB is labeled <code>Yeelight Spider 1S V06</code>, <code>20210714 by XJD</code>, <code>94V-0</code>,  <code>Y Y21M09D13</code>, <code>JUl 7.820.0874-1</code></li>
<li>PCB has a QR code / sticker with <code>WF-E32-RWY1</code>, <code>Spider1S</code>, and the device mac address</li>
<li><code>SGM4065</code>: <a href="https://www.sg-micro.de/show-product-611.html" target="_blank" rel="noopener noreffer">Over-Voltage Protection IC and Li+ Charger Front-End Protection IC with LDO Mode</a></li>
<li>Some DFN-10 package that is marked with either <code>WRDPA</code> or <code>WRQPA</code> or <code>WR0PA</code>. It&rsquo;s a little hard to tell as the markings are super faint and I can&rsquo;t get them super clear even with high contrast / inverted color image filters. There are several of them with identical circuitry through the length of the board so this IC is some sort of pwm dimmable constant current LED driver.</li>
<li><code>ESP32-D0WD</code>: the star of the show</li>
<li><code>GD25Q32(B)</code>: a 4096 kB SPI flash chip</li>
<li>The lamp body is marked with <code>CMIT ID: 2021DP11423</code></li>
</ul>
<h4 id="remote">Remote</h4>
<ul>
<li>PCB labeled with <code>100-P806D1-1B-A1</code>, <code>Yeelight Spider 1S RC Board V02</code>, <code>20210716 by XJD</code></li>
<li><code>MHCB07P</code>. This is marked on the tiny BTLE module inside the remote. Not too many search <a href="https://twitter.com/simransingh931/status/1418120923568246786" target="_blank" rel="noopener noreffer">results</a> show <a href="https://www.ec.ust.hk/hackathon/2021/document/xiaomi_0319_eng.pdf" target="_blank" rel="noopener noreffer">up</a>.</li>
<li><code>CMIT ID: 2020DP3172(M)</code></li>
</ul>
<h2 id="mugjd01yl">MUGJD01YL</h2>
<p><figure >

    
        
    

    

    <figcaption>
        
        <p>
        Product details for the lamp that can&#39;t be converted to run Tasmota.
        
            Courtesy of @htvekov
        
        </p> 
    </figcaption>
    
</figure>


<figure >

    
        
    

    

    <figcaption>
        
        <p>
        The PCB is held in the tube with similar plastic &#39;sleds&#39;. They are secured with screws rather than heatstake so they are easier to remove. The move to heatstake in the revised edition was likely to reduce costs.
        
            Courtesy of @htvekov
        
        </p> 
    </figcaption>
    
</figure>


<figure >

    
        
    

    

    <figcaption>
        
        <p>
        
        
            Courtesy of @htvekov
        
        </p> 
    </figcaption>
    
</figure>


<figure >

    
        
    

    

    <figcaption>
        
        <p>
        
        
            Courtesy of @htvekov
        
        </p> 
    </figcaption>
    
</figure>

</p>
]]></description></item><item><title>Adding an APC UPS to Home Assistant energy dashboard</title><link>https://karlquinsland.com/apc-ups-energy-in-homeassistant/</link><pubDate>Sun, 05 Sep 2021 00:00:00 +0000</pubDate><author>Author</author><guid>https://karlquinsland.com/apc-ups-energy-in-homeassistant/</guid><description><![CDATA[<p><strong>EDIT:</strong> (2021-09-19): After some <a href="https://old.reddit.com/r/homeassistant/comments/pi3pv2/how_to_use_an_apc_ups_as_an_energy_dashboard/hbqudh5/" target="_blank" rel="noopener noreffer">back and forth</a> with <a href="https://old.reddit.com/user/Laxarus" target="_blank" rel="noopener noreffer">/u/Laxarus</a>, there is now a simpler method! The <code>snmp</code> platform still does not support setting <code>device_class</code>, but wrapping the sensor in another template sensor is not required; just do so in your <a href="https://www.home-assistant.io/docs/configuration/customizing-devices/" target="_blank" rel="noopener noreffer"><code>customize.yaml</code></a>. I have called this out <a href="#edit-2021-09-19" rel="">below</a>.</p>
<hr>
<p>This is another quick &ldquo;here&rsquo;s how I did it, hope this help&rdquo; post.</p>
<p>In preparation for the inevitable grid brownouts that summer 2021 would bring, I installed a rather beefy UPS for my home network / lab. After some browsing, I discovered a local eWaste liquidator with a really good deal on some second-hand APC UPSs.</p>
<p>A few hundred dollars and about 150 lbs later, the UPS was installed in the server rack. Despite being a newer generation, the software on the UPS has a <em><strong>TON</strong></em> of similarities to the <a href="https://karlquinsland.com/monitoring-ap7900-switched-pdu-prometheus-grafana/" rel="">older style of PDU that I installed in my lab </a> a while back. This made it relatively straightforward to use the same
pattern to start getting UPS metrics into Grafana as well.</p>
<p>After getting the basic monitoring up and running, I started to draft this post to serve as an &lsquo;update&rsquo; to the APC9700 post. Life got in the way and the post sat in the drafts branch where it was completely forgotten about&hellip;. until <a href="https://www.home-assistant.io/blog/2021/08/04/release-20218/" target="_blank" rel="noopener noreffer">Home Assistant released their new Energy dashboard</a>. Now that HA could show the energy consumption of individual devices right next to the cumulative consumption and production data, the post was worth finishing and expanding on.</p>
<p>The configuration that I was <em>going</em> to publish is <a href="#current-and-voltage-independently" rel="">below</a> but after finding <a href="https://old.reddit.com/r/homeassistant/comments/pi3pv2/how_to_use_an_apc_ups_as_an_energy_dashboard/hbpqzr6/" target="_blank" rel="noopener noreffer">this</a> comment by <a href="https://old.reddit.com/user/Laxarus" target="_blank" rel="noopener noreffer">Laxarus</a> on <a href="https://old.reddit.com/user/Navydevildoc" target="_blank" rel="noopener noreffer">Navydevildoc</a>&rsquo;s <a href="https://old.reddit.com/r/homeassistant/comments/pi3pv2/how_to_use_an_apc_ups_as_an_energy_dashboard/" target="_blank" rel="noopener noreffer">reddit post</a>, I&rsquo;ve got a revised and simpler configuration to share!</p>
<h2 id="long-term-statistics-in-home-assistant">Long Term Statistics in Home Assistant</h2>
<p>Before diving into the configuration, a little bit of context. In preparation for the energy sub system, the Home Assistant developers have been working on a &lsquo;<a href="https://developers.home-assistant.io/docs/core/entity/sensor/#long-term-statistics" target="_blank" rel="noopener noreffer">long term statistics</a>&rsquo; (LTS) framework. The LTS framework is meant to give HA some improved speed and capabilities when dealing with a lot of data! The energy subsystem is the first &lsquo;consumer&rsquo; of the LTS framework.</p>
<p>Home Assistant will look for two &lsquo;properties&rsquo; on a given sensor to determine if that sensor will work with the LTS framework.
For a sensor/entity to &lsquo;work&rsquo; with the long term stats system it must:</p>
<ul>
<li>have a property called <code>device_class</code> with a value of <code>energy</code>, <code>gas</code>, or <code>monetary</code></li>
<li>have a property called <code>state_class</code> with a value of either <code>measurement</code> or <code>total_increasing</code></li>
</ul>
<p>In testing, I was <em>not</em> able to get a sensor with <code>state_class: measurement</code> and <code>device_class: energy</code> to &lsquo;work&rsquo; with the energy sub system. Fortunately, this does not apply with the concise configuration <a href="#a-single-oid-for-power-consumption" rel="">below</a>!</p>
<p>As the LTS framework is still new, many platforms - including the SNMP platform - do not support the required properties:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">Invalid config for [sensor.snmp]: [state_class] is an invalid option for [sensor.snmp]. Check: sensor.snmp-&gt;state_class.
</span></span><span class="line"><span class="cl">Invalid config for [sensor.snmp]: [device_class] is an invalid option for [sensor.snmp]. Check: sensor.snmp-&gt;device_class.
</span></span></code></pre></td></tr></table>
</div>
</div><p>The <code>template</code> platform <em>has</em> been updated to work with the <code>device_class</code> or <code>state_class</code> properties though.
So that&rsquo;s the technique to use here; a <code>template</code> sensor with the correct <code>{device,state}_class</code> properties set will wrap the snmp sensor.</p>
<p>Hopefully a future release of HA will include <code>{device,state}_class</code> support for the <code>snmp</code> platform; the <code>template</code> sensors in the configuration snips below won&rsquo;t be needed!</p>
<h4 id="edit-2021-09-19">EDIT (2021-09-19):</h4>
<p>You don&rsquo;t need to wrap the snmp sensor in a template sensor. As of home assistant 2021.09, the <code>snmp</code> platform does not allow you to set <code>device_class: energy</code>&hellip; however, you <em>can</em> set the <code>device_class</code> attribute on the snmp sensor through <code>customize.yaml</code>:</p>
<p>Make sure your configuration file loads the customization file:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">❯ cat configuration.yaml <span class="p">|</span> grep customize
</span></span><span class="line"><span class="cl">  customize: !include customize.yaml
</span></span></code></pre></td></tr></table>
</div>
</div><p>If your snmp sensor was called <code>sensor.usp_energy</code>, then you would add an object called <code>sensor.ups_energy</code> like so:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">❯ cat customize.yaml <span class="p">|</span> grep -a2 ups
</span></span><span class="line"><span class="cl">sensor.ups_energy:
</span></span><span class="line"><span class="cl">  state_class: total_increasing
</span></span><span class="line"><span class="cl">  device_class: energy
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="configure-home-assistant">Configure Home Assistant</h2>
<p>I have broken my <code>configuration.yaml</code> up to make things easier to manage. Almost all entity/device/template/sensor..etc configuration is done through files placed in the <code>devices/**/*</code> directory:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">❯ cat configuration.yaml <span class="p">|</span> grep -E <span class="s1">&#39;devices/sensor|template/&#39;</span>
</span></span><span class="line"><span class="cl">sensor: !include_dir_merge_list devices/sensor/
</span></span><span class="line"><span class="cl">template: !include_dir_merge_list devices/template/
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="a-single-oid-for-power-consumption">A single OID for power consumption</h3>
<p>Thanks again to <a href="https://old.reddit.com/user/Laxarus" target="_blank" rel="noopener noreffer">Laxarus</a> for the <a href="https://old.reddit.com/r/homeassistant/comments/pi3pv2/how_to_use_an_apc_ups_as_an_energy_dashboard/hbpqzr6/" target="_blank" rel="noopener noreffer">tip</a> about the <code>upsHighPrecOutputEnergyUsage</code> OID!</p>
<p>First, create the &lsquo;raw&rsquo; sensor using the <code>snmp</code> platform:</p>
<p><code>devices/sensor/snmp.yaml</code>:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl">- <span class="nt">platform</span><span class="p">:</span><span class="w"> </span><span class="l">snmp</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;UPS Energy (raw)&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">host</span><span class="p">:</span><span class="w"> </span><span class="m">192.168.1.1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># The current in tenths of amperes drawn by the load on the UPS.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># Contained in Module(s): PowerNet-MIB</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c">##</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">baseoid</span><span class="p">:</span><span class="w"> </span><span class="l">.1.3.6.1.4.1.318.1.1.1.4.3.6.0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># Determines whether the sensor should start and keep working even if the SNMP host is unreachable or not responding.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># This allows the sensor to be initialized properly even if, for example, your printer is not on when you start Home Assistant.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">accept_errors</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># UPS reports in tens of kWh so we&#39;ll need to divide by 10 to get kWh; HA only accepts kWh or Wh for sensors</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c">#   that will &#39;work&#39; on the energy dashboard</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">unit_of_measurement</span><span class="p">:</span><span class="w"> </span><span class="l">kWh</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">value_template</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ ((value | int) / 10) | float}}&#34;</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>Then, wrap the <code>snmp</code> sensor with the necessary properties:</p>
<p><code>devices/template/ups_energy.yaml</code>:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl">- <span class="nt">sensor</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;UPS Energy&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="c"># Unique ID is required for mgmt through the web UI</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">unique_id</span><span class="p">:</span><span class="w"> </span><span class="l">tmpl-ups-energy</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">icon</span><span class="p">:</span><span class="w"> </span><span class="l">mdi:lightning-bolt</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="c"># Required for Energy dashboard</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">state_class</span><span class="p">:</span><span class="w"> </span><span class="l">total_increasing</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">device_class</span><span class="p">:</span><span class="w"> </span><span class="l">energy</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">unit_of_measurement</span><span class="p">:</span><span class="w"> </span><span class="l">kWh</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">state</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ (states(&#39;sensor.ups_energy_raw&#39;) | float) }}&#34;</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>Restart Home Assistant and you should now be able to add <code>sensor.ups_energy</code> to the list of individual devices on your Energy Dashboard :D.</p>
<h3 id="current-and-voltage-independently">Current and Voltage independently</h3>
<p>After sorting through the <em>massive</em> MIB file that APC publishes; I only found ways to measure the voltage and current via SNMP. I assumed that APC meant for you to calculate the power use on your own from the voltage and current.</p>
<p>As it turns out, APC has a <code>upsHighPrecOutputEnergyUsage</code> field which reports: <code>The output energy usage of the UPS in hundredths of kWh.</code> If your APC device publishes a value on the OID <code>.1.3.6.1.4.1.318.1.1.1.4.3.6.0</code> then you can skip the configuration below; use the more concise configuration <a href="#a-single-oid-for-power-consumption" rel="">above</a>. If your devices <em><strong>does not</strong></em> publish the cumulative energy consumption, it can still be calculated manually.</p>
<p>The manual approach below is a lot like the concise approach above; uses two <code>snmp</code> sensors to collect the voltage and current from the UPS and then wrap everything in a LTS-compatible <code>template</code> sensor to get the data to show up on the energy dashboard.</p>
<p><code>devices/sensor/snmp.yaml</code>:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="c"># Unfortunately, there is no direct &#39;watt&#39; field. We need to calculate this on our own</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># P = IV so if we can get the current and voltage, we can figure out the power</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">##</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">platform</span><span class="p">:</span><span class="w"> </span><span class="l">snmp</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;UPS Output Current&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">host</span><span class="p">:</span><span class="w"> </span><span class="m">192.168.1.1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># The current in tenths of amperes drawn by the load on the UPS.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># Contained in Module(s): PowerNet-MIB</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c">##</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">baseoid</span><span class="p">:</span><span class="w"> </span><span class="l">.1.3.6.1.4.1.318.1.1.1.4.3.4.0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># Determines whether the sensor should start and keep working even if the SNMP host is unreachable or not responding.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># This allows the sensor to be initialized properly even if, for example, your printer is not on when you start Home Assistant.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">accept_errors</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># For reasons that I don&#39;t understand... HA does not like it when i specify &#39;device_class&#39; :/</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c">#device_class: current</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">unit_of_measurement</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;A&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># Because the number is in 10ths of amps, we need to shift the decimal by 1 place</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c">#   43 becomes 4.3</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c">##</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">value_template</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{((value | int) / 10) | float}}&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">platform</span><span class="p">:</span><span class="w"> </span><span class="l">snmp</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;UPS Output Voltage&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">host</span><span class="p">:</span><span class="w"> </span><span class="m">192.168.1.1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c">#The output voltage of the UPS system in tenths of VAC.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># Contained in Module(s): PowerNet-MIB</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c">##</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">baseoid</span><span class="p">:</span><span class="w"> </span><span class="l">.1.3.6.1.4.1.318.1.1.1.4.3.1.0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># Determines whether the sensor should start and keep working even if the SNMP host is unreachable or not responding.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># This allows the sensor to be initialized properly even if, for example, your printer is not on when you start Home Assistant.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">accept_errors</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">unit_of_measurement</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;V&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># Because the number is in 10ths of volts, we need to shift the decimal by 1 place</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c">#   1211 becomes 121.1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c">##</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">value_template</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{((value | int) / 10) | float}}&#34;</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p><code>devices/template/ups_energy.yaml</code>:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="c"># The docs around the long term stats support for a sensor are not super clear and seem to be a bit contradictory.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># Both the power and current sensors are &#39;point in time&#39; sensors and DO NOT represent an &#39;always increasing&#39; value.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># The docs seem to imply that HA will do the integration for you if the sensor has `state_class` set to `measurement` or</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#   `total_increasing`. But elsewhere in the docs, you have this:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#         Home Assistant tracks the min, max and mean value during the statistics period.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#         The state_class property must be set to measurement, and the device_class must not be either of `energy`, `gas`, or `monetary`.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># In testing, I was only able to get sensors that had `total_increasing` and `energy` set to show up / work with the energy dashboard. It looks like a `measurement` sensor _could_ be used... but only if the `last_reset` property can be set to 0... and currently this can&#39;t be done via YAML.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># So we lie about the sensor and tell HA that it&#39;s a `total_increasing` sensor and we just hope that the value never drops more than 10% which appears to be the signal to HA that the meter has been reset :/</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># https://developers.home-assistant.io/docs/core/entity/sensor/#long-term-statistics</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># https://www.home-assistant.io/integrations/sensor/</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">##</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">sensor</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;UPS Power&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="c"># Unique ID is required for mgmt through the web UI</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">unique_id</span><span class="p">:</span><span class="w"> </span><span class="l">tmpl-UPS-power-use</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">icon</span><span class="p">:</span><span class="w"> </span><span class="l">mdi:lightning-bolt</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="c"># This sensor records the instantaneous power load on the UPS... it is a measurement at that point in time</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">state_class</span><span class="p">:</span><span class="w"> </span><span class="l">measurement</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">device_class</span><span class="p">:</span><span class="w"> </span><span class="l">power</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">unit_of_measurement</span><span class="p">:</span><span class="w"> </span><span class="l">W</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">state</span><span class="p">:</span><span class="w"> </span><span class="p">&gt;</span><span class="sd">
</span></span></span><span class="line"><span class="cl"><span class="sd">        {% set current = states(&#39;sensor.UPS_output_current&#39;) | float %}
</span></span></span><span class="line"><span class="cl"><span class="sd">        {% set voltage = states(&#39;sensor.UPS_output_voltage&#39;) | float %}
</span></span></span><span class="line"><span class="cl"><span class="sd">        {{ (current * voltage) | round (2) }}</span><span class="w">        
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">sensor</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;UPS Energy&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="c"># Unique ID is required for mgmt through the web UI</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">unique_id</span><span class="p">:</span><span class="w"> </span><span class="l">tmpl-UPS-energy</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">icon</span><span class="p">:</span><span class="w"> </span><span class="l">mdi:lightning-bolt</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="c"># Lie to HA about the type of sensor so we get values in the dashboard.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">state_class</span><span class="p">:</span><span class="w"> </span><span class="l">total_increasing</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">device_class</span><span class="p">:</span><span class="w"> </span><span class="l">energy</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="c"># Since we are pretending to integrate over time, we are in Wh now.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="c"># Good thing, too... because the energy dashboard WILL NOT use any sensor that does not report in kWh or Wh</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">unit_of_measurement</span><span class="p">:</span><span class="w"> </span><span class="l">Wh</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">state</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ (states(&#39;sensor.UPS_power&#39;) | float) }}&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="c"># or, for kWh</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="c">#state: &#34;{{ (states(&#39;sensor.UPS_power&#39;) | float)/1000 }}&#34;</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div>]]></description></item><item><title>Fixing Home Assistant discovery with Tasmota on the Treatlife DS03</title><link>https://karlquinsland.com/treatlife-ds03-tasmota-autoconfig-with-homeassistant/</link><pubDate>Wed, 12 May 2021 00:00:00 +0000</pubDate><author>Author</author><guid>https://karlquinsland.com/treatlife-ds03-tasmota-autoconfig-with-homeassistant/</guid><description><![CDATA[<div class="details admonition warning open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-exclamation-triangle fa-fw"></i>Update<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">This post is now deprecated. It has been superseded by  <a href="/treatlife-ds03-esphome/" rel=""><code>Using ESPHome with the Treatlife DS03</code></a> from 2022-06.</div>
        </div>
    </div>
<p><strong>UPDATE:</strong> (2021-10-22): Tasmota 9.5.0 has been superseded by the new <a href="https://github.com/arendst/Tasmota/releases/tag/v10.0.0" target="_blank" rel="noopener noreffer">Tasmota 10.0.0 release</a>. This release works perfectly with the rules/automation outlined below; you no longer need to avoid the problematic 9.5 release with the DS03. I am extremely grateful to every one of the people that contributes to the Tasmota project to keep it improving!</p>
<p><del><strong>UPDATE:</strong> (2021-09-19): Multiple have gotten in touch with me seeking some support with this post. At present, there is a <a href="https://github.com/arendst/Tasmota/issues/12684#event-5035253885" target="_blank" rel="noopener noreffer">bug</a> with the Tasmota 9.5.0 release which breaks the automation outlined below. If you are having trouble getting the steps below to work <strong><em>either use Tasmota 9.4 or the latest development release of tasmota 9.5 if you&rsquo;re going to continue on with this post!</em></strong></del></p>
<hr>
<p>The Treatlife DS03 is one of only a few Tasmota compatible ceiling fan controllers available in the US. It&rsquo;s internal architecture splits the task of dimming the lights and switching the fan speed electronics from communicating over the network.</p>
<p>A very resource constrained ESP8266 module handles the network comms while a dedicated microcontroller running it&rsquo;s own software manages the user-facing buttons/indicator-lights as well as dimming the light and adjusting the fan speed. The two components communicate over a simple UART.</p>
<p>This is a totally reasonable way to build such a device, but for reasons that I don&rsquo;t fully understand, Tasmota does not publish a completely functional <a href="https://www.home-assistant.io/docs/mqtt/discovery/" target="_blank" rel="noopener noreffer">auto-configuration</a> payload for Home Assistant.</p>
<p>Home Assistant automatically discovers the full light/dimmer capabilities of the DS03, but for some reason does not see that the DS03 is capable of running a fan at 4 different speeds; Home Assistant only allows for turning the fan on/off.</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        The default auto-configuration leads Home Assistant to believe the fan can only be switched on/off.
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>The <a href="https://templates.blakadder.com/treatlife_DS03.html" target="_blank" rel="noopener noreffer">existing</a> guides on <a href="https://www.digiblur.com/2020/07/the-tasmota-fan-controller-ive-been.html" target="_blank" rel="noopener noreffer">how to flash the device</a> with Tasmota and integrate it with Home Assistant all work around this limitation by <em><em>manually</em></em> configuring Home Assistant to see the device as a multi-speed fan 🤦.</p>
<p>I&rsquo;m not a huge fan of doing things manually, especially when there&rsquo;s a well documented and robust protocol designed to make manual configuration unnecessary! Why ignore the almost completely working auto-configuration in favor of manual configuration? Why not just fix the auto-config payload so Home Assistant exposes the full functionality of the device?</p>
<p>Both of the above guides were written long before <a href="https://www.home-assistant.io/blog/2021/03/03/release-20213/#fan-speeds-100" target="_blank" rel="noopener noreffer">Home Assistant gained support</a> for fans with more than 3 speeds so even if I were to configure Home Assistant with a copy their example YAML, I&rsquo;d <em>still</em> be missing the ability to control the 4th speed!</p>
<h2 id="how">How</h2>
<p>In short, Tasmota supports some basic scripting, called <a href="https://tasmota.github.io/docs/Rules/" target="_blank" rel="noopener noreffer">rules</a>. They work exactly as you&rsquo;re thinking: On <code>$someEvent</code> do <a href="https://tasmota.github.io/docs/Commands/" target="_blank" rel="noopener noreffer"><code>$someAction</code></a>. One of the actions allows the Tasmota device to publish a message to a MQTT topic. I&rsquo;m going to have the DS03 broadcast a <em>proper</em> auto-configuration message to Home Assistant.</p>
<p>The technique is basically the same one outlined in <a href="https://blakadder.com/pir-in-tasmota-integration/" target="_blank" rel="noopener noreffer">this</a> article, but I&rsquo;m posting this to document a few of the subtle differences in my approach.</p>
<p>I&rsquo;ll assume that you&rsquo;ve successfully flashed your DS03 with Tasmota and have already configured the module and issued the necessary <code>ledtable</code> commands. You will also need the native <a href="https://www.home-assistant.io/integrations/tasmota/" target="_blank" rel="noopener noreffer">Tasmota</a> integration installed.</p>
<p>If you&rsquo;re following either the blakadder or digiblur guides linked above, stop at the step where you&rsquo;re meant to configure <code>rule1</code>.</p>
<p>Issue a slightly modified rule:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">Rule1 on TuyaReceived#Data=55AA03070005030400010016 do publish2 stat/%topic%/speed 25 endon
</span></span><span class="line"><span class="cl">    on TuyaReceived#Data=55AA03070005030400010117 do publish2 stat/%topic%/speed 50 endon
</span></span><span class="line"><span class="cl">    on TuyaReceived#Data=55AA03070005030400010218 do publish2 stat/%topic%/speed 75 endon
</span></span><span class="line"><span class="cl">    on TuyaReceived#Data=55AA03070005030400010319 do publish2 stat/%topic%/speed 100 endon
</span></span></code></pre></td></tr></table>
</div>
</div><p>This tells Tasmota to publish an integer speed (25,50,75,100) when it receives a specific packet from the dedicated MCU over th UART.</p>
<p>Then, issue a second rule to actually publish the configuration data:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">rule2 on SetOption19#Data=OFF do publish2 homeassistant/fan/%macaddr%/config {&#34;uniq_id&#34;:&#34;AABBCC&#34;,&#34;~&#34;:&#34;%topic%/POWER1&#34;,&#34;cmd_t&#34;:&#34;cmnd/~&#34;,&#34;pl_off&#34;:&#34;OFF&#34;,&#34;pl_on&#34;:&#34;ON&#34;,&#34;stat_t&#34;:&#34;stat/~&#34;,&#34;avty_t&#34;:&#34;tele/%topic%/LWT&#34;,&#34;pl_avail&#34;:&#34;Online&#34;,&#34;pl_not_avail&#34;:&#34;Offline&#34;,&#34;pct_cmd_t&#34;:&#34;cmnd/%topic%/tuyasend4&#34;,&#34;pct_cmd_tpl&#34;:&#34;{%set v=value|int%}{%if v&lt;=25%}3,0{%elif v&lt;=50%}3,1{%elif v&lt;=75%}3,2{%elif v&lt;=100%}3,3{%endif%}&#34;,&#34;pct_stat_t&#34;:&#34;stat/%topic%/speed&#34;,&#34;dev&#34;:{&#34;cns&#34;:[[&#34;mac&#34;,&#34;%macaddr%&#34;]]}} endon
</span></span></code></pre></td></tr></table>
</div>
</div><p><strong>Note:</strong> You&rsquo;ll probably want to modify the above payload so the occurrences of the placeholder string <code>AABBCC</code> are replaced with the last 6 characters of your own device&rsquo;s MAC address!</p>
<p>For readability, here&rsquo;s the unminified JSON:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;uniq_id&#34;</span><span class="p">:</span> <span class="s2">&#34;AABBCC&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;~&#34;</span><span class="p">:</span><span class="s2">&#34;%topic%/POWER1&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;cmd_t&#34;</span><span class="p">:</span> <span class="s2">&#34;cmnd/~&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;pl_off&#34;</span><span class="p">:</span> <span class="s2">&#34;OFF&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;pl_on&#34;</span><span class="p">:</span> <span class="s2">&#34;ON&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;stat_t&#34;</span><span class="p">:</span> <span class="s2">&#34;stat/~&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;avty_t&#34;</span><span class="p">:</span> <span class="s2">&#34;tele/%topic%/LWT&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;pl_avail&#34;</span><span class="p">:</span> <span class="s2">&#34;Online&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;pl_not_avail&#34;</span><span class="p">:</span> <span class="s2">&#34;Offline&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;pct_cmd_t&#34;</span><span class="p">:</span> <span class="s2">&#34;cmnd/%topic%/tuyasend4&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;pct_cmd_tpl&#34;</span><span class="p">:</span> <span class="s2">&#34;{%set v=value|int%}{%if v&lt;=25%}3,0{%elif v&lt;=50%}3,1{%elif v&lt;=75%}3,2{%elif v&lt;=100%}3,3{%endif%}&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;pct_stat_t&#34;</span><span class="p">:</span> <span class="s2">&#34;stat/%topic%/speed&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;dev&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;cns&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">      <span class="p">[</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;mac&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;%macaddr%&#34;</span>
</span></span><span class="line"><span class="cl">      <span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="p">]</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p><strong>Note:</strong> The <code>dev</code> portion of the payload is the <a href="https://www.home-assistant.io/integrations/fan.mqtt/#device" target="_blank" rel="noopener noreffer">magic that convinces Home Assistant to combine the multiple entities under once device</a>. Without that portion of the document, you will still have a properly configured DS03, but it will exist as an &lsquo;orphaned&rsquo; entity that belongs to no device!</p>
<p>All that&rsquo;s left is to enable <code>rule2</code> and then trigger it:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">rule2 1
</span></span><span class="line"><span class="cl">so19 0
</span></span></code></pre></td></tr></table>
</div>
</div><p>Altogether, It&rsquo;ll look something like this:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">18:23:54.140 CMD: Rule1 on TuyaReceived#Data=55AA03070005030400010016 do publish2 stat/%topic%/speed 25 endon on TuyaReceived#Data=55AA03070005030400010117 do publish2 stat/%topic%/speed 50 endon on TuyaReceived#Data=55AA03070005030400010218 do publish2 stat/%topic%/speed 75 endon on TuyaReceived#Data=55AA03070005030400010319 do publish2 stat/%topic%/speed 100 endon
</span></span><span class="line"><span class="cl">18:23:54.149 RUL: Stored uncompressed, would compress from 344 to 98 (-72%)
</span></span><span class="line"><span class="cl">18:23:54.155 MQT: stat/living_room_ceiling_fan/RESULT = {&#34;Rule1&#34;:{&#34;State&#34;:&#34;ON&#34;,&#34;Once&#34;:&#34;OFF&#34;,&#34;StopOnError&#34;:&#34;OFF&#34;,&#34;Length&#34;:344,&#34;Free&#34;:167,&#34;Rules&#34;:&#34;on TuyaReceived#Data=55AA03070005030400010016 do publish2 stat/%topic%/speed 25 endon on TuyaReceived#Data=55AA03070005030400010117 do publish2 stat/%topic%/speed 50 endon on TuyaReceived#Data=55AA03070005030400010218 do publish2 stat/%topic%/speed 75 endon on TuyaReceived#Data=55AA03070005030400010319 do publish2 stat/%topic%/speed 100 endon&#34;}}
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">18:24:05.061 CMD: rule2 on SetOption19#Data=OFF do publish2 homeassistant/fan/%macaddr%/config {&#34;uniq_id&#34;:&#34;AABBCC&#34;,&#34;~&#34;:&#34;%topic%/POWER1&#34;,&#34;cmd_t&#34;:&#34;cmnd/~&#34;,&#34;pl_off&#34;:&#34;OFF&#34;,&#34;pl_on&#34;:&#34;ON&#34;,&#34;stat_t&#34;:&#34;stat/~&#34;,&#34;avty_t&#34;:&#34;tele/%topic%/LWT&#34;,&#34;pl_avail&#34;:&#34;Online&#34;,&#34;pl_not_avail&#34;:&#34;Offline&#34;,&#34;pct_cmd_t&#34;:&#34;cmnd/%topic%/tuyasend4&#34;,&#34;pct_cmd_tpl&#34;:&#34;{%set v=value|int%}{%if v&lt;=25%}3,0{%elif v&lt;=50%}3,1{%elif v&lt;=75%}3,2{%elif v&lt;=100%}3,3{%endif%}&#34;,&#34;pct_stat_t&#34;:&#34;stat/%topic%/speed&#34;,&#34;dev&#34;:{&#34;cns&#34;:[[&#34;mac&#34;,&#34;%macaddr%&#34;]]}} endon
</span></span><span class="line"><span class="cl">18:24:05.093 RUL: Stored uncompressed, would compress from 473 to 351 (-26%)
</span></span><span class="line"><span class="cl">18:24:05.100 MQT: stat/living_room_ceiling_fan/RESULT = {&#34;Rule2&#34;:{&#34;State&#34;:&#34;OFF&#34;,&#34;Once&#34;:&#34;OFF&#34;,&#34;StopOnError&#34;:&#34;OFF&#34;,&#34;Length&#34;:473,&#34;Free&#34;:38,&#34;Rules&#34;:&#34;on SetOption19#Data=OFF do publish2 homeassistant/fan/%macaddr%/config {\&#34;uniq_id\&#34;:\&#34;AABBCC\&#34;,\&#34;~\&#34;:\&#34;%topic%/POWER1\&#34;,\&#34;cmd_t\&#34;:\&#34;cmnd/~\&#34;,\&#34;pl_off\&#34;:\&#34;OFF\&#34;,\&#34;pl_on\&#34;:\&#34;ON\&#34;,\&#34;stat_t\&#34;:\&#34;stat/~\&#34;,\&#34;avty_t\&#34;:\&#34;tele/%topic%/LWT\&#34;,\&#34;pl_avail\&#34;:\&#34;Online\&#34;,\&#34;pl_not_avail\&#34;:\&#34;Offline\&#34;,\&#34;pct_cmd_t\&#34;:\&#34;cmnd/%topic%/tuyasend4\&#34;,\&#34;pct_cmd_tpl\&#34;:\&#34;{%set v=value|int%}{%if v&lt;=25%}3,0{%elif v&lt;=50%}3,1{%elif v&lt;=75%}3,2{%elif v&lt;=100%}3,3{%endif%}\&#34;,\&#34;pct_stat_t\&#34;:\&#34;stat/%topic%/speed\&#34;,\&#34;dev\&#34;:{\&#34;cns\&#34;:[[\&#34;mac\&#34;,\&#34;%macaddr%\&#34;]]}} endon&#34;}}
</span></span><span class="line"><span class="cl">18:24:07.494 CMD: rule2 1
</span></span><span class="line"><span class="cl">18:24:07.503 MQT: stat/living_room_ceiling_fan/RESULT = {&#34;Rule2&#34;:{&#34;State&#34;:&#34;ON&#34;,&#34;Once&#34;:&#34;OFF&#34;,&#34;StopOnError&#34;:&#34;OFF&#34;,&#34;Length&#34;:473,&#34;Free&#34;:38,&#34;Rules&#34;:&#34;on SetOption19#Data=OFF do publish2 homeassistant/fan/%macaddr%/config {\&#34;uniq_id\&#34;:\&#34;AABBCC\&#34;,\&#34;~\&#34;:\&#34;%topic%/POWER1\&#34;,\&#34;cmd_t\&#34;:\&#34;cmnd/~\&#34;,\&#34;pl_off\&#34;:\&#34;OFF\&#34;,\&#34;pl_on\&#34;:\&#34;ON\&#34;,\&#34;stat_t\&#34;:\&#34;stat/~\&#34;,\&#34;avty_t\&#34;:\&#34;tele/%topic%/LWT\&#34;,\&#34;pl_avail\&#34;:\&#34;Online\&#34;,\&#34;pl_not_avail\&#34;:\&#34;Offline\&#34;,\&#34;pct_cmd_t\&#34;:\&#34;cmnd/%topic%/tuyasend4\&#34;,\&#34;pct_cmd_tpl\&#34;:\&#34;{%set v=value|int%}{%if v&lt;=25%}3,0{%elif v&lt;=50%}3,1{%elif v&lt;=75%}3,2{%elif v&lt;=100%}3,3{%endif%}\&#34;,\&#34;pct_stat_t\&#34;:\&#34;stat/%topic%/speed\&#34;,\&#34;dev\&#34;:{\&#34;cns\&#34;:[[\&#34;mac\&#34;,\&#34;%macaddr%\&#34;]]}} endon&#34;}}
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">18:24:10.362 CMD: so19 0
</span></span><span class="line"><span class="cl">18:24:10.369 MQT: stat/living_room_ceiling_fan/RESULT = {&#34;SetOption19&#34;:&#34;OFF&#34;}
</span></span><span class="line"><span class="cl">18:24:10.414 RUL: SETOPTION19#DATA=OFF performs &#34;publish2 homeassistant/fan/DDEEFFAABBCC/config {&#34;uniq_id&#34;:&#34;AABBCC&#34;,&#34;~&#34;:&#34;living_room_ceiling_...
</span></span><span class="line"><span class="cl">18:24:10.421 MQT: home Assistant/fan/DDEEFFAABBCC/config = {&#34;uniq_id&#34;:&#34;AABBCC&#34;,&#34;~&#34;:&#34;living_room_ceiling_fan/POWER1&#34;,&#34;cmd_t&#34;:&#34;cmnd/~&#34;,&#34;pl_off&#34;:&#34;OFF&#34;,&#34;pl_on&#34;:&#34;ON&#34;,&#34;stat_t&#34;:&#34;stat/~&#34;,&#34;avty_t&#34;:&#34;tele/living_room_ceiling_fan/LWT&#34;,&#34;pl_avail&#34;:&#34;Online&#34;,&#34;pl_not_avail&#34;:&#34;Offline&#34;,&#34;pct_cmd_t&#34;:&#34;cmnd/living_room_ceiling_fan/tuyasend4&#34;,&#34;pct_cmd_tpl&#34;:&#34;{%set v=value|int%}{%if v&lt;=25%}3,0{%elif v&lt;=50%}3,1{%elif v&lt;=75%}3,2{%elif v&lt;=100%}3,3{%endif%}&#34;,&#34;pct_stat_t&#34;:&#34;stat/living_room_ceiling_fan/speed&#34;,&#34;dev&#34;:{&#34;cns&#34;:[[&#34;mac&#34;,&#34;DDEEFFAABBCC&#34;]]}} (retained)
</span></span><span class="line"><span class="cl">18:24:10.509 LOG: Home Assistant MQTT Discovery disabled.
</span></span></code></pre></td></tr></table>
</div>
</div><p>If everything worked correctly, Home Assistant should now show a single device in the <a href="https://developers.home-assistant.io/docs/device_registry_index/" target="_blank" rel="noopener noreffer">device registry</a> with a dimmable light entity and a variable-speed fan entity!</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        The DS03 device entity after the variable speed configuration document is received by Home Assistant.
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p><strong>Note:</strong> Depending on weather or not Home Assistant has previously &lsquo;seen&rsquo; your DS03 via the native native <a href="https://www.home-assistant.io/integrations/tasmota/" target="_blank" rel="noopener noreffer">Tasmota</a> integration, you may see <em>three</em> entities on the device page; the light/dimmer, the switch/fan and the variable speed fan. Just disable the &lsquo;basic&rsquo; fan switch entity that Tasmota publishes as discussed below.</p>
<h4 id="updating-a-ds03-thats-already-integrated-with-home-assistant">Updating a DS03 that&rsquo;s already integrated with Home Assistant</h4>
<p>If you&rsquo;ve already got a DS03 that&rsquo;s integrated with Home Assistant, you can still get the device to properly auto-configure. Just remove the YAML configuration for both the light and fan entities.</p>
<p>You will likely need to restart HA to make sure all traces of the manual configurations are removed from the <a href="https://developers.home-assistant.io/docs/entity_registry_index/" target="_blank" rel="noopener noreffer">entity registry</a>.</p>
<p>Once Home Assistant has forgotten all about the manual entities and the native <a href="https://www.home-assistant.io/integrations/tasmota/" target="_blank" rel="noopener noreffer">Tasmota</a> integration in installed, all of the MQTT-connected Tasmota devices <em>should</em> get picked up and configured in Home Assistant. At this point, you should have the single device with two entities; dimmable light and binary-switch fan as shown in the first picture on this post.</p>
<p>If your DS03 was already configured with Home Assistant via the Tasmota integration, just disable the simple switch entity that Tasmota configures Home Assistant with:</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        Toggle &#39;Enable entity&#39; off to hide the basic binary switch that Tasmota configured Home Assistant with.
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>After disabling the switch/fan entity, trigger <code>rule2</code> again and refresh the device entity page in Home Assistant to confirm that the device now has a <code>MQTT Fan</code> entity if it wasn&rsquo;t there already.</p>
<p>Enjoy :)</p>
<h4 id="why-use-setoption19off-as-the-trigger">Why use <code>SetOption19:OFF</code> as the trigger?</h4>
<p>I run my MQTT broker on Kubernetes and do not have any persistance configured for that pod. This means that regardless of what retention settings a message was published with, every message on every topic is wiped out whenever the MQTT broker pod is rescheduled. As a result almost every device that Home Assistant monitors or controls via MQTT drifts into an <code>Unavailable</code> state whenever I do any maintenance on my K8s cluster.</p>
<p>I&rsquo;m not the <a href="https://community.home-assistant.io/t/tasmota-going-offline-at-random-times/116299" target="_blank" rel="noopener noreffer">only one</a> with <a href="https://community.home-assistant.io/t/sonoff-tasmota-started-regularly-showing-unavailable-on-home-assistant/90157/83" target="_blank" rel="noopener noreffer">this issue</a>, even if the cause is different.</p>
<p>To get around this, I have a small automation that pokes the Tasmota devices every hour and when Home Assistant starts up. Since the Home Assistant pod takes longer than the MQTT pod to initialize, having HA poke the devices on startup minimizes the time a given entity is <code>Unavailable</code> in HA.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">alias</span><span class="p">:</span><span class="w"> </span><span class="l">Tasmotas Announce</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;Prevents devices from going Unavailable&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">trigger</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">platform</span><span class="p">:</span><span class="w"> </span><span class="l">home Assistant</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">event</span><span class="p">:</span><span class="w"> </span><span class="l">start</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">platform</span><span class="p">:</span><span class="w"> </span><span class="l">time_pattern</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">hours</span><span class="p">:</span><span class="w"> </span><span class="l">/1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">condition</span><span class="p">:</span><span class="w"> </span><span class="p">[]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">action</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># For reasons that I don&#39;t understand, different tasmota devices seem to</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c">#     subscribe to a different group topic. cmnd/tas vs tas/cmnd</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c">##</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">service</span><span class="p">:</span><span class="w"> </span><span class="l">mqtt.publish</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">data</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">topic</span><span class="p">:</span><span class="w"> </span><span class="l">cmnd/tasmotas/SetOption19</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">payload</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;0&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">service</span><span class="p">:</span><span class="w"> </span><span class="l">mqtt.publish</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">data</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">topic</span><span class="p">:</span><span class="w"> </span><span class="l">tasmotas/cmnd/SetOption19</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">payload</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;0&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">mode</span><span class="p">:</span><span class="w"> </span><span class="l">single</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>You could probably work around this whole thing by changing the trigger for <code>rule2</code> to something like <code>on Mqtt#Connected publish2</code>. Or storing the configuration payload as a <a href="https://tasmota.github.io/docs/Rules/#rule-variables" target="_blank" rel="noopener noreffer">variable</a> so you could write multiple triggers for the same <code>publish2 %mem1%</code> action 🤔.</p>
<h3 id="side-note-rules-crash">Side note: Rules Crash!</h3>
<p>While developing the configuration payload, I was able to reliably crash the ESP8266 module causing Tasmota to reboot. The crash / reboot symptoms are pretty similar to those outlined <a href="https://tasmota.github.io/docs/Troubleshooting/#running-out-of-ram" target="_blank" rel="noopener noreffer">here</a> so I assume that even though the rules &ldquo;fit&rdquo;, something about how the rule was parsed or the actions the rule drove caused the ESP to run out of RAM.</p>
<p>When I say &ldquo;fit&rdquo; I mean that I&rsquo;d see lines like this in the console after configuring a test payload for <code>rule2</code>:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">MQT: stat/living_room_ceiling_fan/RESULT = {&#34;Rule2&#34;:{&#34;State&#34;:&#34;ON&#34;,...&#34;Free&#34;:9,&#34;Rules&#34;:&#34;on ... endon&#34;}}
</span></span></code></pre></td></tr></table>
</div>
</div><p>I could technically make the rule <code>9</code> characters longer and it&rsquo;d still fit&hellip; right?</p>
<p>Not quite. Looking at the result from issuing the <code>Rule1</code> command, it was clear that while <code>rule2</code> would have an absolute maximum length of 511 characters (<code>&quot;Length&quot;:344,&quot;Free&quot;:167</code>; 344+167=511) there was also a less well defined soft limit on rule length.</p>
<p>For some versions of my <code>rule2</code> payload, I was able to solve the crashing just by switching to the &rsquo;lite&rsquo; version of Tasmota. While the &rsquo;lite&rsquo; version of Tasmota does work with Tuya MCU (<code>USE_TUYA_MCU</code>), it <a href="https://github.com/arendst/Tasmota/blob/v9.4.0/BUILDS.md" target="_blank" rel="noopener noreffer">does <em>not</em> support</a> Home Assistant configuration (<code>USE_HOME_ASSISTANT</code>)!</p>
<p>After flashing back to the &lsquo;regular&rsquo; Tasmota build, I set out trying to compress the <code>rule2</code> payload as much as possible so that it would still work <em>and</em> not reliably crash the ESP8266 on the DS03.</p>
<p>After testing several things, I managed to get a working <code>rule2</code> that didn&rsquo;t reliably crash when triggered.</p>
]]></description></item></channel></rss>