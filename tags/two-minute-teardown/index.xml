<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Two-Minute-Teardown - Tag - karl</title><link>https://karlquinsland.com/tags/two-minute-teardown/</link><description>Two-Minute-Teardown - Tag - karl</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 20 Apr 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://karlquinsland.com/tags/two-minute-teardown/" rel="self" type="application/rss+xml"/><item><title>#TwoMinuteTeardown: Petkit Eversweet Solo 2</title><link>https://karlquinsland.com/petkit-eversweet-solo2-teardown/</link><pubDate>Sun, 20 Apr 2025 00:00:00 +0000</pubDate><author>Author</author><guid>https://karlquinsland.com/petkit-eversweet-solo2-teardown/</guid><description><![CDATA[<h1 id="two-minute-teardown-petkit-eversweet-solo-2">Two Minute Teardown: Petkit Eversweet Solo 2</h1>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>I am doing research for an upcoming project and was curious about how other people have solved a similar problem.
<a href="https://www.amazon.com/dp/B0B3RWF653" target="_blank" rel="noopener noreffer">This</a> happens to be the cheapest option that was available at the time.</p>
<p>I am primarily interested in the pump; the integrated &ldquo;low water&rdquo; sensor and the UV-C sterilization are very nice features that would check off a lot of boxes for me&hellip; Unfortunately this pump it lacks both the flow rate and the head that I need for my project.</p>
<p>Oh well.</p>
<p>The pump is sealed with a potting compound so I was not able to do a full teardown.</p>
<p><figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        <p>
            The black protrusion is the water level sensor.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>

</p>
<p>The base isn&rsquo;t that spectacular; a cheap micro with BTLE controlling power to a basic wireless power transmission module.
The wireless power module is covered in conformal coating so the IC number was a pain to read but it is a XKT-511.
I can find <a href="https://leap.tardate.com/electronics101/power/wirelessledmodule/" target="_blank" rel="noopener noreffer"><em>very</em> little information</a> about this IC.
As far as I can tell, it is similar to Qi wireless power but without any signaling or modulation of the carrier signal.
Various qi receiver devices will briefly &ldquo;wake up&rdquo; when placed on the base but they do not stay powered on or charge.
My <a href="/wozniak-wpx-0001a-qi-tester-teardown/" rel="">qi tester</a> does power up and measures about .2W but it can&rsquo;t recognize the protocol.</p>
<p><figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>

</p>
]]></description></item><item><title>#TwoMinuteTeardown: Wozniak WPX-0001 Qi Tester</title><link>https://karlquinsland.com/wozniak-wpx-0001a-qi-tester-teardown/</link><pubDate>Sun, 20 Apr 2025 00:00:00 +0000</pubDate><author>Author</author><guid>https://karlquinsland.com/wozniak-wpx-0001a-qi-tester-teardown/</guid><description><![CDATA[<h1 id="qi-wireless-power-tester">Qi wireless power tester</h1>
<p>The <a href="https://en.wikipedia.org/wiki/Qi_%28standard%29" target="_blank" rel="noopener noreffer">Qi standard</a> for transmitting power is ~ 15 years old and has been ubiquitous for at least a decade now.
And yet, I have only <em>recently</em> seen any testing equipment for it.</p>
<p>The <a href="https://www.aliexpress.us/item/3256808097182455.html" target="_blank" rel="noopener noreffer">Wozniak WPX-0001A</a> is a simple tester that can measure the output level and protocol of Qi chargers.</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            &#39;standard tools create wonderful things&#39; ❤️.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Please ignore the super shiny reflections...
            
                
                
        </p> 
    </figcaption>
    
</figure>


<p>In the box you get a basic NTC probe, a USB-C cable and the tester itself.
The printed paper &ldquo;manual&rdquo; is just a QR code that points to <a href="https://user.ee-lab.cn" target="_blank" rel="noopener noreffer"><code>user.ee-lab.cn</code></a>.</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Yep, more reflections/glare. Sorry!
            
                
                
        </p> 
    </figcaption>
    
</figure>


<p>The unit is made up of two circular PCBs screwed together.
The screws are hiding behind the decal face plate.</p>
<p>Take your time here and use a heat gun to soften the adhesive&hellip; or you risk breaking the plastic cover.</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Three of the four screws can be seen here. The remaining screw is hiding beneath the remaining decal shard.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<p>The LCD is also glued in place. The ribbon cable is <em>just</em> long enough; putting it back together is a bit of a pain.</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>The non-covered gold-plated traces and black silkscreen <em>pop</em>.
Unfortunately, most ICs are either too small for me to read or the marking have been laser etched off.</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>The business-end of the tester is a Qi receiver coil.
It&rsquo;s two coils of magnet wire and some magnets. Nothing special here.</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        <p>
            The snaking black cable is the NTC probe.
            
                
                
        </p> 
    </figcaption>
    
</figure>


]]></description></item><item><title>#TwoMinuteTeardown: Panel Mount Liquid Level Indicator</title><link>https://karlquinsland.com/generic-liquid-level-display/</link><pubDate>Sat, 15 Feb 2025 00:00:00 +0000</pubDate><author>Author</author><guid>https://karlquinsland.com/generic-liquid-level-display/</guid><description><![CDATA[<h1 id="generic-liquid-level-meter-teardown">Generic liquid level meter teardown</h1>
<p>I ordered this part years ago for a project I eventually canceled.</p>
<p>I can&rsquo;t use it for anything, and it&rsquo;s just taking up space, so I&rsquo;m going to open it up before I recycle it.</p>
<p>The Ali Express listing is a 404 so I don&rsquo;t have a link to share or really any information about it.</p>
<p>The main thing to take away is that it&rsquo;s meant to interface with a liquid level sensor.
It will display the level of liquid in a tank and - optionally - trigger a few relays based on the level.</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>This is a generic case; not all screw terminals pictured here are actually wired up to anything on this model.</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Not all the screw terminals are actually wired up to anything on this model; the case is generic.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>The main body slides off pretty easily.
There are two PCBs inside: one for the display and one to handle the relays and sensor input.</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>The display PCB is pretty simple; no active electronics and a tonne of LEDs.
The bar graph LEDs are almost certainly <a href="https://en.wikipedia.org/wiki/Charlieplexing" target="_blank" rel="noopener noreffer">charlieplexed</a> but the 7 segment might have an integrated driver.</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>The screw terminals on the rear of the case are directly soldered to the main PCB so I&rsquo;m not going to be able to take it apart any further without disordering things&hellip; defeating the spirit of the <a href="/tags/two-minute-teardown/" rel="">#TwoMinuteTeardown</a>.</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>Looking at the top left, you can see the few pins for the 7-segment displays; a total of 12 pins.
Of those 12, some don&rsquo;t have traces leading to them so they&rsquo;re probably just for mechanical support. There are far too few remaining pins for even basic charlieplexing so I&rsquo;m guessing there&rsquo;s an integrated driver of some kind. Probably a <a href="https://www.analog.com/media/en/technical-documentation/data-sheets/max7219-max7221.pdf" target="_blank" rel="noopener noreffer">max7219</a> or similar</p>
<h2 id="the-main-ics">The main ICs</h2>
<p>Really just the one main application processor and a few support ICs.</p>
<ul>
<li><a href="https://www.jotrin.com/product/parts/MA803AS2" target="_blank" rel="noopener noreffer"><code>MA803AS2</code></a> - 8051 based microcontroller that&rsquo;s running the show</li>
<li><a href="https://www.alldatasheet.com/datasheet-pdf/pdf/1679343/NEXPERIA/HEF4051B.html" target="_blank" rel="noopener noreffer"><code>HEF4051B</code></a> - 8-channel analog multiplexer, probably for the display</li>
<li><code>74hc164</code> - 8-bit shift register, probably for the display</li>
</ul>
]]></description></item><item><title>#TwoMinuteTeardown: Home Assistant Voice - Preview Edition</title><link>https://karlquinsland.com/home-assistant-voice-pe-teardown/</link><pubDate>Sat, 01 Feb 2025 00:00:00 +0000</pubDate><author>Author</author><guid>https://karlquinsland.com/home-assistant-voice-pe-teardown/</guid><description><![CDATA[<h1 id="home-assistant-voice-preview-edition-teardown">Home Assistant Voice: Preview Edition teardown</h1>
<p>This is a quick <a href="/tags/two-minute-teardown/" rel="">#TwoMinuteTeardown</a> post for the recently released <a href="https://www.home-assistant.io/voice-pe/" target="_blank" rel="noopener noreffer">Home Assistant Voice Node - Preview edition</a>.</p>
<p>Normally, I&rsquo;d be doing a full teardown, but this is a little different; the Home Assistant team has done a <em>lot</em> of the work out in the open.
With just a quick Google, you can find official:</p>
<ul>
<li>teardown instructions <a href="https://voice-pe.home-assistant.io/guides/disassemble/" target="_blank" rel="noopener noreffer">here</a>.</li>
<li>source code <a href="https://github.com/esphome/home-assistant-voice-pe" target="_blank" rel="noopener noreffer">here</a>.</li>
<li>3D printable case <a href="https://www.printables.com/model/1110526-home-assistant-voice-preview-edition-enclosure" target="_blank" rel="noopener noreffer">files</a>.</li>
<li>Instructions for adding custom devices <a href="https://voice-pe.home-assistant.io/guides/grove_port/" target="_blank" rel="noopener noreffer">here</a>.</li>
</ul>
<p>I am grateful for such a well-documented and open project.
Truly, by hackers for hackers!</p>
<h2 id="teardown">Teardown</h2>
<p>See the official instructions if you can&rsquo;t figure it out.</p>
<p>There&rsquo;s not much to the device, really.
The top half hosts the physical buttons and the microphones.
The thin, metal-looking piece in the top right is the antenna.</p>
<p>In the bottom right, there&rsquo;s a small switch that appears to mux between the main application processor (ESP32) and the audio processor.</p>
<p>I wonder weather this is &ldquo;leftover&rdquo; from development and they haven&rsquo;t gotten around to simplifying the BOM yet or if this is intentionally populated for users to re-program the audio processor.</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>All of the &ldquo;fun&rdquo; stuff is on the bottom half.</p>
<p>Immediately, you notice the PCB has multiple <em>populated</em> pin headers for hacking. Bonus, they&rsquo;re all labeled!</p>
<p>The layout and BOM is about what you&rsquo;d expect for a ~$50 single-purpose device.</p>
<p>Where possible, I&rsquo;ve <a href="#ics" rel="">identified</a> the big ICs.</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<h3 id="wishful-thinking">wishful thinking</h3>
<p>In a word: Ethernet.</p>
<p>Most of the ESP32 product line does not have support for ethernet via <a href="https://en.wikipedia.org/wiki/Media-independent_interface#RMII" target="_blank" rel="noopener noreffer">RMII</a> (unfortunately) but there is always SPI based ethernet.</p>
<p>There are a few areas where the PCB is bare/empty and with a few tweaks to the layout, it would have been possible to also expose SPI headers next to the <a href="https://wiki.seeedstudio.com/Grove-I2C_Hub/" target="_blank" rel="noopener noreffer">grove connector</a>.</p>
<p>Assuming there&rsquo;s a spare SPI peripheral to use, SPI based ethernet would have latency and throughput as good as or better than WiFi.</p>
<p>It would have been a nice option for those of us who prefer the reliability of wired connections.</p>
<p>Oh well.</p>
<h2 id="ics">ICs</h2>
<p>This is just the big ones that were going to be easy-ish to positively identify.
I skipped a few of the super small ICs that had a few characters (at most!) of identification on them.</p>
<p>Two flash chips, one for the ESP32 and one for the &ldquo;ai&rdquo; chip which is maybe doing detection and is almost certainly doing some other DSP stuff.
TI parts for the audio codec and a few miscellaneous bits as well.</p>
<h3 id="zbit-semiconductor-zb25vq128">zbit semiconductor ZB25VQ128</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">AN2414
</span></span><span class="line"><span class="cl">25VQ128DSJG
</span></span><span class="line"><span class="cl">P3S952
</span></span></code></pre></td></tr></table>
</div>
</div><p><a href="https://linux-chenxing.org/pioneer3/sv50pd/ZB25VQ128.pdf" target="_blank" rel="noopener noreffer">This</a> is a clone of a super common winbond nor flash chip with the same part number.</p>
<h3 id="zbit-semiconductor-zb25vq32">zbit semiconductor ZB25VQ32</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">KN2444
</span></span><span class="line"><span class="cl">25VQ32DSJG
</span></span><span class="line"><span class="cl">EQ4537
</span></span></code></pre></td></tr></table>
</div>
</div><p><a href="https://semic-boutique.com/wp-content/uploads/2016/05/ZB25VQ32.pdf" target="_blank" rel="noopener noreffer">Same</a> as above, but smaller.</p>
<h3 id="ti-tlv320aic3204">TI TLV320AIC3204</h3>
<p><a href="https://www.ti.com/product/TLV320AIC3204" target="_blank" rel="noopener noreffer">This</a> is the audio codec.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">AIC
</span></span><span class="line"><span class="cl">3204
</span></span><span class="line"><span class="cl">TI 48I
</span></span><span class="line"><span class="cl">A69Y G4
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="ti-sn74lvc125a">TI SN74LVC125A</h3>
<p><a href="https://www.ti.com/product/SN74LVC125A" target="_blank" rel="noopener noreffer">This</a> is a pretty common buffer IC and I don&rsquo;t know for sure what it&rsquo;s being used for.
I am 99% certain that the LEDs under the rotary encoder are neopixels and those can be driven directly from the ESP32.
The only other thing that comes to mind is a &ldquo;switch&rdquo; to physically cut power to the microphones when the user has engaged the mute switch.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">LC125A
</span></span><span class="line"><span class="cl">TI44K
</span></span><span class="line"><span class="cl">C237
</span></span><span class="line"><span class="cl">9F
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="xmos-xu316">XMOS XU316</h3>
<p>The <a href="https://www.xmos.com/download/XU316-1024-QF60A-xcore_ai-Datasheet%2826%29.pdf" target="_blank" rel="noopener noreffer">XU316-1024-QF60A</a> is an interesting chip.
The product name and datasheet suggest that it&rsquo;s instrumental in &ldquo;ai&rdquo; workloads 🙄 but the datasheet is a bit more concrete:</p>
<blockquote>
<p>The xcore.ai series is a comprehensive range of 32-bit multicore microcontrollers that brings the low latency and timing determinism of the xCORE architecture to mainstream embedded applications.
Unlike conventional microcontrollers, xCORE multicore microcontrollers execute multiple real-time tasks simultaneously and communicate between tasks using a high speed network.
Because xCORE multicore microcontrollers are completely deterministic when executing from internal memory, you can write software to implement functions that traditionally require dedicated hardware.</p>
</blockquote>
<p>This is doing real time audio processing - presumably to cancel background noise/echo - and might also be doing wake word detection.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">XMOS
</span></span><span class="line"><span class="cl">V16A0
</span></span><span class="line"><span class="cl">GT2446P2
</span></span><span class="line"><span class="cl">TMCY48.00
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="espressif-esp32-s3">Espressif ESP32-S3</h3>
<p>This chip needs no introduction!</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">ESP32-S3
</span></span><span class="line"><span class="cl">242024
</span></span><span class="line"><span class="cl">R8MRK668000
</span></span><span class="line"><span class="cl">UC00MBE423
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="the-little-guys">The little guys</h3>
<p>All the ICs that are too small to have full/meaningful part numbers.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">FE
</span></span><span class="line"><span class="cl">NZ
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">f9
</span></span><span class="line"><span class="cl">GkA
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">CEDTI
</span></span></code></pre></td></tr></table>
</div>
</div><p>Given the proximity to both the speaker connector and the <a href="#ti-tlv320aic3204" rel="">audio codec</a>, I am guessing this is an audio amplifier, probably also from TI.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">TI 45
</span></span><span class="line"><span class="cl">AYK
</span></span></code></pre></td></tr></table>
</div>
</div>]]></description></item><item><title>AliExpress 11.11 Sale Teardowns (2024 edition)</title><link>https://karlquinsland.com/aliexpress-11-11-sale-teardowns-2024/</link><pubDate>Sun, 01 Dec 2024 00:00:00 +0000</pubDate><author>Author</author><guid>https://karlquinsland.com/aliexpress-11-11-sale-teardowns-2024/</guid><description><![CDATA[<!-- markdownlint-disable-file MD024 -->
<h1 id="11-11-day-teardowns-2024-edition">11-11 day teardowns (2024 edition)</h1>
<p>I guess this is becoming a <a href="http://localhost:1313/categories/11.11-sale/" target="_blank" rel="noopener noreffer">tradition</a> now?</p>
<p>During China&rsquo;s Single&rsquo;s Day sale on AliExpress, I bought various gadgets - both for projects and out of curiosity.
Rather than write separate posts, here&rsquo;s a collection of mini teardowns showing what&rsquo;s inside each item.</p>
<p>Previous years:</p>
<ul>
<li><a href="/aliexpress-11-11-sale-teardowns/" rel="">2023</a></li>
</ul>
<h2 id="tuya-zigbee-35-inch-smart-wall-switch">Tuya Zigbee 3.5 Inch Smart Wall Switch</h2>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p><a href="https://www.aliexpress.us/item/3256807444250563.html?gatewayAdapt=glo2usa" target="_blank" rel="noopener noreffer">non-affiliate link</a></p>
<p>I&rsquo;m always looking for a better scene controller/switch/Home Assistant interface.
I was curious about which chip they used for the full graphics display and was hoping for an easily hackable Android device.
Unfortunately, no such luck with this.</p>
<p>The main application processor is <a href="https://linux-sunxi.org/F1C100s" target="_blank" rel="noopener noreffer"><code>F1C100s</code></a> which is a low-cost, low-power, ARM9-based SoC.
It might be able to run a custom Linux build that could draw a custom UI, but it&rsquo;s not going to be as easy as rooting an Android device.</p>
<p>There’s not much in the box, just the switch and a manual.
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>

</p>
<p>It&rsquo;s a pretty standard &ldquo;power supply and relays in the back, touch screen in the front&rdquo; design.
This time, though, there&rsquo;s an <em>exposed</em> programming header!?</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Note the &#39;fire wire&#39; label for mains input... :D
            
                
                
        </p> 
    </figcaption>
    
</figure>


<p>A few screws later, the back panel comes off to reveal some power regulation/switching components and the Zigbee module.</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>They achieved the &ldquo;mushy, then clicky&rdquo; feel of the buttons by using a rubber insert around the tactile switches.</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>The power supply doesn&rsquo;t look too bad.
Clearance looks OK, there is a fuse, and the soldering is decent.
I don&rsquo;t know how well isolated that transformer is, but it&rsquo;s probably fine.</p>
<p><figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        <p>
            J2 looks like it might be DC input or possibly RS485 for a future model?
            
                
                
        </p> 
    </figcaption>
    
</figure>

</p>
<h2 id="ueetop-175w-gan-usb-c-charger-bk-112d">Ueetop 175W GaN USB C Charger (BK-112D)</h2>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p><a href="https://www.aliexpress.us/item/3256807203418058.html?gatewayAdapt=glo2usa" target="_blank" rel="noopener noreffer">non-affiliate link</a></p>
<p>As the USB-C PD standard matures and GaN technology makes high-power chargers cheaper, it&rsquo;s fun to see the internals get more complex but also more integrated.
This was less than $15 shipped which is <em>insane</em> for a 100W+ charger unless they cut corners somewhere&hellip;</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Hey, it came with a mains cord and it&#39;s even correct for my country!
            
                
                
        </p> 
    </figcaption>
    
</figure>


<p>There are a LOTS of chips holding things together; it&rsquo;s almost impossible to open this without breaking at least one!
Consider this a warning: you will be doing a destructive teardown if you open this!</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Look at those PCB traces going to the output. Easily 5mm wide!
            
                
                
        </p> 
    </figcaption>
    
</figure>


<p>As this is a <a href="/tags/two-minute-teardown/" rel="">#TwoMinuteTeardown</a>, I&rsquo;m not going to remove all the silastic glue on the power supply module nor will I check the ripple in the output.</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>Other than that, it&rsquo;s about what you&rsquo;d expect from a modern USB-C charger that isn&rsquo;t hyper-compact; beefy looking AC-to-DC converter, a few big caps and then the USB-C PD controller.</p>
<p>Between each group of ports is a series of passives, some beefy looking power MOSFETs and a protocol negotiation IC.</p>
<p><figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>

</p>
<h3 id="notable-ics">Notable ICs</h3>
<p><a href="https://ismartware.com/article-1-2.html" target="_blank" rel="noopener noreffer">SW3516</a></p>
<p><a href="https://www.lcsc.com/product-detail/USB-Converters_Shenzhen-Fuman-Elec-XPD977D30A_C2892062.html" target="_blank" rel="noopener noreffer">Shenzhen Fuman Elec XPD977D30A</a></p>
<p><a href="https://www.lcsc.com/product-detail/Microcontroller-Units-MCUs-MPUs-SOCs_CHIPSEA-CSU32P10-SOP8_C914988.html" target="_blank" rel="noopener noreffer">CHIPSEA CSU32P10</a></p>
<h2 id="generic-ozone-generator-xd001">Generic Ozone generator (XD001)</h2>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p><a href="https://www.aliexpress.us/item/3256805759188983.html?gatewayAdapt=glo2usa" target="_blank" rel="noopener noreffer">non-affiliate link</a></p>
<p>There’s not much in the box other than the generator and a manual.</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>It’s easy to take apart with no hidden screws!</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>Inside, you’ll find about what you’d expect: a potted HV module, fan, controller, and a battery.</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>Instead of the cheaper &ldquo;carbon needle&rdquo; ozone generators, this one uses a ceramic plate.</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Such a pretty glow!
            
                
                
        </p> 
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Micro USB is INEXCUSABLE in 2024!
            
                
                
        </p> 
    </figcaption>
    
</figure>


<p>Annoyingly, they used a micro USB port for charging.
This is <em>inexcusable</em> in 2024.
The silk screen on the PCB indicates that the design is from late 2020, which would be slightly more acceptable if USB-C wasn’t already the standard by then.
Furthermore, this device doesn’t need any complicated USB-C PD features, so it’s not like they’d have to worry about the extra cost or complexity of a USB-C controller.
Really, all they needed was <em>two</em> (very important, <a href="https://hackaday.com/2019/07/16/exploring-the-raspberry-pi-4-usb-c-issue-in-depth/" target="_blank" rel="noopener noreffer"><strong>NOT</strong> ONE</a>) 5.1k resistors and a USB-C port and they could have been future proofed!</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>They scrubbed the markings off the SOIC16 CPU. The rest of the components are about what you’d expect for managing lithium batteries, switching the fan, and driving the boost converter for the ozone generator.</p>
<p>It appears another version of this device also features a buzzer.
I&rsquo;m not sure what for, but the silk screen clearly shows a spot for it.</p>
<p><figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>

</p>
<h2 id="btf-light-sp530e-led-controller">BTF Light SP530E LED Controller</h2>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p><a href="https://www.aliexpress.us/item/3256806286614116.html?gatewayAdapt=glo2usa" target="_blank" rel="noopener noreffer">non-affiliate link</a></p>
<p>This is the first of a few LED controllers I bought to see if they are compatible with <a href="https://kno.wled.ge/" target="_blank" rel="noopener noreffer">WLED</a> or ESPHome.
I have some <a href="#side-note-the-ossha-community-is-being-heard" rel="">thoughts</a> on the state of the LED controller market, but to summarize: it&rsquo;s <em>getting better</em>!</p>
<p>The packaging is very nondescript, containing just the controller and a manual.</p>
<p><figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>

</p>
<p>They did include a screwdriver, which&hellip; makes me wonder how many people are buying the individual components to DIY a LED lighting solution but also don&rsquo;t already have a screwdriver?</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>The PCB is pretty simple and, thankfully, is nothing more than an ESP32 and a level shifter.
It also includes a small condenser microphone for the music reactive mode.</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>The MOSFETs look robust enough to handle a decent amount of current, and there&rsquo;s a decent amount of via stitching around the power traces, so it <em>should</em> be able to handle the heat.</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        <p>
            They labeled the programming header. ❤️
            
                
                
        </p> 
    </figcaption>
    
</figure>


<h3 id="notable-ics-1">Notable ICs</h3>
<p><a href="https://www.lcsc.com/product-detail/Microcontrollers-MCU-MPU-SOC_Espressif-Systems-ESP32-C3FN4_C2848860.html" target="_blank" rel="noopener noreffer">ESP32-C3</a></p>
<p><a href="https://www.lcsc.com/product-detail/74-Series_TM-Shenzhen-Titan-Micro-Elec-TM74HC245_C84121.html" target="_blank" rel="noopener noreffer">TM(Shenzhen Titan Micro Elec) TM74HC245</a></p>
<h2 id="gledepto-gl-c-015wl-d-led-controller">Gledepto GL-C-015WL-D LED Controller</h2>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p><a href="https://www.aliexpress.us/item/3256807239400011.html?gatewayAdapt=glo2usa" target="_blank" rel="noopener noreffer">non-affiliate link</a></p>
<p>As with the other device, this controller also has bare-bones packaging.</p>
<p>No screwdriver needed because all the terminals have their own locking lever!</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>Happy to see an ESP32 module in here&hellip; on its own PCB? Complete with a micro USB port for flashing?!?</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>Yep, the ESP32 is on a separate PCB that&rsquo;s connected to the main board via a header.
The silk screen on the PCB makes me think that this was <em>initially</em> developed for an ESP8266 but then they added the header for the ESP32 module late(?) in design.</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>The silk screen is really well done; everything is labeled well.</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Really happy to see that the GPIOs are labeled... for both the ESP32 and 8266 variant!
            
                
                
        </p> 
    </figcaption>
    
</figure>


<p>Because this is an &ldquo;addressable&rdquo; LED controller, there&rsquo;s not much to look at.
The GPIO from the ESP goes more or less directly to the output pins.</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>And in case there was any doubt, the back of the PCB makes it super clear that this PCB <em>can</em> be used with an ESP8266 or ESP32.</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<h2 id="smlight-a1-slwf-03-led-controller">SMLight A1-SLWF-03 LED Controller</h2>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p><a href="https://www.aliexpress.us/item/3256805957696665.html?gatewayAdapt=glo2usa" target="_blank" rel="noopener noreffer">non-affiliate link</a></p>
<p>I saved the <em>best</em> for last!
This LED controller <em>really</em> did surprise me with how open it is!</p>
<p>They&rsquo;re not putting a generic &ldquo;ESP32 powered&rdquo; message on the label leaving the reader to read between the lines / infer that the device can be flashed with alternate firmware.</p>
<p>They&rsquo;re straight up saying so!
The label has the GPIO pins clearly labeled.
It uses USB-C for power and flashing.
The USB port is <em>modern</em> unlike <a href="#generic-ozone-generator-xd001" rel="">other</a> devices I&rsquo;ve <a href="#gledepto-gl-c-015wl-d-led-controller" rel="">shown</a> in this post.
The USB port can also be used for programming and isn&rsquo;t hidden!</p>
<p>Here&rsquo;s to hoping that they release a version for analog LED strips! 🤞</p>
<p><figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        <p>
            🇺🇦
            
                
                
        </p> 
    </figcaption>
    
</figure>

</p>
<h3 id="side-note-the-ossha-community-is-being-heard">side note: the OSS/HA community is being heard</h3>
<p>Over the past few years, I&rsquo;ve been scouring AliExpress to find the latest and greatest in LED controllers and every year I&rsquo;ve been disappointed.
But over the last year or so, I&rsquo;ve noticed a <em>huge</em> uptick in the number of controllers that are <em>actually</em> compatible with Home Assistant and other open-source home automation systems.</p>
<p>In the beginning, they were all ESP8266 based and trivial to reverse engineer and flash.
Then they started using TuYa intermediate MCUs which were a bit more tedious to reverse engineer but still possible if you were willing to put in the effort.</p>
<p>Now, they&rsquo;re using ESP32 based chips and going out of their way to LABEL which GPIOs go to which pin(s) and to generally make it TRIVIAL to flash WLED or ESPHome or whatever you want.</p>
<p>This means some savvy manufacturers are paying attention and recognizing the growing hobbyist market for these devices and are catering to them.
There&rsquo;s somebody out there that&rsquo;s not going to force their garbage app/api on you and is going to let you do whatever you want with the device you bought.
This was UNHEARD OF just a few years ago and I&rsquo;m <em>so</em> happy to see it happening now!</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            This is such a victory for the DIY/HA/OSS community!
            
                
                
        </p> 
    </figcaption>
    
</figure>


<h2 id="g3061-pd65w-mini-hot-plate">G3061 PD65W Mini Hot Plate</h2>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p><a href="https://www.aliexpress.us/item/3256806193753913.html?gatewayAdapt=glo2usa" target="_blank" rel="noopener noreffer">non-affiliate link</a></p>
<p>And the winner of the &ldquo;feels most like a hand-built prototype&rdquo; award goes to&hellip; this thing!</p>
<p>Normally I don&rsquo;t like it when screws are hidden under labels / stickers&hellip; but in this case, the &ldquo;sticker&rdquo; is a rubber foot that doesn&rsquo;t even &ldquo;hide&rdquo; the screws.</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Those lumps under the rubber mat are the screws holding the case together.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<p>Looking from the side, the construction becomes pretty clear; it&rsquo;s probably just using a PCB for the heating element and the stacked PCBs separated with little brass standoffs is for thermal isolation.</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>USB-C for power is <em>always</em> a good sign.
Other than that, a basic <a href="https://www.mcu.com.cn/en/" target="_blank" rel="noopener noreffer">CMSemicon</a> IC runs the show.</p>
<p>The OLED screen module is for sure one of those prototype modules meant for hobbyists!</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            The use of threaded inserts for nuts just screams &#39;prototype&#39; to me. Nothing wrong with that, just makes me smile.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<p>As expected, the heating element is just PCB traces on an aluminum substrate PCB.
Cheap and effective!</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>If anybody needs the instructions for this, I scanned a copy and you can get it from <a href="


https://karlquinsland.com/aliexpress-11-11-sale-teardowns-2024/files/07_hotplate/g3601-instructions.pdf


" rel="">here</a>.</p>
<h2 id="generic-usb-c-dock-w-lcd">Generic USB-C Dock w/ LCD</h2>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p><a href="https://www.aliexpress.us/item/3256806850754746.html?gatewayAdapt=glo2usa" target="_blank" rel="noopener noreffer">non-affiliate link</a></p>
<p>USB-C &ldquo;expansion&rdquo; docs are a dime a dozen now.
This caught my attention because of the LCD display on the side.
What are the odds that it presents as a second display using <a href="https://www.displayport.org/displayport-over-usb-c/" target="_blank" rel="noopener noreffer">display port tunneling</a> via usb-alt mode?</p>
<p>There are no screws, just clips.</p>
<p><figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>

</p>
<p>It looks like a pretty straightforward de-mux and breakout PCB.
The display is an isolated / standalone component that&rsquo;s linked to the main PCB with just 4 wires.
What are the odds that it&rsquo;s hanging off a USB hub?</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            I&#39;m not exactly sure why they made the USB-C &#34;tail&#34; detachable.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<p>The silk screen markings make me think that the &ldquo;internal&rdquo; name for this product is <code>K0108-1D</code>.
Interesting that the <code>HUB</code> PCB has a date code almost a full <em>year</em> after the <code>LCD</code> PCB..
Also worth noting; the instructions that came with the device link to the same shady <code>key123.vip</code> site that the <a href="#ajazz-akp03e-stream-deck-clone" rel="">ajazz</a> used so there&rsquo;s <em>definitely</em> some sort of relationship between the two but I&rsquo;m not sure what it is.</p>
<p><figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>

</p>
<p>Annoyingly, they lasered off the markings on the display module.
I don&rsquo;t have a clip for the eeprom, but I bet that there&rsquo;d be at least a few interesting strings in there :D.</p>
<p><figure >

    
        
        

    

    <figcaption>
        
        <p>
            I wonder what SW1 is used for...
            
                
                
        </p> 
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Nothing much on the under side of the USB-Dock PCB.
            
                
                
        </p> 
    </figcaption>
    
</figure>

</p>
<h3 id="usb-details">USB details</h3>
<p>After seeing that the LCD is just a standalone module, I wanted to see how it presented itself to the host.
As expected, it&rsquo;s just a USB hub with a few devices hanging off it.
The display module is almost certainly the HID device.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">❯ lsusb -vvv -t &gt; pre-dock
</span></span><span class="line"><span class="cl">❯ lsusb -vvv -t &gt; pre-dock
</span></span><span class="line"><span class="cl">❯ lsusb -vvv -t &gt; post-dock
</span></span><span class="line"><span class="cl">❯ diff pre-dock post-dock
</span></span><span class="line"><span class="cl">3a4,15
</span></span><span class="line"><span class="cl">&gt;     <span class="p">|</span>__ Port 003: Dev 006, If 0, <span class="nv">Class</span><span class="o">=</span>Hub, <span class="nv">Driver</span><span class="o">=</span>hub/4p, 480M
</span></span><span class="line"><span class="cl">&gt;         ID 1a40:0801 Terminus Technology Inc. 
</span></span><span class="line"><span class="cl">&gt;         /sys/bus/usb/devices/1-3  /dev/bus/usb/001/006
</span></span><span class="line"><span class="cl">&gt;         <span class="p">|</span>__ Port 003: Dev 007, If 0, <span class="nv">Class</span><span class="o">=</span>Hub, <span class="nv">Driver</span><span class="o">=</span>hub/4p, 480M
</span></span><span class="line"><span class="cl">&gt;             ID 1a40:0801 Terminus Technology Inc. 
</span></span><span class="line"><span class="cl">&gt;             /sys/bus/usb/devices/1-3.3  /dev/bus/usb/001/007
</span></span><span class="line"><span class="cl">&gt;             <span class="p">|</span>__ Port 002: Dev 009, If 0, <span class="nv">Class</span><span class="o">=</span>Human Interface Device, <span class="nv">Driver</span><span class="o">=</span>usbhid, 480M
</span></span><span class="line"><span class="cl">&gt;                 ID 5548:6667  
</span></span><span class="line"><span class="cl">&gt;                 /sys/bus/usb/devices/1-3.3.2  /dev/bus/usb/001/009
</span></span><span class="line"><span class="cl">&gt;         <span class="p">|</span>__ Port 004: Dev 008, If 0, <span class="nv">Class</span><span class="o">=</span>Vendor Specific Class, <span class="nv">Driver</span><span class="o">=</span>r8152, 480M
</span></span><span class="line"><span class="cl">&gt;             ID 0bda:8152 Realtek Semiconductor Corp. RTL8152 Fast Ethernet Adapter
</span></span><span class="line"><span class="cl">&gt;             /sys/bus/usb/devices/1-3.4  /dev/bus/usb/001/008
</span></span></code></pre></td></tr></table>
</div>
</div><p>And here&rsquo;s <code>dmesg</code> with the screen <em>not</em> attached versus <em>attached</em>:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">usb 1-3: new high-speed USB device number <span class="m">23</span> using xhci_hcd
</span></span><span class="line"><span class="cl">usb 1-3: New USB device found, <span class="nv">idVendor</span><span class="o">=</span>1a40, <span class="nv">idProduct</span><span class="o">=</span>0801, <span class="nv">bcdDevice</span><span class="o">=</span> 1.00
</span></span><span class="line"><span class="cl">usb 1-3: New USB device strings: <span class="nv">Mfr</span><span class="o">=</span>0, <span class="nv">Product</span><span class="o">=</span>1, <span class="nv">SerialNumber</span><span class="o">=</span><span class="m">0</span>
</span></span><span class="line"><span class="cl">usb 1-3: Product: USB 2.0 Hub
</span></span><span class="line"><span class="cl">hub 1-3:1.0: USB hub found
</span></span><span class="line"><span class="cl">hub 1-3:1.0: <span class="m">4</span> ports detected
</span></span><span class="line"><span class="cl">usb 1-3: USB disconnect, device number <span class="m">23</span>
</span></span><span class="line"><span class="cl">usb 1-3-port3: attempt power cycle
</span></span><span class="line"><span class="cl">usb 1-3: new high-speed USB device number <span class="m">28</span> using xhci_hcd
</span></span><span class="line"><span class="cl">usb 1-3: New USB device found, <span class="nv">idVendor</span><span class="o">=</span>1a40, <span class="nv">idProduct</span><span class="o">=</span>0801, <span class="nv">bcdDevice</span><span class="o">=</span> 1.00
</span></span><span class="line"><span class="cl">usb 1-3: New USB device strings: <span class="nv">Mfr</span><span class="o">=</span>0, <span class="nv">Product</span><span class="o">=</span>1, <span class="nv">SerialNumber</span><span class="o">=</span><span class="m">0</span>
</span></span><span class="line"><span class="cl">usb 1-3: Product: USB 2.0 Hub
</span></span><span class="line"><span class="cl">hub 1-3:1.0: USB hub found
</span></span><span class="line"><span class="cl">hub 1-3:1.0: <span class="m">4</span> ports detected
</span></span><span class="line"><span class="cl">usb 1-3.3: new high-speed USB device number <span class="m">29</span> using xhci_hcd
</span></span><span class="line"><span class="cl">usb 1-3.3: New USB device found, <span class="nv">idVendor</span><span class="o">=</span>1a40, <span class="nv">idProduct</span><span class="o">=</span>0801, <span class="nv">bcdDevice</span><span class="o">=</span> 1.00
</span></span><span class="line"><span class="cl">usb 1-3.3: New USB device strings: <span class="nv">Mfr</span><span class="o">=</span>0, <span class="nv">Product</span><span class="o">=</span>1, <span class="nv">SerialNumber</span><span class="o">=</span><span class="m">0</span>
</span></span><span class="line"><span class="cl">usb 1-3.3: Product: USB 2.0 Hub
</span></span><span class="line"><span class="cl">hub 1-3.3:1.0: USB hub found
</span></span><span class="line"><span class="cl">hub 1-3.3:1.0: <span class="m">4</span> ports detected
</span></span><span class="line"><span class="cl">usb 1-3.4: new high-speed USB device number <span class="m">30</span> using xhci_hcd
</span></span><span class="line"><span class="cl">usb 1-3.4: New USB device found, <span class="nv">idVendor</span><span class="o">=</span>0bda, <span class="nv">idProduct</span><span class="o">=</span>8152, <span class="nv">bcdDevice</span><span class="o">=</span>20.00
</span></span><span class="line"><span class="cl">usb 1-3.4: New USB device strings: <span class="nv">Mfr</span><span class="o">=</span>1, <span class="nv">Product</span><span class="o">=</span>2, <span class="nv">SerialNumber</span><span class="o">=</span><span class="m">3</span>
</span></span><span class="line"><span class="cl">usb 1-3.4: Product: USB 10/100 LAN
</span></span><span class="line"><span class="cl">usb 1-3.4: Manufacturer: Realtek
</span></span><span class="line"><span class="cl">usb 1-3.4: SerialNumber: 00E04C360C56
</span></span><span class="line"><span class="cl">r8152-cfgselector 1-3.4: reset high-speed USB device number <span class="m">30</span> using xhci_hcd
</span></span><span class="line"><span class="cl">r8152 1-3.4:1.0: skip request firmware
</span></span><span class="line"><span class="cl">r8152 1-3.4:1.0 eth0: v1.12.13
</span></span><span class="line"><span class="cl">r8152 1-3.4:1.0 enp5s0f1u3u4: renamed from eth0
</span></span></code></pre></td></tr></table>
</div>
</div><p>And with the screen attached, there&rsquo;s some additional lines as another device is enumerated:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">usb 1-3.3.2: new high-speed USB device number <span class="m">34</span> using xhci_hcd
</span></span><span class="line"><span class="cl">usb 1-3.3.2: New USB device found, <span class="nv">idVendor</span><span class="o">=</span>5548, <span class="nv">idProduct</span><span class="o">=</span>6667, <span class="nv">bcdDevice</span><span class="o">=</span> 3.00
</span></span><span class="line"><span class="cl">usb 1-3.3.2: New USB device strings: <span class="nv">Mfr</span><span class="o">=</span>1, <span class="nv">Product</span><span class="o">=</span>2, <span class="nv">SerialNumber</span><span class="o">=</span><span class="m">3</span>
</span></span><span class="line"><span class="cl">usb 1-3.3.2: Product: 997F1
</span></span><span class="line"><span class="cl">usb 1-3.3.2: Manufacturer: <span class="m">997</span>
</span></span><span class="line"><span class="cl">usb 1-3.3.2: SerialNumber: 997F11193737
</span></span><span class="line"><span class="cl">on usb-0000:05:00.1-3.3.2/input0
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="ajazz-akp03e-stream-deck-clone">Ajazz AKP03E (Stream Deck clone)</h2>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p><a href="https://www.aliexpress.us/item/3256807320371570.html?gatewayAdapt=glo2usa" target="_blank" rel="noopener noreffer">non-affiliate link</a></p>
<p>This is a clone/knockoff of the Elgato Stream Deck products.
I was curious to see if they did anything differently than the original for the internal hardware.
Turns out, no.
It&rsquo;s still a basic LCD screen behind a matrix of clear buttons.</p>
<p>The unit can be easily separated from its stand and there are no hidden screws!</p>
<p><figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>

</p>
<p>After going around the edge w/ a spudger, the internals reveal themselves.</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>The <code>-VxNx</code> suffix on the silk screen matches the silk screen seen on the <a href="#generic-usb-c-dock-w-lcd" rel="">USB-C Dock</a>&hellip; which really does make me think that there&rsquo;s some sort of relationship between the two products.</p>
<p>The board with the physical knobs/buttons is just a &ldquo;pass through&rdquo; PCB; everything here just goes right over the FFC to the board with the screen and buttons.</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>I can&rsquo;t find <em>anything</em> when googling the main IC, unfortunately.</p>
<blockquote>
<p>ARX29025</p>
<p>Q2402</p>
</blockquote>
<p>The silk screen is:</p>
<blockquote>
<p>HSV293-N3-LCD-V2P1</p>
<p>20240620</p>
</blockquote>
<p><figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>

</p>
<p>The software is <em>super</em> sketchy; just trying to find a build that actually worked on macOS was a pain!</p>
<p>The <a href="https://www.a-jazz.com/en/search.jsp?id=422&amp;q=03" target="_blank" rel="noopener noreffer">official site</a> looks and functions like it was made with a 2000s-era website builder 🤮.</p>
<p>With some google-fu, I found links to a <a href="https://bbs.key123.vip/" target="_blank" rel="noopener noreffer">web forum</a> that may not be officially related to the product, but <a href="https://bbs.key123.vip/forum.php?mod=viewthread&amp;tid=1167&amp;highlight=AKP03" target="_blank" rel="noopener noreffer">has some download links</a> to software that is supposed to work with the device, on macOS in English.</p>
<p>I never got a working build of the software, but the few builds that I did try all have the same architecture; a <code>Qt</code> app that hosts plugins and does all of the thinking for the device.</p>
<p>With a bit more digging, I think that this &ldquo;Mirabox&rdquo; company is the underlying OEM and the ajazz is just a white-labeled version of this product: <a href="https://miraboxbuy.com/collections/stream-dock/products/streamdock-mbox-n3" target="_blank" rel="noopener noreffer">Stream Dock MBox 293N3</a>.</p>
<p>Mirabox also appears to have a <a href="https://sdk.key123.vip/en/guide/overview.html#stream-dock-mbox-293n4" target="_blank" rel="noopener noreffer">fledgling SDK</a> for plugins <em>and</em> a <a href="https://github.com/MiraboxSpace/Linux-StreamDock-PythonSDK" target="_blank" rel="noopener noreffer">Python SDK</a> for Linux users!</p>
<h3 id="usb-details-1">USB details</h3>
<p>Similar architecture; USB hub with two HID devices hanging off it; probably one HID for reading the buttons and another for writing to the screen.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">❯ lsusb -vvv -t &gt; pre-deck
</span></span><span class="line"><span class="cl">❯ lsusb -vvv -t &gt; post-deck
</span></span><span class="line"><span class="cl">❯ diff pre-deck post-deck
</span></span><span class="line"><span class="cl">3a4,9
</span></span><span class="line"><span class="cl">&gt;     <span class="p">|</span>__ Port 003: Dev 019, If 0, <span class="nv">Class</span><span class="o">=</span>Human Interface Device, <span class="nv">Driver</span><span class="o">=</span>usbhid, 480M
</span></span><span class="line"><span class="cl">&gt;         ID 0300:3002  
</span></span><span class="line"><span class="cl">&gt;         /sys/bus/usb/devices/1-3  /dev/bus/usb/001/019
</span></span><span class="line"><span class="cl">&gt;     <span class="p">|</span>__ Port 003: Dev 019, If 1, <span class="nv">Class</span><span class="o">=</span>Human Interface Device, <span class="nv">Driver</span><span class="o">=</span>usbhid, 480M
</span></span><span class="line"><span class="cl">&gt;         ID 0300:3002  
</span></span><span class="line"><span class="cl">&gt;         /sys/bus/usb/devices/1-3  /dev/bus/usb/001/019
</span></span></code></pre></td></tr></table>
</div>
</div><p>And <code>dmesg</code>:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">usb 1-3: new high-speed USB device number <span class="m">22</span> using xhci_hcd
</span></span><span class="line"><span class="cl">usb 1-3: New USB device found, <span class="nv">idVendor</span><span class="o">=</span>0300, <span class="nv">idProduct</span><span class="o">=</span>3002, <span class="nv">bcdDevice</span><span class="o">=</span> 0.02
</span></span><span class="line"><span class="cl">usb 1-3: New USB device strings: <span class="nv">Mfr</span><span class="o">=</span>1, <span class="nv">Product</span><span class="o">=</span>2, <span class="nv">SerialNumber</span><span class="o">=</span><span class="m">3</span>
</span></span><span class="line"><span class="cl">usb 1-3: Product: HOTSPOTEKUSB HID DEMO
</span></span><span class="line"><span class="cl">usb 1-3: Manufacturer: HOTSPOTEKUSB
</span></span><span class="line"><span class="cl">usb 1-3: SerialNumber: 0300D0781A4A
</span></span><span class="line"><span class="cl">on usb-0000:05:00.1-3/input0
</span></span><span class="line"><span class="cl">input: HOTSPOTEKUSB HOTSPOTEKUSB HID DEMO as /devices/pci0000:00/0000:00:01.2/0000:02:00.0/0000:03:08.0/0000:05:00.1/usb1/1-3/1-3:1.1/0003:0300:3002.00DE/input/input180
</span></span><span class="line"><span class="cl">on usb-0000:05:00.1-3/input1
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="generic-wifi-led-wall-clock">Generic WiFI LED Wall Clock</h2>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p><a href="https://www.aliexpress.us/item/3256807326722207.html?gatewayAdapt=glo2usa" target="_blank" rel="noopener noreffer">non-affiliate link</a></p>
<p>I&rsquo;ve been looking for a &ldquo;Works with Home Assistant&rdquo; version of the <a href="https://www.amazon.com/Introducing-Echo-Wall-Clock---An-Echo-companion-to-see-timers-at-a-glance./dp/B07FQDMKFT" target="_blank" rel="noopener noreffer">Echo Wall Clock</a> ever since Amazon discontinued it.</p>
<p>I was hoping this would be a simple ESP8266 or ESP32 module linked directly to the LEDs&hellip; but there&rsquo;s an anonymous intermediate microcontroller in there.</p>
<p>Assuming that the microcontroller can be removed easily and the various segments of addressable LEDs can be driven directly from an ESP8266 or ESP32, this could still be a viable base for a custom LED wall clock.</p>
<p><figure >

    
        
        

    

    <figcaption>
        
        <p>
            Why bother with a custom USB cable? Just use a standard USB-C jack for power!
            
                
                
        </p> 
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Lots of SMD neopixels and a partition/mask system to keep high contrast between the segments.
            
                
                
        </p> 
    </figcaption>
    
</figure>

</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Kinda interesting to see how they spread the components out to not interfere with the partitions.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        <p>
            PCB marking: YC-9108-WIFI-0807, Ver 1.6, 2024-6-8
            
                
                
        </p> 
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Markings have been sanded off. Why bother? What&#39;s the value in that?
            
                
                
        </p> 
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        <p>
            I assume this is i2c for the RTC module.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<h2 id="mirabox-n4">Mirabox N4</h2>
<p>This was actually a late addition to the list.
<em>Technically</em> I didn&rsquo;t order it in 2024, but after learning about the Ajazz possibly being a Mirabox product, I wanted to see if there was anything interesting in the Mirabox product line so I found this for a reasonable price and held off publishing this post until it arrived.</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p><a href="https://www.aliexpress.us/item/3256807963651419.html" target="_blank" rel="noopener noreffer">non-affiliate link</a></p>
<p>The packaging is nondescript and minimal; the unit and a nice USB A -&gt; C cable is essentially all that&rsquo;s in the box.</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Did they have to use foam for this? Cardboard would have been fine...
            
                
                
        </p> 
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        <p>
            The Mirabox logo on top is laser engraved which is a nice touch.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        <p>
            No screws, just clips! And they&#39;re not even that hard to find or pry up!
            
                
                
        </p> 
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>As was the case with the other LCD modules, this looks like it&rsquo;s just USB 2.0 module hanging off a USB hub.
Conceivably, you could embed a tiny raspberry pi zero or other <em>small</em> computer with USB Host support inside this thing 🤔&hellip;</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Really nice ofd them to label each FPC connector.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>The two internal PCBs are marked very similarly to the <a href="#generic-usb-c-dock-w-lcd" rel="">USB-Dock</a> <em>and</em> the <a href="#ajazz-akp03e-stream-deck-clone" rel="">Stream Deck clone</a> which really does make me think that mirabox is the ODM for those products as well.</p>
<p>Markings:</p>
<blockquote>
<p>HSV293-N4-LCD</p>
<p>20240807</p>
<p>HSV293-N4-SW</p>
<p>202400711</p>
</blockquote>
<p>And the USB hub PCB in the base doesn&rsquo;t have a part number, just a date code.
I&rsquo;d bet that they started designing this product in spring of 2024 and they finished the simplest part - the USB hub - first.</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            As expected, the buttons and the lower display are really just different regions of the same LCD.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<p>The dials are aluminum, which feels very premium for a device that&rsquo;s otherwise plastic.</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            That plastic insert almost looks 3d printed...
            
                
                
        </p> 
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Interesting to see what network calls were made...
            
                
                
        </p> 
    </figcaption>
    
</figure>


]]></description></item><item><title>AKASO DL12 Dashcam Teardown</title><link>https://karlquinsland.com/akaso-dl12-teardown/</link><pubDate>Thu, 01 Aug 2024 00:00:00 +0000</pubDate><author>Author</author><guid>https://karlquinsland.com/akaso-dl12-teardown/</guid><description><![CDATA[<!-- markdownlint-disable-file MD002 -->
<h1 id="akaso-dl12-dashcam-teardown">AKASO DL12 Dashcam Teardown</h1>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            If the double yellow lines are in the middle of your rear-view mirror, you&#39;re doing it wrong.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<p>This was my dashcam for a while until the front camera stopped working.
It was a good dashcam while it lasted but there are better options now&hellip; so let&rsquo;s take it apart!</p>
<p>Ultimately, it&rsquo;s a highly integrated consumer-grade bit of electronics.
Everything&rsquo;s built down to a price and anything that didn&rsquo;t need to be done &hellip; wasn&rsquo;t.
There&rsquo;s not much to see and not much to say so this is a <a href="/tags/two-minute-teardown/" rel="">&ldquo;two minute teardown&rdquo; </a>.</p>
<h2 id="teardown">Teardown</h2>
<p>There are 4 screws holding the case together. They are hidden under the rubber feet.</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            There are 4 screws holding the case together. Remove and the case comes apart easily.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<p>Once the screws are removed, the case comes apart easily to reveal a mostly empty shell.
The LiPo battery is an interesting choice given the heat that can build up in a car.
As far as I know, this is only needed for the few seconds after power loss so the camera can save the current recording and shut down cleanly.</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Lift the screen side away to reveal the paltry internals
            
                
                
        </p> 
    </figcaption>
    
</figure>


<p>Close up of the rear of the main PCB shows a few test points and populated but unused connectors.</p>
<p>I love the <code>TV_IN</code> silkscreen for the rear camera connector. Almost makes me wonder if this was a re-purposed schematic from a different product.</p>
<p>Why there&rsquo;s a dedicated <code>RTC_BAT</code> connector and not sipper power from the main battery is a mystery to me.
The unit does have a GPS module so there&rsquo;s really no need for an RTC battery&hellip; just use the GPS time!</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Close up of the &#39;screen&#39; side of the main PCB. Not much to see here.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<p>The &lsquo;forward facing&rsquo; side of the PCB has a few more populated/un-used connectors and a heat-spreader over the main CPU.
The two push buttons in the top left are not accessible from the outside of the case so there&rsquo;s probably something interesting that happens when they&rsquo;re pressed.</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            The &#39;rear&#39; of the main PCB has a few unpopulated footprints and a flimsy heat-spreader.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<p>Removing it reveals a HiSilicon Hi3556 SoC, EEPROM and what is probably the image processor for the rear camera.
The large unpopulated footprint in the top right looks like it&rsquo;s meant for a radio module.
Not sure if it&rsquo;s for a wireless link to the rear camera or for something like a <a href="https://en.wikipedia.org/wiki/Tire-pressure_monitoring_system" target="_blank" rel="noopener noreffer">TPMS sensor</a> or possibly WiFi for a phone app.</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Close up of the most interesting part of the main PCB.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        <p>
            The forward facing camera is in a swivel mount and is highly integrated; there&#39;s nothing under that black tape.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<h2 id="pcb-markings">PCB Markings</h2>
<p>AKA SEO optimization 😉</p>
<p>Main PCB is marked:</p>
<blockquote>
<p>77-56V200(20) V3.411</p>
<p>6105</p>
<p>V200-AMWG-V3.411
2019.12.03</p>
</blockquote>
<p>And on the rear:</p>
<blockquote>
<p>F02Z1B
F15Z1B</p>
</blockquote>
<p>The main CPU is <a href="https://silicondevice.com/file.upload/images/Gid1551Pdf_Hi3556%20V100%20HD%20Mobile%20Camera%20SoC%20Brief%20Data%20Sheet.pdf" target="_blank" rel="noopener noreffer">meant for consumer cameras</a> and is marked:</p>
<blockquote>
<p>Hi 3556</p>
<p>RBCV200</p>
<p>CP9881938</p>
<p>1939-CN</p>
</blockquote>
<p>The LCD is marked:</p>
<blockquote>
<p>XTY TB118-I4018E30A-01</p>
<p>T B118-45a164200402-J</p>
</blockquote>
<p>I can&rsquo;t find a datasheet for what I suspect is the rear-camera processor but it&rsquo;s marked:</p>
<blockquote>
<p>pixelplus</p>
<p>PR2020</p>
<p>S3CWN</p>
<p>KAG2006</p>
</blockquote>
<h2 id="firmware">Firmware</h2>
<p>Just for giggles, I dumped the firmware from the SPI flash to get an idea of what software powers this device.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">❯ flashrom --force -c <span class="s2">&#34;GD25B128B/GD25Q128B&#34;</span> --verbose --programmer ch341a_spi --read oem.bin
</span></span><span class="line"><span class="cl">&lt;...&gt;
</span></span><span class="line"><span class="cl">Reading flash... 
</span></span><span class="line"><span class="cl">&lt;...&gt;
</span></span></code></pre></td></tr></table>
</div>
</div><p>I did run <code>strings</code> on it and there&rsquo;s some mildly interesting stuff in there but nothing interesting enough to warrant a deep dive.</p>
<p><code>binwalk</code> didn&rsquo;t have any trouble extracting things but I&rsquo;m not going to spend any time reversing this firmware.</p>
<p>It looked like the usual &ldquo;bootloader and two identical copies of the application firmware&rdquo; setup.
Taking a look at what I think is the main application:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">Scan Time:     2024-08-02 16:52:43
</span></span><span class="line"><span class="cl">Target File:   /home/karl/scratch/dash-fw/_oem.bin.extracted/media_app.bin
</span></span><span class="line"><span class="cl">MD5 Checksum:  557e5a7578dfb20ed8328888479bc973
</span></span><span class="line"><span class="cl">Signatures:    <span class="m">436</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">DECIMAL       HEXADECIMAL     DESCRIPTION
</span></span><span class="line"><span class="cl">--------------------------------------------------------------------------------
</span></span><span class="line"><span class="cl"><span class="m">510070</span>        0x7C876         JBOOT STAG header, image id: 10, timestamp 0x3AF8E51B, image size: <span class="m">454878491</span> bytes, image JBOOT checksum: 0xE51B, header JBOOT checksum: 0x3233
</span></span><span class="line"><span class="cl"><span class="m">2689033</span>       0x290809        Certificate in DER format <span class="o">(</span>x509 v3<span class="o">)</span>, header length: 4, sequence length: <span class="m">5380</span>
</span></span><span class="line"><span class="cl"><span class="m">3038273</span>       0x2E5C41        Certificate in DER format <span class="o">(</span>x509 v3<span class="o">)</span>, header length: 4, sequence length: <span class="m">5380</span>
</span></span><span class="line"><span class="cl"><span class="m">3828721</span>       0x3A6BF1        Certificate in DER format <span class="o">(</span>x509 v3<span class="o">)</span>, header length: 4, sequence length: <span class="m">13692</span>
</span></span><span class="line"><span class="cl"><span class="m">4056525</span>       0x3DE5CD        ESP Image <span class="o">(</span>ESP32<span class="o">)</span>: segment count: 15, flash mode: QUIO, flash size: 2MB, entry address: 0x40006a7
</span></span><span class="line"><span class="cl"><span class="m">4732974</span>       0x48382E        eCos RTOS string reference: <span class="s2">&#34;eCostInSystem&#34;</span>
</span></span><span class="line"><span class="cl"><span class="m">4732991</span>       0x48383F        eCos RTOS string reference: <span class="s2">&#34;eCostInSystem&#34;</span>
</span></span><span class="line"><span class="cl"><span class="m">4771774</span>       0x48CFBE        TIFF image data, big-endian, offset of first image directory: <span class="m">8</span>
</span></span><span class="line"><span class="cl"><span class="m">4773180</span>       0x48D53C        TIFF image data, big-endian, offset of first image directory: <span class="m">8</span>
</span></span><span class="line"><span class="cl"><span class="m">4980260</span>       0x4BFE24        Unix path: /home/user04/work/kashite/3556-11.8-v1013-AKASO/osdrv/components/ipcm/ipcm/message/ipcm.c
</span></span><span class="line"><span class="cl"><span class="m">4982320</span>       0x4C0630        Unix path: /home/user04/work/kashite/3556-11.8-v1013-AKASO/osdrv/components/ipcm/ipcm/message/ipcm_data.c
</span></span><span class="line"><span class="cl"><span class="m">4983576</span>       0x4C0B18        Unix path: /home/user04/work/kashite/3556-11.8-v1013-AKASO/osdrv/platform/liteos/kernel/base/ipc/los_mux.c
</span></span><span class="line"><span class="cl"><span class="m">4983960</span>       0x4C0C98        Unix path: /home/user04/work/kashite/3556-11.8-v1013-AKASO/osdrv/platform/liteos/kernel/base/core/los_task.c
</span></span><span class="line"><span class="cl"><span class="m">4986708</span>       0x4C1754        Unix path: /home/user04/work/kashite/3556-11.8-v1013-AKASO/osdrv/platform/liteos/kernel/base/mem/mem_bestfit/los_memory.c
</span></span><span class="line"><span class="cl"><span class="m">4998096</span>       0x4C43D0        Unix path: /usr/local/etc/zoneinfo
</span></span><span class="line"><span class="cl"><span class="m">4999016</span>       0x4C4768        Unix path: /home/user04/work/kashite/3556-11.8-v1013-AKASO/osdrv/platform/liteos/lib/libc/src/time/time64.c
</span></span><span class="line"><span class="cl"><span class="m">5000336</span>       0x4C4C90        Unix path: /home/user04/work/kashite/3556-11.8-v1013-AKASO/osdrv/platform/liteos/compat/posix/src/pthread_mutex.c
</span></span><span class="line"><span class="cl"><span class="m">5001228</span>       0x4C500C        Unix path: /home/user04/work/kashite/3556-11.8-v1013-AKASO/osdrv/platform/liteos/fs/vfs/inode/fs_inode.c
</span></span><span class="line"><span class="cl"><span class="m">5006876</span>       0x4C661C        Unix path: /home/user04/work/kashite/3556-11.8-v1013-AKASO/osdrv/platform/liteos/platform/bsp/board/hi3556v200/include/hisoc/spi.h
</span></span><span class="line"><span class="cl"><span class="m">5194272</span>       0x4F4220        ESP Image <span class="o">(</span>ESP32<span class="o">)</span>: segment count: 11, flash mode: QUIO, flash speed: 40MHz, flash size: 1MB, entry address: 0x4003d1
</span></span><span class="line"><span class="cl"><span class="m">5363994</span>       0x51D91A        ESP Image <span class="o">(</span>ESP32<span class="o">)</span>: segment count: 1, flash mode: QUIO, flash speed: 40MHz, flash size: 1MB, entry address: 0x0
</span></span></code></pre></td></tr></table>
</div>
</div>]]></description></item><item><title>Arizer XQ2 Teardown</title><link>https://karlquinsland.com/arizer-xq2-teardown/</link><pubDate>Mon, 01 Jul 2024 00:00:00 +0000</pubDate><author>Author</author><guid>https://karlquinsland.com/arizer-xq2-teardown/</guid><description><![CDATA[<!-- markdownlint-disable-file MD002 -->
<h1 id="arizer-xq2-teardown">Arizer XQ2 Teardown</h1>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>A friend of mine reached out and asked me about automating some aspects of their <a href="https://www.webmd.com/balance/stress-management/aromatherapy-overview" target="_blank" rel="noopener noreffer">aroma therapy</a> treatment.</p>
<div class="details admonition note open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-pencil-alt fa-fw"></i>Note<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">I was not given permission to share the specifics of their medical condition or the larger treatment plan so this post is going to deal with <em>just</em> the technical aspects of the device.</div>
        </div>
    </div>
<p>The device they&rsquo;re using for aromatherapy is the <a href="https://arizer.com/xq2/" target="_blank" rel="noopener noreffer">Arizer XQ2</a> and we agreed that integration with their existing Home Assistant setup would be ideal.</p>
<p>I know nothing about aroma therapy but I do suffer from an obsession that compels me to integrate ESPHome with <em>everything</em>&hellip;I was intrigued!</p>
<p>At worst, I get a new toy to tear down and at best, I&rsquo;d be able to deliver a solution that would make their life a little easier.</p>
<h2 id="the-plan">The plan</h2>
<p>First, the bad news.</p>
<p>There&rsquo;s next to no technical information about the XQ2 online.</p>
<p>The device has no radio connectivity so there&rsquo;s no FCC filings.
There are several reviews of the device online, but none of them tear it down or provide any technical information.</p>
<p>Now, the good news.</p>
<p>The device does have an IR remote control!</p>
<p>It is not difficult to capture the IR signals from the remote and replay them with an ESP32 or similar device.
This meant that the likely outcome would be an <a href="https://en.wikipedia.org/wiki/Open-loop_controller" target="_blank" rel="noopener noreffer">open-loop control system</a>; building something to to send commands to the device would be trivial but confirming that a particular command had been executed would be tedious at best.</p>
<p>This put us in an awkward position.</p>
<p>After some back and forth, we agreed that closed-loop would be ideal, but open-loop control would be acceptable for their needs given that the device is meant to be used in close proximity to the user and already features a few safety features.</p>
<p>Unless there was some lucky break discovered while tearing down the device, I&rsquo;d be stuck with emulating the IR remote control.
This isn&rsquo;t ideal, but it also means that there&rsquo;s virtually no risk that any of the built-in safety features would be bypassed/disabled.</p>
<h2 id="teardown">Teardown</h2>
<p>The manufacturer has clearly designed this thing to be serviceable!</p>
<p>They <a href="https://vimeo.com/648841530" target="_blank" rel="noopener noreffer">have a guide</a> for replacing a common wear item (the ceramic heating element) and it turns out that the rest of the device is just as easy to access.</p>
<p>From the bottom of the device, there are 4 rubber feet that can be removed to reveal 4 screws.
Amazingly, these feet are NOT glued in <em>and</em> they have tiny holes in them to allow the screws to be removed without removing the feet! 😚👌.</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>Once the screws are removed, the bottom cover just lifts off.
Again, no glue, no clips, no nothing!</p>
<p>This reveals the main PCB. I&rsquo;ve identified a few of the main ICs <a href="#notable-chips-and-stuff" rel="">below</a>.</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            View from the bottom just after removing the panel.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Close up of the main application processor.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<p>Note that the DC jack is on a separate board that is easily removed.
This is a nice touch as it makes it easy to replace if it ever breaks; it&rsquo;s a standard 5.5mm OD barrel jack so sourcing a replacement should be easy.</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Close up of the two MOSFETs used to control the heating element.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<p>The PCB is <em>almost</em> entirely single sided; only a few passives and connectors for the various peripherals are on the top side.</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            The top side of the main PCB. Sorry for the off-center angle and the glare.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<p>The power supply isn&rsquo;t exotic so sourcing a replacement should be easy if it ever fails.
It&rsquo;s also worth noting that the 19V / 3.42A rated output is <em>really close</em> to 20V / 3 A output profile from <a href="https://web.archive.org/web/20190711152956/https://github.com/vi117/ppkos/blob/master/extdoc/usb_31_060115/USB%20Type-C/USB%20Type-C%20Specification%20Release%201.1.pdf" target="_blank" rel="noopener noreffer">USB-C PD 1.0 spec</a> and totally within the adjustable range of a USB-C PD 2.0+ power supply.
It should be possible to adapt this device to use USB-C PD power with minimal effort if needed.</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Power supply is pretty standard; feels well made.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<p>All in all, I&rsquo;m impressed with the build quality of the device!</p>
<p>It&rsquo;s well made and easy to service. No glue or clips to break, no hidden screws to find, no proprietary connectors to deal with.</p>
<p>The main PCB is well laid out, all components are marked with crisp silkscreen and nobody lasered off the markings on the ICs.</p>
<p>The most dangerous part of the device it the heating element and there are <em>multiple</em> heat-shields between it and the user and all the heat-shields are easily replaceable!</p>
<p>The PCB designer also knew that MOSFETs can fail short so they use both a high <em>and</em> low side FET to control the heating element!</p>
<p>Normally little piezo beepers are annoying but this one can be attenuated or disabled in software.</p>
<p>I was pleasantly surprised to find that the device <em>does</em> have a UART and programming port onboard <strong>but I was not given permission to probe further.</strong></p>
<p>My friend decided that IR control would be sufficient for their needs so I don&rsquo;t have any more information about the UART.</p>
<h3 id="notable-chips-and-stuff">Notable Chips and stuff</h3>
<ul>
<li><code>SWM260CBT7-50</code>: This is the main application processor. The manufacturer&rsquo;s <a href="https://www.synwit.cn/gaishu313/" target="_blank" rel="noopener noreffer">product details page</a> has both a (Chinese) <a href="https://www.synwit.cn/uploads/soft/20221222/1-221222144341C1.pdf" target="_blank" rel="noopener noreffer">datasheet</a> and a collection of <a href="https://www.synwit.cn/uploads/soft/20231114/1-23111414411W47.rar" target="_blank" rel="noopener noreffer">reference code</a>.</li>
</ul>
<p>Assuming the read/write protect fuses aren&rsquo;t blown, it should be possible to dump the firmware from this chip and possibly come up with an open-source replacement firmware for the device.
With the UART so nicely broken out, adding in an ESP32 or similar to provide wireless control should be trivial&hellip; :D.</p>
<ul>
<li>
<p><a href="https://item.szlcsc.com/5893434.html" target="_blank" rel="noopener noreffer"><code>CMOS CMS6679</code></a>: MOSFET driver for the heating element.</p>
</li>
<li>
<p><a href="https://www.mouser.com/ProductDetail/Toshiba/TPC8062-HLQCM?qs=QrGA9tEX17N%2FMHC76X%252B99w%3D%3D" target="_blank" rel="noopener noreffer"><code>TPC8062</code></a>: MOSFET driver for the heating element.</p>
</li>
</ul>
<h2 id="esphome-ir-remote">ESPHome IR Remote</h2>
<p>I already mentioned this above but it&rsquo;s worth repeating!</p>
<div class="details admonition warning open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-exclamation-triangle fa-fw"></i>Open Loop controls suck<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><p>Basically, the code below emulates the IR remote control that comes with the device.
As there is no way for the device to communicate back to the original remote to say &ldquo;I got your command&rdquo; or &ldquo;I&rsquo;m busy right now, try again later&rdquo;, there&rsquo;s no way to know if the device is in the state you think it is.</p>
<p>The human operator can see the device&rsquo;s state and confirm that it&rsquo;s doing what they want&hellip; but this is <em>not</em> the case for the ESPHome/Home Assistant integration.</p>
<p>The device also has a few safety features built in that the &ldquo;remote&rdquo; can&rsquo;t bypass.
If - somehow - the integration becomes fully broken, it&rsquo;s no different from sitting on the remote or otherwise spamming some signal.
In this case, the device will still operate safely.</p>
</div>
        </div>
    </div>
<p>If you understand the risks and still want to proceed, here&rsquo;s a simple ESPHome configuration that will allow you to control the XQ2 via IR blaster.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">  1
</span><span class="lnt">  2
</span><span class="lnt">  3
</span><span class="lnt">  4
</span><span class="lnt">  5
</span><span class="lnt">  6
</span><span class="lnt">  7
</span><span class="lnt">  8
</span><span class="lnt">  9
</span><span class="lnt"> 10
</span><span class="lnt"> 11
</span><span class="lnt"> 12
</span><span class="lnt"> 13
</span><span class="lnt"> 14
</span><span class="lnt"> 15
</span><span class="lnt"> 16
</span><span class="lnt"> 17
</span><span class="lnt"> 18
</span><span class="lnt"> 19
</span><span class="lnt"> 20
</span><span class="lnt"> 21
</span><span class="lnt"> 22
</span><span class="lnt"> 23
</span><span class="lnt"> 24
</span><span class="lnt"> 25
</span><span class="lnt"> 26
</span><span class="lnt"> 27
</span><span class="lnt"> 28
</span><span class="lnt"> 29
</span><span class="lnt"> 30
</span><span class="lnt"> 31
</span><span class="lnt"> 32
</span><span class="lnt"> 33
</span><span class="lnt"> 34
</span><span class="lnt"> 35
</span><span class="lnt"> 36
</span><span class="lnt"> 37
</span><span class="lnt"> 38
</span><span class="lnt"> 39
</span><span class="lnt"> 40
</span><span class="lnt"> 41
</span><span class="lnt"> 42
</span><span class="lnt"> 43
</span><span class="lnt"> 44
</span><span class="lnt"> 45
</span><span class="lnt"> 46
</span><span class="lnt"> 47
</span><span class="lnt"> 48
</span><span class="lnt"> 49
</span><span class="lnt"> 50
</span><span class="lnt"> 51
</span><span class="lnt"> 52
</span><span class="lnt"> 53
</span><span class="lnt"> 54
</span><span class="lnt"> 55
</span><span class="lnt"> 56
</span><span class="lnt"> 57
</span><span class="lnt"> 58
</span><span class="lnt"> 59
</span><span class="lnt"> 60
</span><span class="lnt"> 61
</span><span class="lnt"> 62
</span><span class="lnt"> 63
</span><span class="lnt"> 64
</span><span class="lnt"> 65
</span><span class="lnt"> 66
</span><span class="lnt"> 67
</span><span class="lnt"> 68
</span><span class="lnt"> 69
</span><span class="lnt"> 70
</span><span class="lnt"> 71
</span><span class="lnt"> 72
</span><span class="lnt"> 73
</span><span class="lnt"> 74
</span><span class="lnt"> 75
</span><span class="lnt"> 76
</span><span class="lnt"> 77
</span><span class="lnt"> 78
</span><span class="lnt"> 79
</span><span class="lnt"> 80
</span><span class="lnt"> 81
</span><span class="lnt"> 82
</span><span class="lnt"> 83
</span><span class="lnt"> 84
</span><span class="lnt"> 85
</span><span class="lnt"> 86
</span><span class="lnt"> 87
</span><span class="lnt"> 88
</span><span class="lnt"> 89
</span><span class="lnt"> 90
</span><span class="lnt"> 91
</span><span class="lnt"> 92
</span><span class="lnt"> 93
</span><span class="lnt"> 94
</span><span class="lnt"> 95
</span><span class="lnt"> 96
</span><span class="lnt"> 97
</span><span class="lnt"> 98
</span><span class="lnt"> 99
</span><span class="lnt">100
</span><span class="lnt">101
</span><span class="lnt">102
</span><span class="lnt">103
</span><span class="lnt">104
</span><span class="lnt">105
</span><span class="lnt">106
</span><span class="lnt">107
</span><span class="lnt">108
</span><span class="lnt">109
</span><span class="lnt">110
</span><span class="lnt">111
</span><span class="lnt">112
</span><span class="lnt">113
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">button</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;Power&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">platform</span><span class="p">:</span><span class="w"> </span><span class="l">template</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">on_press</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">remote_transmitter.transmit_nec</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">address</span><span class="p">:</span><span class="w"> </span><span class="l">0xFE01</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">command</span><span class="p">:</span><span class="w"> </span><span class="l">0xE41B</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">command_repeats</span><span class="p">:</span><span class="w"> </span><span class="m">1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;Fan Off&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">platform</span><span class="p">:</span><span class="w"> </span><span class="l">template</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">on_press</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">remote_transmitter.transmit_nec</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">address</span><span class="p">:</span><span class="w"> </span><span class="l">0xFE01</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">command</span><span class="p">:</span><span class="w"> </span><span class="l">0xFE01</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">command_repeats</span><span class="p">:</span><span class="w"> </span><span class="m">1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;Fan Low&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">platform</span><span class="p">:</span><span class="w"> </span><span class="l">template</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">on_press</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">remote_transmitter.transmit_nec</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">address</span><span class="p">:</span><span class="w"> </span><span class="l">0xFE01</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">command</span><span class="p">:</span><span class="w"> </span><span class="l">0xF609</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">command_repeats</span><span class="p">:</span><span class="w"> </span><span class="m">1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;Fan Med&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">platform</span><span class="p">:</span><span class="w"> </span><span class="l">template</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">on_press</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">remote_transmitter.transmit_nec</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">address</span><span class="p">:</span><span class="w"> </span><span class="l">0xFE01</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">command</span><span class="p">:</span><span class="w"> </span><span class="l">0xFB04</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">command_repeats</span><span class="p">:</span><span class="w"> </span><span class="m">1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;Fan High&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">platform</span><span class="p">:</span><span class="w"> </span><span class="l">template</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">on_press</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">remote_transmitter.transmit_nec</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">address</span><span class="p">:</span><span class="w"> </span><span class="l">0xFE01</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">command</span><span class="p">:</span><span class="w"> </span><span class="l">0xF807</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">command_repeats</span><span class="p">:</span><span class="w"> </span><span class="m">1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;Preset 1&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">platform</span><span class="p">:</span><span class="w"> </span><span class="l">template</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">on_press</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">remote_transmitter.transmit_nec</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">address</span><span class="p">:</span><span class="w"> </span><span class="l">0xFE01</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">command</span><span class="p">:</span><span class="w"> </span><span class="l">0xEF10</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">command_repeats</span><span class="p">:</span><span class="w"> </span><span class="m">1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;Preset 2&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">platform</span><span class="p">:</span><span class="w"> </span><span class="l">template</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">on_press</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">remote_transmitter.transmit_nec</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">address</span><span class="p">:</span><span class="w"> </span><span class="l">0xFE01</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">command</span><span class="p">:</span><span class="w"> </span><span class="l">0xF906</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">command_repeats</span><span class="p">:</span><span class="w"> </span><span class="m">1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;Preset 3&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">platform</span><span class="p">:</span><span class="w"> </span><span class="l">template</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">on_press</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">remote_transmitter.transmit_nec</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">address</span><span class="p">:</span><span class="w"> </span><span class="l">0xFE01</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">command</span><span class="p">:</span><span class="w"> </span><span class="l">0xE01F</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">command_repeats</span><span class="p">:</span><span class="w"> </span><span class="m">1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;Temp UP&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">platform</span><span class="p">:</span><span class="w"> </span><span class="l">template</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">on_press</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">remote_transmitter.transmit_nec</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">address</span><span class="p">:</span><span class="w"> </span><span class="l">0xFE01</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">command</span><span class="p">:</span><span class="w"> </span><span class="l">0xFA05</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">command_repeats</span><span class="p">:</span><span class="w"> </span><span class="m">1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;Temp DOWN&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">platform</span><span class="p">:</span><span class="w"> </span><span class="l">template</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">on_press</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">remote_transmitter.transmit_nec</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">address</span><span class="p">:</span><span class="w"> </span><span class="l">0xFE01</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">command</span><span class="p">:</span><span class="w"> </span><span class="l">0xF50A</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">command_repeats</span><span class="p">:</span><span class="w"> </span><span class="m">1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;Speaker&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">platform</span><span class="p">:</span><span class="w"> </span><span class="l">template</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">on_press</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">remote_transmitter.transmit_nec</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">address</span><span class="p">:</span><span class="w"> </span><span class="l">0xFE01</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">command</span><span class="p">:</span><span class="w"> </span><span class="l">0xED12</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">command_repeats</span><span class="p">:</span><span class="w"> </span><span class="m">1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;Auto Off Timer&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">platform</span><span class="p">:</span><span class="w"> </span><span class="l">template</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">on_press</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">remote_transmitter.transmit_nec</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">address</span><span class="p">:</span><span class="w"> </span><span class="l">0xFE01</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">command</span><span class="p">:</span><span class="w"> </span><span class="l">0xF708</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">command_repeats</span><span class="p">:</span><span class="w"> </span><span class="m">1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;Light&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">platform</span><span class="p">:</span><span class="w"> </span><span class="l">template</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">on_press</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">remote_transmitter.transmit_nec</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">address</span><span class="p">:</span><span class="w"> </span><span class="l">0xFE01</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">command</span><span class="p">:</span><span class="w"> </span><span class="l">0xE11E</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span><span class="nt">command_repeats</span><span class="p">:</span><span class="w"> </span><span class="m">1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">remote_transmitter</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="l">transmitter</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">pin</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c"># Your values here will likely be different</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">number</span><span class="p">:</span><span class="w"> </span><span class="l">GPIO14</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">mode</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">output</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">carrier_duty_percent</span><span class="p">:</span><span class="w"> </span><span class="m">50</span><span class="l">%</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div>]]></description></item><item><title>Altinex TE460-137 Teardown</title><link>https://karlquinsland.com/altinex-te460-137-teardown/</link><pubDate>Sat, 02 Dec 2023 00:00:00 +0000</pubDate><author>Author</author><guid>https://karlquinsland.com/altinex-te460-137-teardown/</guid><description><![CDATA[<h1 id="altinex-te460-137-teardown">Altinex TE460-137 Teardown</h1>
<p>It is surprisingly hard to find a device that can dump details about the various protocols and negotiated standards for a HDMI connection.
For how ubiquitous HDMI is, you&rsquo;d <em>think</em> that there would be a lot of devices that can do this.
There are LOADS of devices that can snoop USB and Ethernet, but HDMI is a bit of a different beast, apparently.</p>
<p>After a bit of searching, I found the <a href="https://www.altinex.com/product/te460-137/" target="_blank" rel="noopener noreffer">Altinex TE460-137</a> could do exactly what I wanted.</p>
<p>(/enhanced-homeassistantswitchplate/) project.</p>
<p>Like the <a href="/pulse-eight-hdmi-cec-injector-teardown/" rel="">HDMI CEC dongle</a> this device is a bit specialized and so there&rsquo;s not a lot of readily available information about it online.
I was curious about what&rsquo;s inside and how it works, so I decided to take a look.</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Front of the device.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<h2 id="magnuson-moss-warranty-act">Magnuson-Moss Warranty Act</h2>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            The case split open.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<p>Notice that pierced <code>Warranty void if removed</code> sticker over the bottom right screw?
Yeah, that&rsquo;s <a href="https://www.npr.org/sections/thetwo-way/2018/04/11/601582169/warranty-void-if-removed-as-it-turns-out-feds-say-those-warnings-are-illegal" target="_blank" rel="noopener noreffer"><strong>illegal</strong></a>.
Naturally, companies don&rsquo;t want you to know that the sticker is <a href="https://www.ifixit.com/News/15464/warranty-voiding-stickers-are-illegal-but-these-companies-are-still-using-them" target="_blank" rel="noopener noreffer">unenforceable</a>.</p>
<p>Consider this a small <a href="https://www.ifixit.com/News/11748/warranty-stickers-are-illegal" target="_blank" rel="noopener noreffer">PSA</a>: if you see a sticker like this, you can safely ignore it.
The company <em>cannot</em> void your warranty for removing it but they absolutely can make your life difficult if you do.
If you get pushback, direct them to the <a href="https://www.ftc.gov/business-guidance/resources/businesspersons-guide-federal-warranty-law" target="_blank" rel="noopener noreffer">FTC&rsquo;s official statement</a> on the matter.</p>
<p>Anyways.</p>
<h2 id="quick-peek-inside">Quick peek Inside</h2>
<p>After removing the four screws, the case splits open easily enough.
The construction is a bit more elaborate than expected; there&rsquo;s a main PCB, a control PCB, and a battery interface PCB.</p>
<p>I was in a hurry so the photos are &ldquo;as-is&rdquo; and not my best work.
I&rsquo;ve <a href="#chips-and-other-markings" rel="">noted down the markings on the chips</a> and other components for future reference.</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Internals feature three PCBs.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<p>If the battery ever does leak, the entire PCB assembly can be removed and replaced.
It also shouldn&rsquo;t be that difficult to just modify the battery interface PCB to use a different battery.
The thermistor is a nice touch!</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Rear of the battery interface PCB.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<p>Taking a quick look at the control PCB, we can see a few big ICs&hellip;
The populated JTAG header is an interesting find.</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Top of the control PCB.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<p>There&rsquo;s not much on the rear of the control PCB:</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Bottom of the control PCB.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<p>Nor is there much on the side of the PCB just behind the OLED screen / front panel.
Oddly enough, each button gets <em>two</em> sets of contacts&hellip;</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            The side of the main PCB that faces the user from within.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<p>And there&rsquo;s nothing interesting on the &lsquo;internal&rsquo; side of the front panel:</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Interior of the front panel features button matrix and OLED.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<h2 id="some-technical-details">Some Technical Details</h2>
<p>If you catch the device early enough in boot, you can see the panasonic HDMI switch chip enumerating in it&rsquo;s default state.
Don&rsquo;t ask me where the 2% overscan comes from&hellip;</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            The default EDID info doesn&#39;t last long; as soon as the device is powered on, it tries to read the EDID from the connected sink and use that.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<h3 id="chips-and-other-markings">Chips and other markings</h3>
<h4 id="control-pcb">Control PCB</h4>
<ul>
<li>The main application processor is the <a href="https://www.nxp.com/part/LPC1830FET100#/" target="_blank" rel="noopener noreffer">NXP LPC1830FET100</a>.</li>
<li>It seems like all audio is handled by the <a href="https://www.analog.com/en/products/adau1701.html" target="_blank" rel="noopener noreffer">Analog Devices ADAU1701</a>.</li>
</ul>
<p>Oddly enough there are <em>two</em> flash chips here. Presumably firmware storage for the  NXP and Analog Devices chips.</p>
<ul>
<li><a href="https://www.winbond.com/hq/product/code-storage-flash-memory/serial-nor-flash/?__locale=en&amp;partNo=W25Q32JV" target="_blank" rel="noopener noreffer">Winbond 25Q32JV</a></li>
<li><a href="https://www.microchip.com/en-us/product/24lc128" target="_blank" rel="noopener noreffer">Microchip 24LC128I</a></li>
</ul>
<p>I didn&rsquo;t bother dumping either, but Altinex does make an older version of the firmware <a href="#firmware" rel="">available</a>.</p>
<h3 id="main-pcb">Main PCB</h3>
<p>The big QFP144 chip on the main PCB is a <a href="https://panasonic.encompass.com/item/10292549/Panasonic/MN864788/" target="_blank" rel="noopener noreffer">Panasonic MN864788</a>.
I can&rsquo;t find a data sheet, but one <a href="https://stesys.eu/ocart/index.php?route=product/product&amp;manufacturer_id=135&amp;product_id=2544&amp;limit=75" target="_blank" rel="noopener noreffer">supplier has labeled it</a> a &ldquo;HDMI 2.0 Receiver/Switch&rdquo;.
Given the proximity to the two HDMI ports &hellip; this makes sense.</p>
<h3 id="dmesg"><code>dmesg</code></h3>
<p>For thoroughness, here&rsquo;s how the device enumerates over USB when plugged in when configured in RS-232 mode:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">usb 5-4.1.2.2: new full-speed USB device number <span class="m">91</span> using xhci_hcd
</span></span><span class="line"><span class="cl">usb 5-4.1.2.2: New USB device found, <span class="nv">idVendor</span><span class="o">=</span>04e2, <span class="nv">idProduct</span><span class="o">=</span>1411, <span class="nv">bcdDevice</span><span class="o">=</span> 0.01
</span></span><span class="line"><span class="cl">usb 5-4.1.2.2: New USB device strings: <span class="nv">Mfr</span><span class="o">=</span>1, <span class="nv">Product</span><span class="o">=</span>2, <span class="nv">SerialNumber</span><span class="o">=</span><span class="m">3</span>
</span></span><span class="line"><span class="cl">usb 5-4.1.2.2: Product: XR21B1411
</span></span><span class="line"><span class="cl">usb 5-4.1.2.2: Manufacturer: Exar Corp.
</span></span><span class="line"><span class="cl">usb 5-4.1.2.2: SerialNumber: Q9065270561
</span></span><span class="line"><span class="cl">usbcore: registered new interface driver xr_serial
</span></span><span class="line"><span class="cl">usbserial: USB Serial support registered <span class="k">for</span> xr_serial
</span></span><span class="line"><span class="cl">xr_serial 5-4.1.2.2:1.0: xr_serial converter detected
</span></span><span class="line"><span class="cl">usb 5-4.1.2.2: xr_serial converter now attached to ttyUSB0
</span></span></code></pre></td></tr></table>
</div>
</div><p>And when in FW update mode:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">usb 5-4.1.2.2: new high-speed USB device number <span class="m">92</span> using xhci_hcd
</span></span><span class="line"><span class="cl">usb 5-4.1.2.2: config <span class="m">1</span> interface <span class="m">0</span> altsetting <span class="m">0</span> bulk endpoint 0x83 has invalid maxpacket <span class="m">64</span>
</span></span><span class="line"><span class="cl">usb 5-4.1.2.2: config <span class="m">1</span> interface <span class="m">0</span> altsetting <span class="m">0</span> bulk endpoint 0x2 has invalid maxpacket <span class="m">64</span>
</span></span><span class="line"><span class="cl">usb 5-4.1.2.2: New USB device found, <span class="nv">idVendor</span><span class="o">=</span>1fc9, <span class="nv">idProduct</span><span class="o">=</span>8001, <span class="nv">bcdDevice</span><span class="o">=</span> 1.00
</span></span><span class="line"><span class="cl">usb 5-4.1.2.2: New USB device strings: <span class="nv">Mfr</span><span class="o">=</span>1, <span class="nv">Product</span><span class="o">=</span>2, <span class="nv">SerialNumber</span><span class="o">=</span><span class="m">0</span>
</span></span><span class="line"><span class="cl">usb 5-4.1.2.2: Product: USB Mass Storage            
</span></span><span class="line"><span class="cl">usb 5-4.1.2.2: Manufacturer: USB
</span></span><span class="line"><span class="cl">usb-storage 5-4.1.2.2:1.0: USB Mass Storage device detected
</span></span><span class="line"><span class="cl">scsi host4: usb-storage 5-4.1.2.2:1.0
</span></span><span class="line"><span class="cl">scsi 4:0:0:0: Direct-Access     NXP      Dataflash Disk   0.00 PQ: <span class="m">0</span> ANSI: <span class="m">0</span>
</span></span><span class="line"><span class="cl">sd 4:0:0:0: <span class="o">[</span>sda<span class="o">]</span> <span class="m">3968</span> 512-byte logical blocks: <span class="o">(</span>2.03 MB/1.94 MiB<span class="o">)</span>
</span></span><span class="line"><span class="cl">sd 4:0:0:0: <span class="o">[</span>sda<span class="o">]</span> Write Protect is off
</span></span><span class="line"><span class="cl">sd 4:0:0:0: <span class="o">[</span>sda<span class="o">]</span> Mode Sense: <span class="m">00</span> <span class="m">00</span> <span class="m">00</span> <span class="m">00</span>
</span></span><span class="line"><span class="cl">sd 4:0:0:0: <span class="o">[</span>sda<span class="o">]</span> Asking <span class="k">for</span> cache data failed
</span></span><span class="line"><span class="cl">sd 4:0:0:0: <span class="o">[</span>sda<span class="o">]</span> Assuming drive cache: write through
</span></span><span class="line"><span class="cl">usb 5-4.1.2.2: reset high-speed USB device number <span class="m">92</span> using xhci_hcd
</span></span><span class="line"><span class="cl">usb 5-4.1.2.2: device descriptor read/64, error -110
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="firmware">Firmware</h3>
<div class="details admonition note open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-pencil-alt fa-fw"></i>Note<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><p>The device ships with FW 3.06A/R3.</p>
<p>Their <a href="https://www.altinex.com/download/te460-137-firmware-update-v-3-04a-easy-mode/" target="_blank" rel="noopener noreffer">website</a> only have 3.04 available.</p>
</div>
        </div>
    </div>
]]></description></item><item><title>AliExpress 11.11 Sale Teardowns</title><link>https://karlquinsland.com/aliexpress-11-11-sale-teardowns/</link><pubDate>Fri, 01 Dec 2023 00:00:00 +0000</pubDate><author>Author</author><guid>https://karlquinsland.com/aliexpress-11-11-sale-teardowns/</guid><description><![CDATA[<!-- markdownlint-disable-file MD024 -->
<h1 id="11-11-day-teardowns">11-11 day teardowns</h1>
<p><a href="https://en.wikipedia.org/wiki/Singles%27_Day" target="_blank" rel="noopener noreffer">Single&rsquo;s Day</a> is a big deal in China and AliExpress has a big sale in celebration.</p>
<p>In addition to project supplies, I found quite a few items that can only be classified as  &ldquo;ohh, that looks interesting and I need another $11 in the cart to unlock free shipping&hellip;&rdquo; items.</p>
<p>I was planing on doing a series of posts covering some of the stuff I bought but nothing on it&rsquo;s own was really &ldquo;worth&rdquo; a full post so instead of a bunch of short <a href="/tags/two-minute-teardown/" rel="">&ldquo;Two Minute Teardown&rdquo;</a> posts, I decided to just roll everything into this massive post.</p>
<p>And with that, here&rsquo;s a whole grab bag of worth of #TwoMinuteTeardowns with the appropriate level of detail for each item.</p>
<h2 id="super-cheap-airtag">Super cheap &lsquo;AirTag&rsquo;</h2>
<p>Product in question: <a href="https://www.aliexpress.us/item/3256804801453934.html?gatewayAdapt=glo2usa" target="_blank" rel="noopener noreffer">Mini Tracker Bluetooth4.0 Smart Locator Smart Anti Lost Device Locator Mobile Keys Pet Kids Finder For Apple</a></p>
<p>This was a mistake on my part.
I saw a BTLE powered device tracker shaped and styled exactly like an air tag for <strong>$5 shipped</strong> and thought &ldquo;why not?&rdquo;
One good reason why not: it&rsquo;s not compatible with Apple&rsquo;s Find My network.</p>
<p>In hindsight, if it was only $5 and if it worked &rsquo;natively&rsquo; with apple devices&hellip; I&rsquo;d have heard about it before browsing Ali Express!</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<h3 id="markings-and-other-details">Markings and other details</h3>
<p>The main CPU appears to be a <a href="https://www.lenzetech.com/public/store/pdf/jsggs/ST17H66B2_BLE_SoC_Datasheet_v1.1.2.pdf" target="_blank" rel="noopener noreffer">Lenze Tech ST17H66B</a></p>
<p>The instructions point to an <a href="https://www.qrtransfer.com/iSearching.html" target="_blank" rel="noopener noreffer"><code>iSearching</code> app</a>
I didn&rsquo;t bother installing it, here&rsquo;s what a quick scan of the BTLE characteristics shows quite a few services and characteristics:</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<h2 id="tuya-wifi-power-monitor">TuYa WiFi Power Monitor</h2>
<p>Product in question: <a href="https://s.click.aliexpress.com/e/_mNLeK44" target="_blank" rel="noopener noreffer">16A Tuya WIFI Smart Socket AC220V 110V Digital Wattmeter EU Plug Electricity consumption Power KWH US AU FR Power Energy Meter</a></p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>TuYa module doesn&rsquo;t seem to be running the show; most of the pads are not connected; only the UART pins seem to be going somewhere.</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>A bit more going on than you&rsquo;d expect at first; I was expecting a simple Switch Mode power supply driver for DC and then a single MCU to do everything but the WiFi.
Not so!
There&rsquo;s a dedicated chip for power monitoring, BT, Power supply, and the main MCU&hellip;</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<h3 id="markings-and-other-details-1">Markings and other details</h3>
<ul>
<li>
<p><a href="https://en.sekorm.com/doc/2232723.html" target="_blank" rel="noopener noreffer">KP3211BSG</a></p>
</li>
<li>
<p><a href="https://www.wch-ic.com/products/CH573.html" target="_blank" rel="noopener noreffer">CH573F</a></p>
</li>
<li>
<p><a href="https://www.aliexpress.us/item/2255799832871961.html?gatewayAdapt=glo2usa4itemAdapt" target="_blank" rel="noopener noreffer">GMT024-01</a></p>
</li>
<li>
<p><a href="https://developer.tuya.com/en/docs/iot/cb3s?id=Kai94mec0s076" target="_blank" rel="noopener noreffer">TuYa CBS3 module</a></p>
</li>
<li>
<p><a href="https://www.lcsc.com/product-detail/Energy-Metering-ICs_BL-Shanghai-Belling-BL0942_C2837510.html" target="_blank" rel="noopener noreffer">BL0942</a></p>
</li>
<li>
<p><code>BP0S229-28A2</code>: This is the same chip that shows up in the <a href="#pet-rfid-tag-reader" rel="">pet RFID reader</a> and I cant&rsquo; find an exact match for it.</p>
</li>
<li>
<p>LCD is marked <code>AVDD AVCL</code> which seems to be pretty generic</p>
</li>
</ul>
<h2 id="tuya-wifi-air-quality-monitor">TuYa WiFi Air Quality Monitor</h2>
<p>Product in question: <a href="https://s.click.aliexpress.com/e/_mPXVCDO" target="_blank" rel="noopener noreffer">Tuya Wifi Portable Air Quality Meter 8in1 PM1.0 PM2.5 PM10 CO2 TVOC HCHO Temperature and Humidity Tester Carbon Dioxide Detector</a></p>
<p>Unfortunately you have to peel off the screen cover to get access to the screws.
At least they&rsquo;re just regular philips screws and not some weird security screws.</p>
<p>Interesting to see the IR sensor at the top. Presumably this is for proximity sensing to turn the screen on and off and not some kind of IR blaster or remote control.</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>Makes sense that the various sensors would be facing the vents holes.</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>Looks like it&rsquo;s using a micro controller to do the heavy lifting and only communicate to the TuYa module via UART.
This is a common and well-supported pattern for these kinds of devices &hellip; even if it does mean that it won&rsquo;t be <em>trivial</em> to just replace the TuYa module with an ESPHome or Tasmota compatible module.</p>
<p>Sniffing the UART shouldn&rsquo;t be that difficult but it&rsquo;s not something I&rsquo;m going to do in this post.</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>The various sensors aren&rsquo;t easily removed or clearly identified so your guess is as good as mine.
The main PCB has a few unpopulated connections so this module either works with a different suite of sensors or - more likely - supports a few different footprints for each sensor.</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<h3 id="markings-and-other-details-2">Markings and other details</h3>
<ul>
<li>Main MCU: FMD B2CACSK. I can&rsquo;t find <em>anything</em> on this chip.</li>
<li>TuYa module: <a href="https://developer.tuya.com/en/docs/iot/cbu-module-datasheet?id=Ka07pykl5dk4u" target="_blank" rel="noopener noreffer">CBU</a></li>
</ul>
<p>PCB is marked with:</p>
<pre><code>PV28_TFT_v3
2022/10/25
</code></pre>
<p>Screen is marked with:</p>
<pre><code>LY028S24256
</code></pre>
<h2 id="waveshare-poe-rs232485422-adapter">WaveShare PoE RS232/485/422 adapter</h2>
<p>Product in question: <a href="https://s.click.aliexpress.com/e/_mPR1X7e" target="_blank" rel="noopener noreffer">with POE optional Modbus MQTT JSON serial server RS485 RS232 RS422 to Ethernet TCP/IP to serial converter</a>.</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p><a href="https://electronics.stackexchange.com/questions/413295/rs485-termination" target="_blank" rel="noopener noreffer">Line termination resistors</a> that can be switched  in/out via jumpers is a very nice touch!</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>Neat and clean PCB layout with adequate protections on the RS485/422/232 lines.</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>Unfortunately the main MCU has it&rsquo;s markings lasered off so your guess is as good as mine.</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<h3 id="markings-and-other-details-3">Markings and other details</h3>
<p>All the RS485/422/232 seems to be done with Sipex/MaxLinear chips:</p>
<ul>
<li>
<p>RS484/422 via <a href="https://assets.maxlinear.com/web/documents/sipex/datasheets/sp483e.pdf" target="_blank" rel="noopener noreffer">MaxLinear SP483E</a></p>
</li>
<li>
<p>RS232 via <a href="https://assets.maxlinear.com/web/documents/sipex/datasheets/sp3222e_sp3232e.pdf" target="_blank" rel="noopener noreffer">Max Linear (Sipex) SP3222E</a>.</p>
</li>
<li>
<p>Isolation between PoE and Comms via <a href="https://www.aliexpress.us/item/3256804720041549.html?gatewayAdapt=glo2usa4itemAdapt" target="_blank" rel="noopener noreffer">2PAI SEMI 141E61</a></p>
</li>
</ul>
<p>There&rsquo;s also a few Diodes Inc. chips on the board:</p>
<ul>
<li>
<p>PoE rectification via <a href="https://www.diodes.com/assets/Datasheets/MB10F.pdf" target="_blank" rel="noopener noreffer">Diodes Incorporated MB10F</a></p>
</li>
<li>
<p>PoE power switching via <a href="https://www.diodes.com/assets/Datasheets/SBR8U60P5.pdf" target="_blank" rel="noopener noreffer">Diodes Incorporated SBR8U60P5</a></p>
</li>
</ul>
<p>PoE negotiation via <a href="https://www.silan.com.cn/en/index.php/product/details/3145.html" target="_blank" rel="noopener noreffer">Silan SD4950</a></p>
<h2 id="asometech-wlx-x69-usb-c-power-brick">Asometech WLX-X69 USB-C power brick</h2>
<p>Product in question: <a href="https://s.click.aliexpress.com/e/_mPlQZcs" target="_blank" rel="noopener noreffer">140W 6 Ports PD Fast Charger 30W Multi USB-C Fast Charging Station with LED Display for IPhone 14 13 Pro Max Samsung Xiaomi lpad</a></p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>The mirror finish &hellip; is certainly a choice.
It gets better once you remove the protective film, at least.</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>There are no screws holding the case together; just pry the back panel off, slide out the power supply and you can access the front PCB that does the actual USB-C power negotiations.</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>I am 100% sure that this power supply was originally designed for something else.
One of the original leads was cut off before the power supply was re-purposed.</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>After removing the power distribution board from the case, it&rsquo;s quite clean!
It would also be trivial to use this board in other projects 🤔.</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>Single CPU to run the show and a USB-C power negotiation chip per port.</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>Too much glue keeping everything the power supply together for me to bother taking it apart further.
It&rsquo;s got some heft to it but I&rsquo;m not able to easily check out quality of transformer or other components.</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<h3 id="markings-and-other-details-4">Markings and other details</h3>
<ul>
<li>Main CPU is marked <code>FMD A3JMLTH</code> but I can&rsquo;t find any information on it.</li>
<li>USB-C PD negotiations handled with <a href="https://www.ismartware.com/upload/admin/20210312/202103121815173213.pdf" target="_blank" rel="noopener noreffer">ZHUHAI ISMARTWARE TECHNOLOGY SW3526</a></li>
</ul>
<h2 id="pet-rfid-tag-reader">Pet RFID tag reader</h2>
<p>Product in question: <a href="https://s.click.aliexpress.com/e/_mrfMB5i" target="_blank" rel="noopener noreffer">134.2Khz RFID Animal Tag Reader Handheld Pet Microchip Scanner IISO11784/85/FDX-B/EMID Data Storage Microchip For Pet/Dog/Cat/Pig</a></p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>Not much on the back of the PCB: just a beeper and generic battery management IC.</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>I honestly thought this would be more integrated.
Instead there&rsquo;s quite a few chips on the board.</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<h3 id="markings-and-other-details-5">Markings and other details</h3>
<ul>
<li>
<p><a href="https://www.microchip.com/en-us/product/mcp602" target="_blank" rel="noopener noreffer">Microchip MCP602</a>: OpAmp, likely used for processing the signal from the antenna.</p>
</li>
<li>
<p><a href="https://datasheetspdf.com/datasheet/XN297.html" target="_blank" rel="noopener noreffer">Panchip XN297L8W</a>: 2.4 ghz radio</p>
</li>
<li>
<p><code>MT00606XA</code>: I can&rsquo;t find any information on this chip.</p>
</li>
<li>
<p><code>BP0S229-28A2</code>: A chip from <a href="https://www.zh-jieli.com/" target="_blank" rel="noopener noreffer">Zhuhai Jieli Technology</a> that I can&rsquo;t seem to 100% identify.
The markings match the same chip that showed up in the <a href="#tuya-wifi-power-monitor" rel="">power monitor</a> above.
The power monitor has both WiFi and Bluetooth so it&rsquo;s not a stretch to think that this chip is Bluetooth connectivity.</p>
</li>
</ul>
<p>PCB is marked <code>W90A-V1.9</code></p>
<h2 id="atk-ptdp100-dc-power-supply">ATK-PTDP100 DC Power Supply</h2>
<p>Product in question: <a href="https://s.click.aliexpress.com/e/_mOfFkQY" target="_blank" rel="noopener noreffer">DP100 DC Power Supply Adjustable Digital DC Power Supply MINI Portable Lab Source Power Supply Voltage Regulator Switch 30V 5A</a></p>
<p>This is nothing more than a desk-friendly version of the <a href="/electronics-lab-enhanced-bench-psu/" rel="">RD6006</a> power supply and it&rsquo;s amazing.</p>
<p>Here&rsquo;s everything that came in the box:</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>It shipped with this power supply and a barrel jack to USB-C adapter&hellip; because the DP100 actually expects its power to come <em>from</em> a USB-C/PD capable source.
It&rsquo;ll be trivial to use this power supply with a USB-C power bank.
It - annoyingly - has a USB-A <strong><em>male</em></strong> port for data logging / firmware updates.
At least they included a Male &lt;-&gt; Male USB A cable&hellip;
I would have preferred two USB-C ports with clear labeling about which was meant for PD input and which was meant for PC communications.</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>For reference, the power supply is pretty beefy:</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>Terminals are compact but decently high quality.
The little red and black rubber bands are a nice touch.</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>Annoying security torx screws under the rubber feet.</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>Screen is a bit cramped and navigation is a bit clunky but once you get used to it, it&rsquo;s not bad.</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>After removing the screws and prying the case apart, it&rsquo;s quite clean inside.</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>Main CPU next to some unpopulated pin headers and some loctite screwing the PCB to the terminals.</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>On the other side of the PCB is a metal can with all the fun power conversion stuff.</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>They&rsquo;re doing a <a href="https://www.allaboutcircuits.com/textbook/direct-current/chpt-8/kelvin-resistance-measurement/" target="_blank" rel="noopener noreffer">4 wire measurement</a> at the terminals via a small secondary PCB.</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>And after removing the can, it&rsquo;s just a bunch of filter caps and an inductor.</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<h3 id="markings-and-other-details-6">Markings and other details</h3>
<p>Unfortunately most of the ICs didn&rsquo;t photograph well or otherwise have scratched / obscured markings.
Most of the power switching ICs <em>look</em> like they&rsquo;re from Monolithic Power Systems but I can&rsquo;t confirm exactly.</p>
<p><a href="https://www.lcsc.com/product-detail/USB-ICs_WCH-Jiangsu-Qin-Heng-CH224K_C970725.html" target="_blank" rel="noopener noreffer">WCH(Jiangsu Qin Heng) CH224K</a></p>
<p>Main CPU is <a href="https://www.arterychip.com/en/product/AT32F415.jsp" target="_blank" rel="noopener noreffer">Artery AT32F415</a></p>
]]></description></item><item><title>Inside of the Pulse-Eight HDMI CEC Injector.</title><link>https://karlquinsland.com/pulse-eight-hdmi-cec-injector-teardown/</link><pubDate>Fri, 01 Dec 2023 00:00:00 +0000</pubDate><author>Author</author><guid>https://karlquinsland.com/pulse-eight-hdmi-cec-injector-teardown/</guid><description><![CDATA[<h1 id="inside-the-pulse-eight-hdmi-cec-injector">Inside the Pulse-Eight HDMI CEC Injector</h1>
<p>To make a long store short, Google recently pushed a few updates to my TV that made it slow as all hell and frustratingly unusable.
I finally got fed up with the laggy UI and dug out an old mini PC and installed <a href="https://libreelec.tv/" target="_blank" rel="noopener noreffer">LibreELEC</a> on it.</p>
<p>Everything worked perfectly <em>except</em> for the lack of <a href="https://en.wikipedia.org/wiki/Consumer_Electronics_Control" target="_blank" rel="noopener noreffer">CEC</a> support on the mini PC.</p>
<p>This is a common enough problem that there&rsquo;s a few different devices out there that can add CEC support to a device that doesn&rsquo;t have it.
I chose the <a href="https://www.pulse-eight.com/p/104/usb-hdmi-cec-adapter" target="_blank" rel="noopener noreffer">Pulse-Eight HDMI CEC Injector</a> because it&rsquo;s natively supported by LibreELEC.</p>
<p>I was curious what was inside and I couldn&rsquo;t find any teardowns online so I decided to do one myself.
There&rsquo;s not much to the device and I&rsquo;m not doing any serious reverse engineering here so let&rsquo;s call this a <a href="/tags/two-minute-teardown/" rel="">&ldquo;Two Minute Teardown&rdquo;</a>.</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            The device is small and unassuming.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Opening is trivial. No glue or anything. Just a few pins and sockets. Gently pry the two halves apart and you&#39;re in.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<p>I wasn&rsquo;t expecting much; I thought CEC was implemented via UART and not SPI so I was expecting to see a cheap FTDI knockoff chip or similar.
Turns out I was wrong and the device uses an <a href="https://www.microchip.com/en-us/product/at90usb162" target="_blank" rel="noopener noreffer">ATMEL 90USB162</a> which is a USB to SPI bridge.
I haven&rsquo;t looked too closely at the <a href="https://github.com/Pulse-Eight/libcec" target="_blank" rel="noopener noreffer">firmware</a> but I suspect there&rsquo;s some abstraction layer that makes it look like a <a href="#dmesg" rel="">UART</a> to the OS.</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Other than a few passives, there&#39;s only one chip on the board.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Nothing interesting other than a programming header.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        <p>
            The full PCB sans case.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<h2 id="dmesg"><code>dmesg</code></h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">usb 5-4.1.2.3.2: new full-speed USB device number <span class="m">2</span> using xhci_hcd
</span></span><span class="line"><span class="cl">usb 5-4.1.2.3.2: New USB device found, <span class="nv">idVendor</span><span class="o">=</span>2548, <span class="nv">idProduct</span><span class="o">=</span>1002, <span class="nv">bcdDevice</span><span class="o">=</span>10.00
</span></span><span class="line"><span class="cl">usb 5-4.1.2.3.2: New USB device strings: <span class="nv">Mfr</span><span class="o">=</span>1, <span class="nv">Product</span><span class="o">=</span>2, <span class="nv">SerialNumber</span><span class="o">=</span><span class="m">3</span>
</span></span><span class="line"><span class="cl">usb 5-4.1.2.3.2: Product: CEC Adapter
</span></span><span class="line"><span class="cl">usb 5-4.1.2.3.2: Manufacturer: Pulse-Eight
</span></span><span class="line"><span class="cl">usb 5-4.1.2.3.2: SerialNumber: v12
</span></span><span class="line"><span class="cl">input: Pulse-Eight CEC Adapter as /devices/pci0000:00/0000:00:08.1/0000:0d:00.3/usb5/5-4/5-4.1/5-4.1.2/5-4.1.2.3/5-4.1.2.3.2/5-4.1.2.3.2:1.2/0003:2548:1002.0102/input/input195
</span></span><span class="line"><span class="cl">hid-generic 0003:2548:1002.0102: input,hidraw10: USB HID v1.10 Mouse <span class="o">[</span>Pulse-Eight CEC Adapter<span class="o">]</span> on usb-0000:0d:00.3-4.1.2.3.2/input2
</span></span><span class="line"><span class="cl">cdc_acm 5-4.1.2.3.2:1.0: ttyACM0: USB ACM device
</span></span><span class="line"><span class="cl">usbcore: registered new interface driver cdc_acm
</span></span><span class="line"><span class="cl">cdc_acm: USB Abstract Control Model driver <span class="k">for</span> USB modems and ISDN adapters
</span></span></code></pre></td></tr></table>
</div>
</div>]]></description></item></channel></rss>