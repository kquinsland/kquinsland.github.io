<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>ESPHome - Tag - karl</title><link>https://karlquinsland.com/tags/esphome/</link><description>ESPHome - Tag - karl</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 28 Feb 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://karlquinsland.com/tags/esphome/" rel="self" type="application/rss+xml"/><item><title>PoE powered Stack Light</title><link>https://karlquinsland.com/poe-stack-light/</link><pubDate>Sun, 28 Feb 2021 00:00:00 +0000</pubDate><author>Author</author><guid>https://karlquinsland.com/poe-stack-light/</guid><description><![CDATA[<figure >

    
        
    

    

    <figcaption>
        
        <p>
        The lights are much brighter than they appear in this picture; had to intentionally darken the image to prevent camera from blowing out the colors.
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p><a href="https://en.wikipedia.org/wiki/Stack_light" target="_blank" rel="noopener noreffer">Stack/signal lights</a> are <em>everywhere</em> in industrial applications for good reason: they&rsquo;re a compact and relatively information-dense indicator system. They always seemed like the kind of indicator that only people with expensive machines needed. Until I found that they can be had for just under $6/light from Ali Express, that is.</p>
<p>I don&rsquo;t have any giant industrial machines to attach one to, but I do have a non-trivial number of containers/servers/networked-devices running and they all emit various notifications, usually through email. Who wouldn&rsquo;t mind a novel way to move those notifications beyond email/push notifications into the physical world 🤔?</p>
<ul>
<li>🟢 =&gt; Everything is nominal</li>
<li>🟠 =&gt; Check your email; a <code>WARN</code> level event has occurred</li>
<li>🔴 =&gt; A <code>WARN</code> or <code>ERROR</code> level condition has occurred; something (ISP down?) is preventing delivery of notifications so check the logs/dashboards directly</li>
<li>🔵 =&gt; A new <code>INFO</code> level message available in Home Assistant</li>
<li>⚪ =&gt; Not sure; either a &ldquo;A HIGH priority task is past due&rdquo; or a &lsquo;modifier&rsquo; for above status</li>
</ul>
<p>While waiting for the light to arrive from China, I started to design something to drive it.
It was immediately obvious that an ESP32 module would be <strong>ideal</strong> to run the show, and just for the fun of it, I decided to make the entire thing (optionally) controlled and powered over Ethernet.</p>
<h2 id="home-assistant">Home Assistant</h2>
<p>It wouldn&rsquo;t be an ESP32 powered project w/o the the <em>fantastic</em> <a href="https://esphome.io/" target="_blank" rel="noopener noreffer">ESPHome</a> framework! With ESPHome comes trivial Home Assistant integration; each individual light / channel on the stack light is automatically configured via MQTT a a light:</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        Stack light is controlled via MQTT making it easy to control from Home Assistant or any other program that can speak MQTT.
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>A slightly modified version of the ESPHome config that I use to build the firmware for the light is attached at the end of this post.</p>
<p>Unfortunately, the one Home Assistant integration that I had in mind is currently not feasible!
I wanted to light the blue light when there is any new/unread Home Assistant <a href="https://www.home-assistant.io/integrations/persistent_notification/" target="_blank" rel="noopener noreffer">persistent notifications</a>;
a real life &ldquo;unread&rdquo; badge of sorts.</p>
<p>There is no way to get the list / count of active notifications unless you&rsquo;re a <a href="https://github.com/home-assistant/core/blob/41b45c7f78f9937520b38126cedf228da7507d7d/homeassistant/components/persistent_notification/__init__.py#L203" target="_blank" rel="noopener noreffer">websocket client</a>, however.</p>
<p>Using the <a href="https://github.com/home-assistant/core/blob/41b45c7f78f9937520b38126cedf228da7507d7d/homeassistant/components/persistent_notification/__init__.py#L30" target="_blank" rel="noopener noreffer"><code>persistent_notifications_updated</code></a> event as a trigger won&rsquo;t work because the event payload lacks useful data; I can&rsquo;t figure out the number of notifications or their state&hellip; just that either notification has been created or dismissed.
If I wanted the blue light on any time a notification was either created or destroyed, I could use this trigger. But the light is no longer a useful indicator; it would be on the first time a notification was created or destroyed and then it would never be off.</p>
<p>Manually trying to <a href="https://community.home-assistant.io/t/dismiss-of-a-persistent-notification-as-trigger-for-automations/135621/5" target="_blank" rel="noopener noreffer">keep track of the number of notification created/dismissed actions</a> just feels like a hacky workaround that could easily get out of sync, too.</p>
<p>Oh well 😔.</p>
<h2 id="bom">BOM</h2>
<p>I&rsquo;ll cover the individual 3D printed and electronic components below. Beyond them, you&rsquo;ll need some additional hardware:</p>
<ul>
<li>4x <a href="https://www.mcmaster.com/catalog/91290A113" target="_blank" rel="noopener noreffer">m3x8mm</a> screws</li>
<li>4x <a href="https://www.mcmaster.com/catalog/91274A115" target="_blank" rel="noopener noreffer">m4x8mm</a> screws</li>
<li>4x <a href="https://www.mcmaster.com/catalog/91274A117" target="_blank" rel="noopener noreffer">m4x10mm</a> screws</li>
<li>6x <a href="https://www.kjmagnetics.com/proddetail.asp?prod=BC41" target="_blank" rel="noopener noreffer">Neodymium magnets</a> sized 20mm x 6mm x 2mm. These are optional and are leftover magnets from this <a href="https://www.google.com/search?client=firefox-b-1-d&amp;q=prusa&#43;mk3&#43;enclosure&#43;2" target="_blank" rel="noopener noreffer">build</a></li>
<li>10mm diameter <a href="https://www.amazon.com/s?k=10mm&#43;cabinet&#43;door&#43;pad" target="_blank" rel="noopener noreffer">anti-slip pads</a>. Thees are optional but will keep the base from sliding around.</li>
</ul>
<p>I&rsquo;ve linked to the screws that I used, but any similar ones should work. Strong glue could also work, but is not recommended.</p>
<p>The m3 screws are for attaching the PCB to the printed part (in yellow, below)
The shorter m4 screws are for attaching the base (yellow) to the lid (dark blue) and the longer screws are for attaching the stack light to the lid.</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        About to start melting threads into the 3D printed parts.
        
            
        
        </p> 
    </figcaption>
    
</figure>


<h4 id="stack-light">Stack light</h4>
<p>Looking quickly through Ali Express, it seems that the lights come in a few different styles, but all appear to be modular in construction.
Regardless of lamp style, they all appear to come in 2-5 lamp variants and some have configuration switches that allow for customizing the behavior per lamp.</p>
<p>The ESPHome code and PCB are designed to accommodate up to 6 colors but will work with less.</p>
<p>No matter which style and colors you select, make sure you get one with a <strong>positive <a href="https://en.wikipedia.org/wiki/Anode" target="_blank" rel="noopener noreffer">anode</a></strong> rated for <strong>12V DC</strong>.</p>
<p>The exact lamp that I used is <a href="https://www.aliexpress.com/item/1005001391165850.html" target="_blank" rel="noopener noreffer">here</a>.</p>
<h4 id="esp32-module">ESP32 Module</h4>
<p>I chose to use the <a href="https://www.aliexpress.com/item/1005001739834076.html" target="_blank" rel="noopener noreffer">WirelessTag WT32-eth01</a> module for the onboard Ethernet circuitry at a relatively cheap price: about $10/module. Bonus: it&rsquo;s got a breadboard friendly footprint <em>and</em> castellated pads!</p>
<p>You do not need to use Ethernet for control <em>or</em> power; the ESPHome configuration below can be easily modified to use the WiFi.</p>
<p>In any case, you will need a dedicated UART programmer for the module as there is no built-in USB port on the WT32-eth01.</p>
<h4 id="pcb">PCB</h4>
<p>Nothing much to see here; just a simple board to consolidate connections for what would otherwise be a mess of wires.</p>
<p>Since I was already using Ethernet for the data, may as well use it for the power, too.
Designing my own PoE circuitry was not in scope for this project, so I went with another off-the-shelf <a href="https://www.aliexpress.com/item/32620368747.html" target="_blank" rel="noopener noreffer">module</a>. I ordered the <code>12V2A-Full 24W</code> version, but the others are likely to also have an identical internal PCB layout which should fit in the 3D printed parts. Make sure to get one that supplies the 12V that the stack light will need!</p>
<p>The PCB does not care <em>where</em> the 12V DC supply comes from.
It wouldn&rsquo;t be difficult to modify the enclosure to accommodate a <a href="https://www.aliexpress.com/item/1005001668143510.html" target="_blank" rel="noopener noreffer">USB-C Power Delivery module</a> or even just a standard barrel jack / LED power supply.</p>
<p>Like the PoE module, I use an off the shelf DC to DC converter <a href="https://www.aliexpress.com/item/32833398811.html" target="_blank" rel="noopener noreffer">module</a> to step the 12V down from the PoE dongle to 5V which the ESP32 module requires. That link is to a whole-sale lot of 10 converters. You can order the same module in quantities of one from similar listings. I buy them in bulk because it&rsquo;s more expensive to design and solder my own on each board that I build&hellip;</p>
<p>My testing isn&rsquo;t super through, but I see the total power draw (measured from the PoE supplying equipment) reaching about 4.5W when all lights are on and about 2W at at idle.</p>
<p>The ESP32 just drives some <a href="https://lcsc.com/product-detail/MOSFET_Diodes-Incorporated-DMN1019USN-7_C145103.html" target="_blank" rel="noopener noreffer">N-Channel MOSFETS</a> to switch the individual lights on/off.
They&rsquo;re the only surface mount (SOT-23-4) component; everything else can be done with through hole components. The board is designed for up to 6 colors/lights, but populate only as many MOSFETS as you need.</p>
<p>All of the screw terminals are optional; I had several spares left over from a different project, but soldering wires directly to the PCB would work as well.</p>
<p>The 6 pin screw terminal is LCSC part <a href="https://lcsc.com/product-detail/Screw-terminal_JILN-JL301-50007U02_C409139.html" target="_blank" rel="noopener noreffer"><code>C409139</code></a></p>
<p>The 2 pin screw terminal is LCSC part <a href="https://lcsc.com/product-detail/Screw-terminal_Ningbo-Kangnex-Elec-WJ129V-5-0-2P_C8463.html" target="_blank" rel="noopener noreffer"><code>C8463</code></a></p>
<p>The source and gerber files from EasyEDA are below. Upload them to your favorite PCB prototyping service or try your hand at making your own.</p>
<h4 id="printed-parts">Printed parts</h4>
<p>There are two parts: a <code>lid</code> and a <code>plate</code>. The electronics are attached to the plate and the stack light is attached to the lid. In the photos associated with this post, the <code>lid</code> is dark blue and the <code>plate</code> is yellow.</p>
<p>The plate has features for several attachment methods:</p>
<ul>
<li>magnets; meant for horizontal surfaces</li>
<li>3M command strip; probably wont be enough to do wall/ceilings, but should work in lieu of magnets on horizontal surfaces</li>
<li>4 circular indents (<code>10mm</code> diameter) included for anti-slip pads</li>
<li>drywall screw/slot mounting for walls/ceilings</li>
</ul>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        I wasn&#39;t sure where I&#39;d want to install this, so there are a few options for attaching the base to surfaces.
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>Pause the print job at the correct layer if you intend to embed magnets:</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        Insert your magnets before the layer covering thee 6 cavities is printed.
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>Both the <code>lid</code> and <code>base</code> are easy to print; material and color are up to you, as is layer height and quality settings. The <code>stl</code> and <code>step</code> files for both are at the end of this post.
Should you want to make your own enclosure from scratch, I have also included the <code>step</code> files for the PoE dongle and PCB below.</p>
<h2 id="assemble">Assemble</h2>
<p>Assembly is relatively straightforward; its mostly integrating a few components into a simple 3d printed enclosure.</p>
<h3 id="pcb-1">PCB</h3>
<p>Solder the electronic components to the PCB. If omitting screw terminals for the stack light wires, do not solder them to the PCB yet!</p>
<p>I created the castellated pad footprint for the ESP32 module by hand and, in the version of the PCB pictured, didn&rsquo;t get the pads as close as they should be so there are some ugly solder blobs to compensate. The pads are correctly placed on the most recent PCB revision.</p>
<p>I have included two programming headers on the PCB to flash your firmware; one at <code>2.54mm</code> pitch and the other at <code>1.0mm</code> pitch, the latter of which is intended for use with <a href="https://www.aliexpress.com/item/4001122992446.html" target="_blank" rel="noopener noreffer">this</a> programmer.</p>
<p>There is a solder bridge labeled <code>EXT 3v3</code>; short this out if you intend to use the programmer to power the ESP32 module. Leave it alone if you plan to use external DC to power the device during programming.</p>
<p>I suggest programming the module <em>now</em> to verify that you&rsquo;ve built the PCB correctly and that your stack light works as expected.
Once you&rsquo;ve confirmed the electronics and software all work together, proceed to final assembly.</p>
<h2 id="everything-else">Everything else</h2>
<p>The various holes designed to receive screw threads are intentionally undersized. If you&rsquo;re not using self-tapping screws, you&rsquo;ll find it MUCH EASER to insert a <em>hot</em> screw for the first time.</p>
<p>With the screw on the end of the driver, hold the tip of the screw/threads under a flame for 5-10 seconds and then quickly rotate the screw into the plastic using a bit of extra &lsquo;pushing&rsquo; force.
Once the screw is fully inserted, allow it to fully cool (~5min) so the softened plastic has a chance to solidify around the screw threads.</p>
<p>The screws that hold the base plate to the body of the enclosure are meant to sit flush. Ensure that you screw them in fully before the plastic cools!</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        If the screws protrude even a fraction of a millimeter, the light can wobble and the magnetic attachment is weakened.
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>While waiting for the screws to cool, cut the Ethernet and power leads from the PoE dongle down to size. Desolder the leads from the dongle, trim to be as short as possible and re-solder.</p>
<p>The less &lsquo;slack&rsquo; cable in the enclosure, the easier it will be to finish assembly!</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        I cut a few inches off the Ethernet cable and power leads so everything fits in the enclosure better.
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>After the screws have cooled, ensure that the PCB sits flush against the mounts.</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        PCB should be flush against the mounting posts.
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>With all wires connected, lift the PoE dongle off of the base plate slightly and align the RJ45 jack with the square hole in the enclosure.</p>
<p>Make sure the side of the base plate opposite the side with the RJ45 jack is securely mounts into the body of the enclosure!</p>
<p>Gently press the remaining side of the base plate into the enclosure. As the base plate gets closer to flush with the body, the RJ45 jack should slowly come into alignment with the wall.</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        Use the plate as a lever to carefully push, then hold, the PoE dongle in place.
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>When the base blate is completely installed into the body, the RJ45 jack should be flush with the external wall of the enclosure.</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        RJ45 jack should be flush to the outer wall of the enclosure.
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>Attach the base plate to the enclosure body with the 4 screws, attach silicon feet or a 3M command strip and then you&rsquo;re done!</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        Translucent white lenses for much less ambiguity than the stack lights with colored lenses.
        
            
        
        </p> 
    </figcaption>
    
</figure>


<h2 id="files">Files</h2>
<p>All files below are licensed under the <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank" rel="noopener noreffer">Attribution-NonCommercial-ShareAlike 4.0 International (CC BY-NC-SA 4.0)</a> license unless otherwise explicitly noted.</p>
<p><strong>None of the files below may be used for commercial purposes</strong></p>
<ul>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/poe-stack-light/images/complete/01_all_off.jpg">
                    
                </a>
                
                <figcaption>
                    <small>Translucent white lenses for much less ambiguity than the stack lights with colored lenses.</small>
                </figcaption>
                
            </figure>

        
    </li>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/poe-stack-light/images/assemble/base_mounting_options.png">
                    
                </a>
                
                <figcaption>
                    <small>I wasn&#39;t sure where I&#39;d want to install this, so there are a few options for attaching the base to surfaces.</small>
                </figcaption>
                
            </figure>

        
    </li>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/poe-stack-light/images/assemble/04_close.jpg">
                    
                </a>
                
                <figcaption>
                    <small>Use the plate as a lever to carefully push, then hold, the PoE dongle in place.</small>
                </figcaption>
                
            </figure>

        
    </li>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/poe-stack-light/images/complete/02_all_on.jpg">
                    
                </a>
                
                <figcaption>
                    <small>The lights are much brighter than they appear in this picture; had to intentionally darken the image to prevent camera from blowing out the colors.</small>
                </figcaption>
                
            </figure>

        
    </li>
    
    <li>
        
            <a target="_blank" href="https://karlquinsland.com/poe-stack-light/files/easy_eda_gerber.zip">
                <i class="far fa-file-"></i>
                files/easy_eda_gerber.zip:
                
                
                <br>
                <small>sha1: d7686b0ad88a1686a5a11cb009632b53ca474c75</small>
                
            </a>
        
    </li>
    
    <li>
        
            <a target="_blank" href="https://karlquinsland.com/poe-stack-light/files/easy_eda_source.zip">
                <i class="far fa-file-"></i>
                files/easy_eda_source.zip:
                
                
                <br>
                <small>sha1: e05a00cdca9af94dd0e8d1d8f3aa998b75c14a08</small>
                
            </a>
        
    </li>
    
    <li>
        
            <a target="_blank" href="https://karlquinsland.com/poe-stack-light/files/enclosure-lid-m1v2.stl">
                <i class="far fa-file-code"></i>
                files/enclosure-lid-m1v2.stl:
                
                <small style="font-family:'Lucida Console', monospace">stl</small> <small>file</small>
                
                
                <br>
                <small>sha1: 3870a674d9cf08bf26e3607e42ee766e9816ac6c</small>
                
            </a>
        
    </li>
    
    <li>
        
            <a target="_blank" href="https://karlquinsland.com/poe-stack-light/files/enclosure-plate-m1v2.stl">
                <i class="far fa-file-code"></i>
                files/enclosure-plate-m1v2.stl:
                
                <small style="font-family:'Lucida Console', monospace">stl</small> <small>file</small>
                
                
                <br>
                <small>sha1: 8f90b54be2a798cf87bc6ca4fc118b82669e0668</small>
                
            </a>
        
    </li>
    
    <li>
        
            <a target="_blank" href="https://karlquinsland.com/poe-stack-light/files/esphome_confg.yaml">
                <i class="far fa-file-code"></i>
                files/esphome_confg.yaml:
                
                <small style="font-family:'Lucida Console', monospace">yaml</small> <small>file</small>
                
                
                <br>
                <small>sha1: aa0076b7bee08f09568536463c8794f15a2f59b2</small>
                
            </a>
        
    </li>
    
    <li>
        
            <a target="_blank" href="https://karlquinsland.com/poe-stack-light/files/pcb.step">
                <i class="far fa-file-code"></i>
                files/pcb.step:
                
                <small style="font-family:'Lucida Console', monospace">step</small> <small>file</small>
                
                
                <br>
                <small>sha1: e212f3cd3d90a639e6518b7d11bc5cc20df09b67</small>
                
            </a>
        
    </li>
    
    <li>
        
            <a target="_blank" href="https://karlquinsland.com/poe-stack-light/files/poe-dongle.step">
                <i class="far fa-file-code"></i>
                files/poe-dongle.step:
                
                <small style="font-family:'Lucida Console', monospace">step</small> <small>file</small>
                
                
                <br>
                <small>sha1: a698c249d89f2ab2c981427df49620cb09ce5f66</small>
                
            </a>
        
    </li>
    
    <li>
        
            <a target="_blank" href="https://karlquinsland.com/poe-stack-light/files/stack-light-base.step">
                <i class="far fa-file-code"></i>
                files/stack-light-base.step:
                
                <small style="font-family:'Lucida Console', monospace">step</small> <small>file</small>
                
                
                <br>
                <small>sha1: 3c3d0d6162a985b4f09d0f9a58fdacb3f08beb78</small>
                
            </a>
        
    </li>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/poe-stack-light/images/assemble/00_flush_screws.jpg">
                    
                </a>
                
                <figcaption>
                    <small>If the screws protrude even a fraction of a millimeter, the light can wobble and the magnetic attachment is weakened.</small>
                </figcaption>
                
            </figure>

        
    </li>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/poe-stack-light/images/home-assistant.png">
                    
                </a>
                
                <figcaption>
                    <small>Stack light is controlled via MQTT making it easy to control from Home Assistant or any other program that can speak MQTT.</small>
                </figcaption>
                
            </figure>

        
    </li>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/poe-stack-light/images/assemble/02_pcb_attached.jpg">
                    
                </a>
                
                <figcaption>
                    <small>PCB should be flush against the mounting posts.</small>
                </figcaption>
                
            </figure>

        
    </li>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/poe-stack-light/images/complete/00_plugged_in.jpg">
                    
                </a>
                
                <figcaption>
                    <small>RJ45 jack should be flush to the outer wall of the enclosure.</small>
                </figcaption>
                
            </figure>

        
    </li>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/poe-stack-light/images/assemble/01_prep.jpg">
                    
                </a>
                
                <figcaption>
                    <small>About to start melting threads into the 3D printed parts.</small>
                </figcaption>
                
            </figure>

        
    </li>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/poe-stack-light/images/slicer.png">
                    
                </a>
                
                <figcaption>
                    <small>Insert your magnets before the layer covering thee 6 cavities is printed.</small>
                </figcaption>
                
            </figure>

        
    </li>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/poe-stack-light/images/assemble/03_wire.jpg">
                    
                </a>
                
                <figcaption>
                    <small>I cut a few inches off the Ethernet cable and power leads so everything fits in the enclosure better.</small>
                </figcaption>
                
            </figure>

        
    </li>
    
</ul>

]]></description></item><item><title>Adding an airborne particulate mater sensor to WS3 Weather Station</title><link>https://karlquinsland.com/ws3-weather-station-pm25-sensor/</link><pubDate>Thu, 27 Aug 2020 00:00:00 +0000</pubDate><author>Author</author><guid>https://karlquinsland.com/ws3-weather-station-pm25-sensor/</guid><description><![CDATA[<p>A while back, I <a href="https://github.com/kquinsland/ws3-to-esphome-bridge/" target="_blank" rel="noopener noreffer">posted a small bit of code</a> that could decode the data from the ubiquitous WS3 Weather Station and make it accessible to the amazing <a href="https://www.home-assistant.io/" target="_blank" rel="noopener noreffer">HomeAssistant</a> via the wonderful <a href="https://esphome.io/" target="_blank" rel="noopener noreffer">ESPHome</a> project. Since then, my weather station has been dutifully collecting data that&rsquo;s been invaluable for augmenting automation that deals with indoor climate.</p>
<p>As the numerous wild fires in California rage on, <a href="https://www.forbes.com/sites/ericmack/2020/08/21/wildfire-smoke-blankets-the-west-as-california-records-worlds-worst-air-quality/" target="_blank" rel="noopener noreffer">the air quality has gone from bad to dangerous</a>. Knowing that outside was warmer, but less humid, was no longer enough to make a smart decision about weather or not to open the windows for some cost-effective cooling. I now need HomeAssistant to be aware of how clean the outside air was before making the decision to pipe in outdoor air.</p>
<p>This post covers two things:</p>
<ul>
<li>A small update to the existing WS3 -&gt; ESPHome -&gt; HomeAssistant bridge code to take advantage of the WS3s' support for the ubiquitous <code>PMS5003T</code> sensor.</li>
<li>A simple 3d-printable enclosure for deploying the particulate matter sensor outdoors</li>
</ul>
<p>When deployed, it looks like this:</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        Excuse the awkward camera angle; sensor is deployed in an awkward to photograph location.
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>Please ignore the awkward camera angle as the sensor is deployed in a location where there&rsquo;s not quite enough room for proper camera placement.</p>
<p>And results in graphs that look like this:</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        Smoke particles are between .4μm to .7μm in size... which explains the elevated red line relative to other particle sizes.
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>A simplified copy of this post appears on <a href="https://www.thingiverse.com/thing:4581351" target="_blank" rel="noopener noreffer">thingiverse</a> and <a href="https://www.prusaprinters.org/prints/39560-outdoor-enclosure-for-pms5003-particulate-matter-s" target="_blank" rel="noopener noreffer">prusaprinters</a>.</p>
<h2 id="the-enclosure">The enclosure</h2>
<p>As of writing, there&rsquo;s <a href="https://www.thingiverse.com/thing:4044492" target="_blank" rel="noopener noreffer">one existing enclosure</a> for the sensor on thingiverse. Unfortunately, the enclosure does not appear to have any design features for mounting to a pole nor does it have any bug-proofing design elements. I took this opportunity to design my own that could be easily mounted, features a slanted &lsquo;roof&rsquo; to prevent standing moisture ingress and could use standard size tobacco pipe filters to keep all but the tiniest of insects/particles out.</p>
<p>The sensor uses a small fan to draw ambient air past an infrared laser. As airborne particles cross the laser beam, they reflect a certain amount of light which can be correlated with the size of the particle. This data can then be turned into fairly accurate counts of how many particles of a given size are in the sampled air. The enclosure is a basic box with two circular air channels pointed downwards to prevent moisture ingress. The intake and exhaust ports are at staggered heights and pointed in opposite directions and to minimize the chance of recirculating the same air.</p>
<p>The lower port is the intake which connects to a few small holes on the front of the sensor and the exhaust port is the raised port which connects directly to the exhaust fan. If you could remove the first few mm from the front, it would look something like this:</p>
<figure >

    
        
    

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>From the side, you can see the two air channels and the few mm of room in the back for wiring. The sensor sits on a &lsquo;pedestal&rsquo; to keep it elevated away from any moisture that may collect on the bottom of the enclosure.</p>
<p>The base plate/pedestal are secured to the &lsquo;body&rsquo; with two M3 screws. I used <code>10mm</code> as that&rsquo;s what I had on hand, but screws between 6-12mm should work as well. The holes are sized for a M3, but any similar sized screw will work. Use a lighter or similar to heat the screw as you drive it into the plastic to create your own threads if using a larger/longer screw.</p>
<p>Besides the &lsquo;pedestal&rsquo; there are a few contact surfaces that hold on to the sensor with a friction fit. The &lsquo;ceiling&rsquo; is a few mm thick and shouldn&rsquo;t permit much moisture ingress but an optional slanted roof component can be printed as an extra precaution.</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        Upper and lower chambers for exhaust and intake.
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>While designing the enclosure, I used this <a href="https://grabcad.com/library/pms5003-2" target="_blank" rel="noopener noreffer"><code>PMS5003</code> model</a> from Leclercq Gregory. 🙏</p>
<h3 id="printing">Printing</h3>
<p>This is a functional part with only three small surfaces that require reasonably tight precision to properly hold onto the sensor. The <code>SPEED</code> setting with a <code>.2mm</code> layer height and a reasonable 20% infill gave me part that works and feels water tight. The walls and ceiling need to keep water out so dipping below 15% infill or otherwise using settings that wont give solid layer adhesion is not advised. I printed using ABS for durability, but PLA will probably work if you can deploy into a shaded environment.</p>
<p>The shroud and the base are not optional, the triangle shaped block is intended to turn the flat roof of the shroud into a slanted roof so water can&rsquo;t collect. It is optional but shown below.</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        No raft/support when printed in this orientation.
        
            
        
        </p> 
    </figcaption>
    
</figure>


<h2 id="assemble">Assemble</h2>
<p>Briefly:</p>
<ul>
<li>collect materials</li>
<li>press-fit the PM2.5 sensor into the enclosure</li>
<li>make a wire that can interface the PM2.5 sensor to the WS3 board via RJ11</li>
<li>seal everything up</li>
<li>glue on mesh screens and angled roof</li>
<li>plug into WS3</li>
<li>flash ESPHome onto</li>
</ul>
<h3 id="bill-of-materials">Bill of Materials</h3>
<p>More or less everything that is needed for assembly is pictured below.</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        More or less everything needed to assemble.
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>Components:</p>
<ul>
<li>
<p><a href="https://www.aliexpress.com/item/32921725022.html" target="_blank" rel="noopener noreffer">WS3 Weather Station</a> - Essential / Foundational</p>
</li>
<li>
<p><a href="https://rover.ebay.com/rover/1/711-53200-19255-0/1?mpre=https%3A%2F%2Fwww.ebay.com%2Fitm%2FDigital-Universal-Particle-Concentration-Laser-Sensor-PMS5003-PM1-0-PM2-5-PM10%2F254616699639&amp;campid=5338734064&amp;toolid=10001&amp;customid=" target="_blank" rel="noopener noreffer">ST5003T PM2.5 Sensor</a> - Essential / Foundational</p>
</li>
<li>
<p><a href="https://rover.ebay.com/rover/1/711-53200-19255-0/1?mpre=https%3A%2F%2Fwww.ebay.com%2Fitm%2FTTGO-Wemos-MINI-D1-ESP32-WiFi-Bluetooth-Wemos-D1-Mini-ESP8266-ESP-32-Module%2F183413480551&amp;campid=5338734064&amp;toolid=10001&amp;customid=" target="_blank" rel="noopener noreffer">ESP32 Device</a> - A link to the ESP32 based device that I use but any ESP platform with a spare GPIO that can be used as a UART will work.</p>
</li>
<li>
<p><a href="https://rover.ebay.com/rover/1/711-53200-19255-0/1?mpre=https%3A%2F%2Fwww.ebay.com%2Fitm%2F25-Stainless-Steel-Smoking-Pipe-Screens-3-4-19mm-Tobacco-HOOKAH-FILTER-Heavy%2F183969079809&amp;campid=5338734064&amp;toolid=10001&amp;customid=" target="_blank" rel="noopener noreffer">3/4 inch tobacco pipe screens</a> - For bug/critter proofing the enclosure. Strongly suggested for outdoor deployments.</p>
</li>
<li>
<p><a href="https://www.mcmaster.com/91292A113/" target="_blank" rel="noopener noreffer">2x M3 x 10mm screws</a> - Optional. The base can be glued to the shroud or any similar screw will work</p>
</li>
</ul>
<p><strong>Note</strong>: Where possible, I&rsquo;ve used referral links. The links don&rsquo;t raise the price of any item, they simply let the retailer know that I sent you and, in return, I get a small cut of your purchase. If you&rsquo;re not comfortable with that, you can use a URL unwinding service to get the &lsquo;raw&rsquo; product link and drop the attribution/commission part.</p>
<p>General bits:</p>
<ul>
<li>Superglue</li>
<li>Waterproofing caulk/sealant</li>
<li>Drill/Screwdriver</li>
<li>Driver bit for the screws</li>
</ul>
<p>The stepped drill bit in the above picture is not a requirement if you assemble things in the correct oder. The cable egress hole is sized for a &lsquo;typical&rsquo; 3 pair <a href="https://en.wikipedia.org/wiki/Registered_jack#RJ11,_RJ14,_RJ25_wiring" target="_blank" rel="noopener noreffer">RJ11 cable</a> plus a tiny bit of wiggle room. I needed a working cable to test the code while the parts were printing so the hole in the printed base needed to be enlarged slightly to fit the head of the cable.</p>
<h3 id="wiring">Wiring</h3>
<p>There&rsquo;s no ready-made cable out there that&rsquo;ll join the two devices so one must be made. Fortunately, there&rsquo;s only 6 wires to deal with&hellip; 4 of them are distinct.</p>
<p>Sacrifice the cable that comes with the PM2.5 sensor and the RJ11 cable by cutting them in half and solder the correct wires together. The <em>color</em> of the wires that come in both the RJ11 cable and the PM2.5 cable are likely going to differ from the ones I used so I&rsquo;ve left those details out and provided a table showing which pins are to be joined together:</p>
<table>
<thead>
<tr>
<th>Pin #</th>
<th>PM2.5 Sensor Pin</th>
<th>WS3 Pin</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>VCC</td>
<td>5V</td>
</tr>
<tr>
<td>2</td>
<td>GND</td>
<td>GND</td>
</tr>
<tr>
<td>3</td>
<td>SET</td>
<td>ENABLE</td>
</tr>
<tr>
<td>4</td>
<td>RX</td>
<td>RX</td>
</tr>
<tr>
<td>5</td>
<td>TX</td>
<td>GND</td>
</tr>
<tr>
<td>6</td>
<td>RESET</td>
<td>5V</td>
</tr>
<tr>
<td>7</td>
<td>NC</td>
<td></td>
</tr>
<tr>
<td>8</td>
<td>NC</td>
<td></td>
</tr>
</tbody>
</table>
<p>For reference, Pin 1 on both the WS3 and PM2.5 Sensor:</p>
<figure >

    
        
    

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<figure >

    
        
    

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>With the wiring done, the sensor just needs to be stuffed into the enclosure. Don&rsquo;t forget to thread the RJ11 cable through the hole in the base plate <em>BEFORE</em> soldering it to the cable for the PM2.5 sensor&hellip; otherwise you&rsquo;ll need that stepped drill bit! 🙃</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        Sensor has been press-fit into the enclosure and wire fed through the base plate.
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>To finish, secure the base with screws and a bit of water-proofing caulk for good measure:</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        I suggest waiting until the end to glue on the optional roof and waiting until just before that to glue on the optional mesh screens.
        
            
        
        </p> 
    </figcaption>
    
</figure>


<h2 id="the-code">The code</h2>
<p>Setting up and using ESPHome is outside the scope of this post but there are several <a href="https://esphome.io/guides/getting_started_hassio.html" target="_blank" rel="noopener noreffer">good guides</a> out there. Once you have that set up, <a href="https://esphome.io/custom/custom_component.html" target="_blank" rel="noopener noreffer">include</a> the <code>ws3.h</code> file and set up your custom sensor as shown below. A working example and more detail is over on the
<a href="https://github.com/kquinsland/ws3-to-esphome-bridge/" target="_blank" rel="noopener noreffer">github repo</a>.</p>
<p>It&rsquo;ll look like this:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="nt">uart</span><span class="p">:</span><span class="w">
</span><span class="w">  </span><span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="l">uart_bus</span><span class="w">
</span><span class="w">  </span><span class="c"># At this time, ESP does not Transmit anything to the WS3</span><span class="w">
</span><span class="w">  </span><span class="nt">tx_pin</span><span class="p">:</span><span class="w"> </span><span class="l">GPIO16</span><span class="w">
</span><span class="w">  </span><span class="nt">rx_pin</span><span class="p">:</span><span class="w"> </span><span class="l">GPIO17</span><span class="w">
</span><span class="w">  </span><span class="nt">baud_rate</span><span class="p">:</span><span class="w"> </span><span class="m">2400</span><span class="w">
</span><span class="w">
</span><span class="w"></span><span class="nt">sensor</span><span class="p">:</span><span class="w">
</span><span class="w">  </span>- <span class="nt">platform</span><span class="p">:</span><span class="w"> </span><span class="l">custom</span><span class="w">
</span><span class="w">    </span><span class="nt">lambda</span><span class="p">:</span><span class="w"> </span><span class="p">|-</span><span class="sd">
</span><span class="sd">      auto ws3 = new WS3(id(uart_bus));
</span><span class="sd">      App.register_component(ws3);
</span><span class="sd">      return {
</span><span class="sd">        ws3-&gt;temperature_sensor, 
</span><span class="sd">        ws3-&gt;pressure_sensor, 
</span><span class="sd">        ws3-&gt;humidity_sensor, 
</span><span class="sd">        ws3-&gt;wind_speed_current_sensor,
</span><span class="sd">        ws3-&gt;wind_speed_peak_5m_sensor,
</span><span class="sd">        ws3-&gt;wind_direction_sensor,
</span><span class="sd">        ws3-&gt;rain_fall_1h_sensor, 
</span><span class="sd">        ws3-&gt;rain_fall_24h_sensor,
</span><span class="sd">
</span><span class="sd">        ws3-&gt;particles_03um,
</span><span class="sd">        ws3-&gt;particles_05um,
</span><span class="sd">        ws3-&gt;particles_10um,
</span><span class="sd">        ws3-&gt;particles_25um,
</span><span class="sd">        ws3-&gt;particles_50um,
</span><span class="sd">        ws3-&gt;particles_100um,
</span><span class="sd">      };</span><span class="w">      
</span></code></pre></td></tr></table>
</div>
</div><p>With that, check the logs from your instance of ESPHome and you should see something like this:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[D][ws3:157]: pkt_read_ok!
[D][WS3:410]: VALID! Packet: [c000s000g000t093r000p000h35b09880,050,080,088,502,056,065,*18
], Checksum: [18] chksum: [18]
[E][WS3:342]: Validating: [c000s000g000t093r000p000h35b09880,050,080,088,502,056,065]
</code></pre></td></tr></table>
</div>
</div><p>indicating that the WS3 has detected the PM2.5 sensor and is reporting it&rsquo;s readings in addition to the temperature/wind data. Then just check your HomeAssistant install for the data.</p>
<h2 id="files">Files</h2>
<p>For archive / posterity, all source files are included here. All files are licensed as <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank" rel="noopener noreffer">Creative Commons Attribution-NonCommercial-ShareAlike</a> (CC BY-NC-SA).</p>
<ul>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/ws3-weather-station-pm25-sensor/images/02.assemble.jpg">
                    
                </a>
                
                <figcaption>
                    <small>Sensor has been press-fit into the enclosure and wire fed through the base plate.</small>
                </figcaption>
                
            </figure>

        
    </li>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/ws3-weather-station-pm25-sensor/images/03.glue.jpg">
                    
                </a>
                
                <figcaption>
                    <small>I suggest waiting until the end to glue on the optional roof and waiting until just before that to glue on the optional mesh screens.</small>
                </figcaption>
                
            </figure>

        
    </li>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/ws3-weather-station-pm25-sensor/images/example_dashboard.jpg">
                    
                </a>
                
                <figcaption>
                    <small>Smoke particles are between .4μm to .7μm in size... which explains the elevated red line relative to other particle sizes.</small>
                </figcaption>
                
            </figure>

        
    </li>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/ws3-weather-station-pm25-sensor/images/04.installed.jpg">
                    
                </a>
                
                <figcaption>
                    <small>Excuse the awkward camera angle; sensor is deployed in an awkward to photograph location.</small>
                </figcaption>
                
            </figure>

        
    </li>
    
    <li>
        
            <a target="_blank" href="https://karlquinsland.com/ws3-weather-station-pm25-sensor/models/BASE.step">
                <i class="far fa-file-code"></i>
                models/BASE.step:
                
                <small style="font-family:'Lucida Console', monospace">step</small> <small>file</small>
                
                
            </a>
        
    </li>
    
    <li>
        
            <a target="_blank" href="https://karlquinsland.com/ws3-weather-station-pm25-sensor/models/BODY.step">
                <i class="far fa-file-code"></i>
                models/BODY.step:
                
                <small style="font-family:'Lucida Console', monospace">step</small> <small>file</small>
                
                
            </a>
        
    </li>
    
    <li>
        
            <a target="_blank" href="https://karlquinsland.com/ws3-weather-station-pm25-sensor/models/LID.step">
                <i class="far fa-file-code"></i>
                models/LID.step:
                
                <small style="font-family:'Lucida Console', monospace">step</small> <small>file</small>
                
                
            </a>
        
    </li>
    
    <li>
        
            <a target="_blank" href="https://karlquinsland.com/ws3-weather-station-pm25-sensor/models/base.stl">
                <i class="far fa-file-code"></i>
                models/base.stl:
                
                <small style="font-family:'Lucida Console', monospace">stl</small> <small>file</small>
                
                
            </a>
        
    </li>
    
    <li>
        
            <a target="_blank" href="https://karlquinsland.com/ws3-weather-station-pm25-sensor/models/body.stl">
                <i class="far fa-file-code"></i>
                models/body.stl:
                
                <small style="font-family:'Lucida Console', monospace">stl</small> <small>file</small>
                
                
            </a>
        
    </li>
    
    <li>
        
            <a target="_blank" href="https://karlquinsland.com/ws3-weather-station-pm25-sensor/models/combined.3mf">
                <i class="far fa-file-archive"></i>
                models/combined.3mf:
                
                <small style="font-family:'Lucida Console', monospace">3mf</small> <small>file</small>
                
                
            </a>
        
    </li>
    
    <li>
        
            <a target="_blank" href="https://karlquinsland.com/ws3-weather-station-pm25-sensor/models/lid.stl">
                <i class="far fa-file-code"></i>
                models/lid.stl:
                
                <small style="font-family:'Lucida Console', monospace">stl</small> <small>file</small>
                
                
            </a>
        
    </li>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/ws3-weather-station-pm25-sensor/images/pin_out/PM2.5_Pins.jpg">
                    
                </a>
                
                
            </figure>

        
    </li>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/ws3-weather-station-pm25-sensor/images/pin_out/WS3_Pins.jpg">
                    
                </a>
                
                
            </figure>

        
    </li>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/ws3-weather-station-pm25-sensor/images/01.collect.jpg">
                    
                </a>
                
                <figcaption>
                    <small>More or less everything needed to assemble.</small>
                </figcaption>
                
            </figure>

        
    </li>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/ws3-weather-station-pm25-sensor/images/suggested_print_orientation.jpg">
                    
                </a>
                
                <figcaption>
                    <small>No raft/support when printed in this orientation.</small>
                </figcaption>
                
            </figure>

        
    </li>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/ws3-weather-station-pm25-sensor/images/f360_air_channels.jpg">
                    
                </a>
                
                
            </figure>

        
    </li>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/ws3-weather-station-pm25-sensor/images/f360_side_profile.jpg">
                    
                </a>
                
                <figcaption>
                    <small>Upper and lower chambers for exhaust and intake.</small>
                </figcaption>
                
            </figure>

        
    </li>
    
</ul>

]]></description></item></channel></rss>