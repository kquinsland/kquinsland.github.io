<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Zwave - Tag - karl</title><link>https://karlquinsland.com/tags/zwave/</link><description>Zwave - Tag - karl</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 12 May 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://karlquinsland.com/tags/zwave/" rel="self" type="application/rss+xml"/><item><title>Configuring additional ZwaveJS entities in Home Assistant over MQTT</title><link>https://karlquinsland.com/zwavejs-autodiscovery-additional-entities/</link><pubDate>Thu, 12 May 2022 00:00:00 +0000</pubDate><author>Author</author><guid>https://karlquinsland.com/zwavejs-autodiscovery-additional-entities/</guid><description><![CDATA[<p>This is a super quick &ldquo;because the official docs didn&rsquo;t make it super clear so here&rsquo;s what ended up working for me&rdquo; post.</p>
<hr>
<!-- markdownlint-disable-file MD033 -->
<p>After some <a href="/venstar-t7850-teardown-review/#an-update-on-wifi-connectivity" rel="">very disappointing WiFi connectivity issues</a>, I settled on a Zwave based thermostat to replace the Venstar thermostat.</p>
<p>After installing the Honeywell TH6320 and connecting it to the ZwaveJS gateway, a new `climate`` entity appeared in Home Assistant. From there, I was able to see/control:</p>
<ul>
<li>The current thermostat setpoint/mode</li>
<li>The current air temp and humidity</li>
<li>The current battery level / if the thermostat thought the battery was low</li>
</ul>
<p>I knew that it was possible to adjust the the screen backlight from the thermostat itself so I was a bit confused when there was no such configuration entity exposed in Home Assistant.</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Note the `Idle_brightness` sensor. That&#39;s not part of the &#39;default&#39; zwavejs2mqtt install.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<p>After playing around with the ZwaveJS2MQTT web interface for bit, I discovered that it was possible to adjust the backlight brightness&hellip;and over 40 other settings under the <code>Configuration v4</code> section.</p>
<p>I can totally understand why only the &ldquo;core&rdquo; functionality would be automatically exposed to Home Assistant; most of the 40+ knobs are things that do not need to be set beyond the initial installation.</p>
<p>So, How do I go about getting ZwaveJS2MQTT to automatically tell Home Assistant about the current backlight level?</p>
<h2 id="exposing-idle-brightness-to-home-assistant-as-a-sensor">Exposing &lsquo;idle brightness&rsquo; to Home Assistant as a Sensor</h2>
<p>From the <code>Configuration v4</code> tab for the thermostat node, I found the input field <code>[4-112-0-39] Idle Brightness</code> which let me control the thermostat screen backlight level.
I don&rsquo;t know what the numbers mean, but they are important / uniquely identify <em>a specific setting</em>.</p>
<div class="details admonition note open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-pencil-alt fa-fw"></i>Note<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">If you are using this as a guide but for a <em>different</em> setting (perhaps you want to keep an eye on <code>[4-112-0-28] Minimum Cool Temperature</code>, for example) then you will want to substitute your parameter setting &lsquo;address&rsquo; as appropriate.</div>
        </div>
    </div>
<p>After some more experimentation and trying to grok <a href="https://zwave-js.github.io/zwavejs2mqtt/#/homeassistant/homeassistant-mqtt?id=add-new-component" target="_blank" rel="noopener noreffer">documentation</a>, I figured out how to get ZwaveJS to advertise the current value for the backlight brightness as a sensor in Home Assistant.</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            The &#39;HOME ASSISTANT&#39; tab of my thermostats&#39; page.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<p>Here&rsquo;s how to do it:</p>
<ul>
<li>Select the <code>node</code> in question from the <code>Control Panel</code> page on the ZwaveJS2MQTT web UI. In this case, you can see that my thermostat is node <code>4</code>. Yours will likely be different.</li>
<li>Select the <code>Home Assistant</code> tab from the left. You can see it selected in the above screenshot.</li>
<li>In the blank <code>Hass Device JSON</code> box, paste the JSON document that describes the sensor / entity you wish to expose to Home Assistant. I struggled for some time trying to figure out what the document should look like but was able to &lsquo;reverse engineer&rsquo; a working payload by studying the <code>sensor_humidity_air</code> entity that was automatically created.</li>
<li>Then click the <code>ADD</code> button that should have activated just above the <code>Hass Device JSON</code>. A new row should appear in the <code>Home Assistant - Devices table</code></li>
<li>Click the newly added row so the <code>Hass Device JSON</code> field is populated with the JSON document you have added.</li>
<li>Click the <code>UPDATE</code> button that should appear just above the <code>Hass Device JSON</code> label</li>
<li>Assuming no issues, this will send the MQTT message which tells Home Assistant about your new sensor. You may wish to use a MQTT broker inspection app to monitor the exact payload that is sent to the <code>homeassistant/...</code> topic as well as <code>tail -f home-assistant.log</code>. If Home Assistant gets the message, any validation errors will show up in the HA log.</li>
<li>Once you are satisfied with how the entity is presented in Home Assistant, click the <code>STORE</code> button just below the <code>Home Assistant - Devices</code> heading on the ZwaveJS2MQTT web UI.</li>
</ul>
<p>When all is said and done, this is what you should see:</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<h3 id="example-payload">Example payload</h3>
<p>Here is a (slightly edited) version of the JSON document I added via the <code>Hass Device JSON</code> entry.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;type&#34;</span><span class="p">:</span> <span class="s2">&#34;sensor&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;object_id&#34;</span><span class="p">:</span> <span class="s2">&#34;idle_brightness&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;discovery_payload&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;value_template&#34;</span><span class="p">:</span> <span class="s2">&#34;{{ value_json.value }}&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;state_topic&#34;</span><span class="p">:</span> <span class="s2">&#34;zwave/YourThermostat_NameHere/112/0/39&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;json_attributes_topic&#34;</span><span class="p">:</span> <span class="s2">&#34;zwave/YourThermostat_NameHere/112/0/39&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;device&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;identifiers&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;zwavejs2mqtt_0xdeadbeef_node4&#34;</span>
</span></span><span class="line"><span class="cl">      <span class="p">],</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;manufacturer&#34;</span><span class="p">:</span> <span class="s2">&#34;Honeywell&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;model&#34;</span><span class="p">:</span> <span class="s2">&#34;T6 Pro Z-Wave Programmable Thermostat (TH6320ZW)&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;YourThermostat NameHere&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;sw_version&#34;</span><span class="p">:</span> <span class="s2">&#34;1.3&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">},</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;YourThermostat NameHere idle_brightness&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;unique_id&#34;</span><span class="p">:</span> <span class="s2">&#34;zwavejs2mqtt_0xdeadbeef_4-112-0-Idle_Brightness&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;entity_category&#34;</span><span class="p">:</span> <span class="s2">&#34;config&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="nt">&#34;icon&#34;</span><span class="p">:</span> <span class="s2">&#34;mdi:brightness-percent&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="p">},</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;discoveryTopic&#34;</span><span class="p">:</span> <span class="s2">&#34;sensor/YourThermostat_NameHere/idle_brightness/config&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;values&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;112-0-39&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="p">],</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;persistent&#34;</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;ignoreDiscovery&#34;</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;id&#34;</span><span class="p">:</span> <span class="s2">&#34;sensor_idle_brightness&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>I have replaced a few things in the example payload. You will want to retrieve the correct values for your payload from one of the automatically generated payloads. I used the <code>sensor_humidity_air</code> device as a starting point for my payload.</p>
<h2 id="ok-but-what-about-writing-to-the-thermostat">Ok, but what about writing to the thermostat?</h2>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            A basic &#39;helper&#39; widget for use in Home Assistant Automations.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<p>Once the sensor exists in Home Assistant, you will probably want to use it in an automation.
Here is a simple automation that watches a basic number input widget and sets the backlight brightness for the thermostat based on what the widget is set to:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">alias</span><span class="p">:</span><span class="w"> </span><span class="l">Sync thermostat brightness to input select</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="l">An Example automation.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">trigger</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">platform</span><span class="p">:</span><span class="w"> </span><span class="l">state</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">entity_id</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">sensor.yourthermostat_namehere_idle_brightness</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="l">physical</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">platform</span><span class="p">:</span><span class="w"> </span><span class="l">state</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">entity_id</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">input_number.thermostat_backlight</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="l">virtual</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">condition</span><span class="p">:</span><span class="w"> </span><span class="p">[]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">action</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">choose</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">conditions</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="nt">condition</span><span class="p">:</span><span class="w"> </span><span class="l">trigger</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="l">virtual</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">sequence</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="nt">service</span><span class="p">:</span><span class="w"> </span><span class="l">mqtt.publish</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">data</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">topic</span><span class="p">:</span><span class="w"> </span><span class="l">zwave/YourThermostat_NameHere/112/0/39/set</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">payload_template</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;{{trigger.to_state.state}}&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="nt">conditions</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="nt">condition</span><span class="p">:</span><span class="w"> </span><span class="l">trigger</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="l">physical</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">sequence</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">          </span>- <span class="nt">service</span><span class="p">:</span><span class="w"> </span><span class="l">input_number.set_value</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">target</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">entity_id</span><span class="p">:</span><span class="w"> </span><span class="l">input_number.thermostat_backlight</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">data_template</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">              </span><span class="nt">value</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;{{trigger.to_state.state | float}}&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">default</span><span class="p">:</span><span class="w"> </span><span class="p">[]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">mode</span><span class="p">:</span><span class="w"> </span><span class="l">single</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">max_exceeded</span><span class="p">:</span><span class="w"> </span><span class="l">silent</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>This <em>works</em> but it&rsquo;s not <em>automagic</em>. We can do better!</p>
<h2 id="more-automagic-more-better">More Automagic, More Better</h2>
<p>The primary downside with the above automation is that the user (read: you) needs to create the <code>input_number</code> widget and then spend the time telling Home Assistant what to do when the value changes.</p>
<p>This isn&rsquo;t a particularly difficult task - only ~30 lines of yaml&hellip; but what if we didn&rsquo;t have to do that?</p>
<p>What if Home Assistant had a robust auto discovery mechanism that we could take advantage of to <em>automagically</em> set up a basic input widget that would transmit the necessary MQTT payload to adjust the backlight &hellip; automatically?</p>
<p>I have good news and bad news.</p>
<p>The good news is that we totally can do this. 🎉</p>
<p>The bad news is that ZwaveJS2MQTT does not appear to support the <a href="https://www.home-assistant.io/integrations/input_select/" target="_blank" rel="noopener noreffer"><code>input_select</code></a> type of entity that we&rsquo;ll need to pull this off. 👎</p>
<p>I am not super familiar with the ZwaveJS2MQTT code base, but it looks like there is no validation on the JSON you enter under the <code>Hass Device JSON</code> field but there <em>is</em> some validation / filtering on the MQTT message that is sent for auto discovery. <a href="https://github.com/zwave-js/zwavejs2mqtt/blob/master/hass/configurations.ts#L6" target="_blank" rel="noopener noreffer">ZwaveJS2MQTT does not seem to support <code>select</code> components via MQTT</a> so the payload that is sent to Home Assistant is incomplete and results in errors:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">│ ERROR <span class="o">(</span>MainThread<span class="o">)</span> <span class="o">[</span>homeassistant.util.logging<span class="o">]</span> Exception in discovery_callback when dispatching <span class="s1">&#39;mqtt_discovery_updated_(&#39;</span><span class="k">select</span><span class="s1">&#39;, &#39;</span>YourThermostat NameHere idle_brightness │
</span></span><span class="line"><span class="cl">│ Traceback <span class="o">(</span>most recent call last<span class="o">)</span>:
</span></span><span class="line"><span class="cl">│   File <span class="s2">&#34;/usr/src/homeassistant/homeassistant/components/mqtt/mixins.py&#34;</span>, line 724, in discovery_callback      
</span></span><span class="line"><span class="cl">│     await self._discovery_update<span class="o">(</span>payload<span class="o">)</span>    
</span></span><span class="line"><span class="cl">│   File <span class="s2">&#34;/usr/src/homeassistant/homeassistant/components/mqtt/mixins.py&#34;</span>, line 886, in discovery_update        
</span></span><span class="line"><span class="cl">│     <span class="nv">config</span> <span class="o">=</span> self.config_schema<span class="o">()(</span>discovery_payload<span class="o">)</span>                                                          
</span></span><span class="line"><span class="cl">│   File <span class="s2">&#34;/usr/local/lib/python3.9/site-packages/voluptuous/validators.py&#34;</span>, line 232, in __call__               
</span></span><span class="line"><span class="cl">│     <span class="k">return</span> self._exec<span class="o">((</span>Schema<span class="o">(</span>val<span class="o">)</span> <span class="k">for</span> val in self.validators<span class="o">)</span>, v<span class="o">)</span>                                            
</span></span><span class="line"><span class="cl">│   File <span class="s2">&#34;/usr/local/lib/python3.9/site-packages/voluptuous/validators.py&#34;</span>, line 355, in _exec                  
</span></span><span class="line"><span class="cl">│     raise e <span class="k">if</span> self.msg is None <span class="k">else</span> AllInvalid<span class="o">(</span>self.msg, <span class="nv">path</span><span class="o">=</span>path<span class="o">)</span>                                          
</span></span><span class="line"><span class="cl">│   File <span class="s2">&#34;/usr/local/lib/python3.9/site-packages/voluptuous/validators.py&#34;</span>, line 351, in _exec                  
</span></span><span class="line"><span class="cl">│     <span class="nv">v</span> <span class="o">=</span> func<span class="o">(</span>v<span class="o">)</span>                              
</span></span><span class="line"><span class="cl">│   File <span class="s2">&#34;/usr/local/lib/python3.9/site-packages/voluptuous/schema_builder.py&#34;</span>, line 272, in __call__           
</span></span><span class="line"><span class="cl">│     <span class="k">return</span> self._compiled<span class="o">([]</span>, data<span class="o">)</span>          
</span></span><span class="line"><span class="cl">│   File <span class="s2">&#34;/usr/local/lib/python3.9/site-packages/voluptuous/schema_builder.py&#34;</span>, line 818, in validate_callable  
</span></span><span class="line"><span class="cl">│     <span class="k">return</span> schema<span class="o">(</span>data<span class="o">)</span>                      
</span></span><span class="line"><span class="cl">│   File <span class="s2">&#34;/usr/local/lib/python3.9/site-packages/voluptuous/schema_builder.py&#34;</span>, line 272, in __call__           
</span></span><span class="line"><span class="cl">│     <span class="k">return</span> self._compiled<span class="o">([]</span>, data<span class="o">)</span>          
</span></span><span class="line"><span class="cl">│   File <span class="s2">&#34;/usr/local/lib/python3.9/site-packages/voluptuous/schema_builder.py&#34;</span>, line 595, in validate_dict      
</span></span><span class="line"><span class="cl">│     <span class="k">return</span> base_validate<span class="o">(</span>path, iteritems<span class="o">(</span>data<span class="o">)</span>, out<span class="o">)</span>                                                          
</span></span><span class="line"><span class="cl">│   File <span class="s2">&#34;/usr/local/lib/python3.9/site-packages/voluptuous/schema_builder.py&#34;</span>, line 433, in validate_mapping   
</span></span><span class="line"><span class="cl">│     raise er.MultipleInvalid<span class="o">(</span>errors<span class="o">)</span>         
</span></span><span class="line"><span class="cl">│ voluptuous.error.MultipleInvalid: required key not provided @ data<span class="o">[</span><span class="s1">&#39;options&#39;</span><span class="o">]</span>   
</span></span></code></pre></td></tr></table>
</div>
</div><p>While it would be nice if ZwaveJS2MQTT would support more device types, we have a pretty simple fix: use another device to publish a valid configuration payload.</p>
<p>And as it turns out, it&rsquo;s <em>trivial</em> to get Home Assistant to publish an arbitrary payload to an arbitrary topic when it starts up.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">alias</span><span class="p">:</span><span class="w"> </span><span class="l">Autoconfigure Thermostat Backlight select</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="p">&gt;-</span><span class="sd">
</span></span></span><span class="line"><span class="cl"><span class="sd">  On HA start up, publish MQTT payload so HA auto-discovers the input_select to
</span></span></span><span class="line"><span class="cl"><span class="sd">  automate thermostat backlight brightness</span><span class="w">  
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">trigger</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">platform</span><span class="p">:</span><span class="w"> </span><span class="l">homeassistant</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">event</span><span class="p">:</span><span class="w"> </span><span class="l">start</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">condition</span><span class="p">:</span><span class="w"> </span><span class="p">[]</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">action</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">service</span><span class="p">:</span><span class="w"> </span><span class="l">mqtt.publish</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">data</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">topic</span><span class="p">:</span><span class="w"> </span><span class="l">homeassistant/select/YourThermostat_NameHere/idle_brightness/config</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">payload</span><span class="p">:</span><span class="w"> </span><span class="p">&gt;-</span><span class="sd">
</span></span></span><span class="line"><span class="cl"><span class="sd">        {&#34;options&#34;:[&#34;0&#34;,&#34;1&#34;,&#34;2&#34;,&#34;3&#34;,&#34;4&#34;,&#34;5&#34;],&#34;name&#34;:&#34;MainThermostat idle_brightness&#34;,&#34;state_topic&#34;:&#34;zwave/YourThermostat_NameHere/112/0/39&#34;,&#34;value_template&#34;:&#34;{{&#39;{{value_json.value}}&#39;}}&#34;,&#34;command_topic&#34;:&#34;zwave/YourThermostat_NameHere/112/0/39/set&#34;,&#34;command_template&#34;:&#34;{{&#39;{{value}}&#39;}}&#34;,&#34;unique_id&#34;:&#34;zwavejs2mqtt_0xdeadbeef_4-112-0-Idle_Brightness_Select&#34;,&#34;device&#34;:{&#34;identifiers&#34;:[&#34;zwavejs2mqtt_0xdeadbeef_node4&#34;],&#34;manufacturer&#34;:&#34;Honeywell&#34;,&#34;model&#34;:&#34;T6ProZ-WaveProgrammableThermostat(TH6320ZW)&#34;,&#34;name&#34;:&#34;MainThermostat&#34;,&#34;sw_version&#34;:&#34;1.3&#34;},&#34;entity_category&#34;:&#34;config&#34;,&#34;icon&#34;:&#34;mdi:brightness-percent&#34;}</span><span class="w">        
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">mode</span><span class="p">:</span><span class="w"> </span><span class="l">single</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><div class="details admonition important open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-pencil-alt fa-fw"></i>Notice<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><p>If you look carefully, you will notice two things:</p>
<ul>
<li>The json payload has been escaped and turned into a string</li>
<li>The templates inside the string are <a href="https://community.home-assistant.io/t/how-can-i-use-escape-characters-while-templating/135324" target="_blank" rel="noopener noreffer"><em>further</em> escaped</a> by wrapping them in <code>{{ '</code> and <code>'}}</code>.</li>
</ul></div>
        </div>
    </div>
<p>Here is a pretty formatted JSON document:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">   <span class="nt">&#34;options&#34;</span><span class="p">:[</span>
</span></span><span class="line"><span class="cl">      <span class="s2">&#34;0&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="s2">&#34;1&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="s2">&#34;2&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="s2">&#34;3&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="s2">&#34;4&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="s2">&#34;5&#34;</span>
</span></span><span class="line"><span class="cl">   <span class="p">],</span>
</span></span><span class="line"><span class="cl">   <span class="nt">&#34;name&#34;</span><span class="p">:</span><span class="s2">&#34;YourThermostat NameHere idle_brightness&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">   <span class="nt">&#34;state_topic&#34;</span><span class="p">:</span><span class="s2">&#34;zwave/YourThermostat_NameHere/112/0/39&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">   <span class="nt">&#34;value_template&#34;</span><span class="p">:</span><span class="s2">&#34;{{ &#39;{{value_json.value}}&#39; }}&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">   <span class="nt">&#34;command_topic&#34;</span><span class="p">:</span><span class="s2">&#34;zwave/YourThermostat_NameHere/112/0/39/set&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">   <span class="nt">&#34;command_template&#34;</span><span class="p">:</span><span class="s2">&#34;{{ &#39;{{value}}&#39; }}&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">   <span class="nt">&#34;unique_id&#34;</span><span class="p">:</span><span class="s2">&#34;zwavejs2mqtt_0xdeadbeef_4-112-0-Idle_Brightness_Select&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">   <span class="nt">&#34;device&#34;</span><span class="p">:{</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;identifiers&#34;</span><span class="p">:[</span>
</span></span><span class="line"><span class="cl">         <span class="s2">&#34;zwavejs2mqtt_0xdeadbeef_node4&#34;</span>
</span></span><span class="line"><span class="cl">      <span class="p">],</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;manufacturer&#34;</span><span class="p">:</span><span class="s2">&#34;Honeywell&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;model&#34;</span><span class="p">:</span><span class="s2">&#34;T6 Pro Z-Wave Programmable Thermostat (TH6320ZW)&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;name&#34;</span><span class="p">:</span><span class="s2">&#34;YourThermostat NameHere&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="nt">&#34;sw_version&#34;</span><span class="p">:</span><span class="s2">&#34;1.3&#34;</span>
</span></span><span class="line"><span class="cl">   <span class="p">},</span>
</span></span><span class="line"><span class="cl">   <span class="nt">&#34;entity_category&#34;</span><span class="p">:</span><span class="s2">&#34;config&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">   <span class="nt">&#34;icon&#34;</span><span class="p">:</span><span class="s2">&#34;mdi:brightness-percent&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>Once the automation is created, save it. You can test your work by clicking &ldquo;run actions&rdquo; and monitoring the home assistant log file.</p>
<p>When the payload is properly escaped, you should see a new entity added to the Device page:</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Automatically created!
            
                
                
        </p> 
    </figcaption>
    
</figure>


<p>When you select a brightness value from the drop down, the backlight brightness should change.
That&rsquo;s how you get a &rsquo;non standard&rsquo; thermostat configuration value to automatically show up on the correct device page.</p>
<p>You now no longer need the example automation from <a href="#ok-but-what-about-writing-to-the-thermostat" rel="">above</a>. 😎.</p>
]]></description></item></channel></rss>