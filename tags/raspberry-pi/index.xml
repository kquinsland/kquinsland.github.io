<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Raspberry-Pi - Tag - karl</title><link>https://karlquinsland.com/tags/raspberry-pi/</link><description>Raspberry-Pi - Tag - karl</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 20 Nov 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://karlquinsland.com/tags/raspberry-pi/" rel="self" type="application/rss+xml"/><item><title>Hardware accelerated graphics on the raspberry pi4 for a speedier KDS</title><link>https://karlquinsland.com/hardware-accelerated-graphics-on-the-raspberry-pi-4-a-snappier-kds/</link><pubDate>Sat, 20 Nov 2021 00:00:00 +0000</pubDate><author>Author</author><guid>https://karlquinsland.com/hardware-accelerated-graphics-on-the-raspberry-pi-4-a-snappier-kds/</guid><description><![CDATA[<p>Surfacing the right information at the right time in the right place is a difficult but essential task for any credible automation system.</p>
<p>I have been experimenting with the concept of a Home Assistant powered <a href="https://www.qsrautomations.com/blog/kitchen-automation/what-is-a-kds/" target="_blank" rel="noopener noreffer">KDS</a> for a few years now and have found that the refrigerator happens to be an especially good place to surface some information and device controls.</p>
<br>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Yes, it&#39;s over-exposed and shot at an awkward angle but that&#39;s what it took to minimize glare!
            
                
                
        </p> 
    </figcaption>
    
</figure>


<br>
<p>This <strong>is not</strong> a post about how to build the KDS pictured above; you can follow any of the numerous &ldquo;how to use a raspberry pi as a kiosk&rdquo; guides out there and you&rsquo;d be 90% of the way there.
The last 10% is highly application specific; the hardware <em>you</em> design and 3d-print or otherwise fabricate will depend on your particular screen and selected mounting location.</p>
<p>This <strong>is</strong> a post about solving a performance issue with the dashboard hosted on the device.
Earlier versions of this KDS were powered by a raspberry pi 3 B (not even the <code>+</code> variant!) with 1 GB of ram.
The <a href="https://www.home-assistant.io/lovelace/" target="_blank" rel="noopener noreffer">Lovelace</a> dashboard that the KDS displays is quite javascript heavy and would frequently hang on the pi3b.</p>
<p>I use this dashboard to adjust grocery lists, control lights, set appliance timers and more. If the dashboard is sluggish or otherwise unresponsive, it&rsquo;s worse than useless!</p>
<p>As soon as I swapped in a raspberry pi 4 with 4 GB ram, things got &hellip;. marginally better ðŸ˜‘.</p>
<p>Sure, it booted much faster and the JS heavy graphs didn&rsquo;t cause the box to wedge anymore, but manipulating things on screen still was still a choppy experience.
Animations didn&rsquo;t show at all or had all but a few frames dropped :(.</p>
<p>I know that the <a href="https://medium.com/@ghalfacree/benchmarking-the-raspberry-pi-4-73e5afbcd54b" target="_blank" rel="noopener noreffer">raspberry pi 4 is more than capable</a> of running a single web page in a headless browser so <em>something</em> is wrong.</p>
<p>After a bit of digging, it turns out that chromium does NOT use hardware acceleration by default on the raspberry pi.</p>
<p>Ok, that&rsquo;s an easy fix. Just enable the gpu and reboot:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">pi@kds:~ $ cat /boot/config.txt
</span></span><span class="line"><span class="cl">&lt;...&gt;
</span></span><span class="line"><span class="cl"><span class="c1"># Enable DRM VC4 V3D driver for much more performant chrome</span>
</span></span><span class="line"><span class="cl"><span class="nv">dtoverlay</span><span class="o">=</span>vc4-kms-v3d
</span></span><span class="line"><span class="cl">&lt;...&gt;
</span></span><span class="line"><span class="cl">pi@kds:~ $ sudo reboot
</span></span></code></pre></td></tr></table>
</div>
</div><p>&hellip; right?</p>
<p><strong>No.</strong></p>
<p>Turning on the gpu acceleration broke the various screen rotation / resolution directives that I had configured in <code>/boot/config.txt</code>:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">pi@kds:~ $ cat /boot/config.txt
</span></span><span class="line"><span class="cl">&lt;...&gt;
</span></span><span class="line"><span class="cl"><span class="o">[</span>all<span class="o">]</span>
</span></span><span class="line"><span class="cl"><span class="c1"># We need to rotate the display 90degrees as the &#39;default&#39; orientation from the manufacturer assumes a horizontal orientation, not a vertical one</span>
</span></span><span class="line"><span class="cl"><span class="c1"># See: https://www.waveshare.com/wiki/13.3inch_HDMI_LCD_(H)</span>
</span></span><span class="line"><span class="cl"><span class="nv">display_rotate</span><span class="o">=</span><span class="m">1</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># Force correct resolution</span>
</span></span><span class="line"><span class="cl"><span class="c1"># Use &#39;DMT/Display Monitor Timings</span>
</span></span><span class="line"><span class="cl"><span class="c1"># See: https://www.raspberrypi.com/documentation/computers/config_txt.html#video-options</span>
</span></span><span class="line"><span class="cl"><span class="nv">hdmi_group</span><span class="o">=</span><span class="m">2</span>
</span></span><span class="line"><span class="cl"><span class="nv">hdmi_mode</span><span class="o">=</span><span class="m">82</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>One of the Raspberry Pi Engineers <a href="https://forums.raspberrypi.com/viewtopic.php?t=267954#p1626774" target="_blank" rel="noopener noreffer">explains why</a>:</p>
<blockquote>
<p>display_rotate only does anything if the firmware is in charge of the display, which isn&rsquo;t the case when using vc4-kms-v3d.</p>
</blockquote>
<p>Even when the video out could be configured with <code>config.txt</code>, the firmware offers no such mechanism to rotate input events to match the orientation.
Fortunately, the LCD manufacturer <a href="https://www.waveshare.com/wiki/13.3inch_HDMI_LCD_%28H%29#Rotation.28Working_with_Raspberry_Pi.29" target="_blank" rel="noopener noreffer">provides good documentation about how to configure the touch inputs with X11</a></p>
<p>Unfortunately, the manufacturer <em>does <strong>not</strong></em> provide corresponding documentation about how to configure the display with X11. Not that I can blame them! Configuring X11 has always been&hellip; tedious &hellip; to use a &lsquo;polite&rsquo; term for the experience!</p>
<h2 id="xorg-and-ssh">Xorg and SSH</h2>
<p>I&rsquo;ll spare you the bulk of the rant and summarize with this:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">Can&#39;t open display :0.0
</span></span></code></pre></td></tr></table>
</div>
</div><p>For reasons that don&rsquo;t make a ton of sense to me, <em>all</em> of the command line tools for probing display hardware and creating X11 configurations really don&rsquo;t like working over SSH ðŸ¤”. Yes, I of course tried the <code>export DISPLAY=:0.0</code> <a href="https://www.linuxquestions.org/questions/linux-general-1/xrandr-from-remote-through-ssh-869084/page2.html" target="_blank" rel="noopener noreffer">trick</a>.</p>
<p><code>xrandr</code> and friends are fine when running in a <em>local</em> shell, but just don&rsquo;t play nice when a local user connects via SSH.
This makes things a lot harder than they needed to be as the location of the KDS does not lend its self to easily hooking up a keyboard and mouse.</p>
<p>Furthermore, the <em>intended</em> purpose of this install is to display a web page. <strong>Thats it.</strong>
There is next to no desktop environment installed because one is not needed for a full screen headless chrome instance.</p>
<p>Installing a virtual console application was going to involve a lot of bloat and other unnecessary packages which is <em>overkill</em> for a few CLI utilities that <strong>should just work over any console weather that be local PTY or ssh!</strong></p>
<p>After a few hours of anguish and trial/error later, I had everything working as expected! But before we get there and while i&rsquo;m still ranting, <a href="https://unix.stackexchange.com/questions/435702/check-syntax-of-conf-file-in-etc-x11-xorg-conf-d" target="_blank" rel="noopener noreffer">why is there no <code>xorg -checkconf ...</code> command</a>?!</p>
<p>Ok. Now it&rsquo;s all out of my system.</p>
<p><code>&lt;/rant&gt;</code></p>
<h2 id="solution">Solution</h2>
<p>Every tap registers instantly and there&rsquo;s no jank or stutter in any animation. Likewise, graphs animate as quickly as they load&hellip; Perfect!</p>
<p>This is the X11 configuration that rotated the display and would &lsquo;see&rsquo; the display attached to the GPU:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">pi@kds:~ $ cat /etc/X11/xorg.conf.d/monitor.conf
</span></span><span class="line"><span class="cl"><span class="c1"># Device = GPU</span>
</span></span><span class="line"><span class="cl"><span class="c1"># When using rPi 4 with GPU instead of software render, the `modesetting` driver is the one to use... apparently.</span>
</span></span><span class="line"><span class="cl">Section <span class="s2">&#34;Device&#34;</span>
</span></span><span class="line"><span class="cl">        Identifier      <span class="s2">&#34;default&#34;</span>
</span></span><span class="line"><span class="cl">        Driver          <span class="s2">&#34;modesetting&#34;</span>
</span></span><span class="line"><span class="cl">EndSection
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Section <span class="s2">&#34;Monitor&#34;</span>
</span></span><span class="line"><span class="cl">        Identifier <span class="s2">&#34;default&#34;</span>
</span></span><span class="line"><span class="cl">        <span class="c1"># equivalent to `display_rotate = 1` in config.txt</span>
</span></span><span class="line"><span class="cl">        Option <span class="s2">&#34;Rotate&#34;</span> <span class="s2">&#34;right&#34;</span>
</span></span><span class="line"><span class="cl">EndSection
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Section <span class="s2">&#34;Screen&#34;</span>
</span></span><span class="line"><span class="cl">        Identifier <span class="s2">&#34;default&#34;</span>
</span></span><span class="line"><span class="cl">        Monitor <span class="s2">&#34;default&#34;</span>
</span></span><span class="line"><span class="cl">EndSection
</span></span></code></pre></td></tr></table>
</div>
</div><p>In addition to the X11 config, some ram needs to be allocated as dedicated graphics memory:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">pi@kds:~ $ cat /boot/config.txt <span class="p">|</span> grep -B2 gpu_mem
</span></span><span class="line"><span class="cl"><span class="o">[</span>all<span class="o">]</span>
</span></span><span class="line"><span class="cl"><span class="c1"># Allocate 256MB of ram for the GPU</span>
</span></span><span class="line"><span class="cl"><span class="nv">gpu_mem</span><span class="o">=</span><span class="m">256</span>
</span></span><span class="line"><span class="cl">pi@kds:~ $ sudo reboot
</span></span></code></pre></td></tr></table>
</div>
</div><p>Chrome did not automatically switch over to the GPU backed rendering pipe but it&rsquo;s easy enough to <a href="https://lemariva.com/blog/2020/08/raspberry-pi-4-video-acceleration-decode-chromium" target="_blank" rel="noopener noreffer">configure chrome to use the GPU</a> manually.</p>
<p>And with all that in place, a quick <code>sudo systemctl restart lightdm</code> and a brief screen flicker later, chromium launched in full screen mode with the correct orientation. After the dashboard finished loading, the scroll/tap/animation performance was as good as it would be on any competent computer!</p>
<p>I really don&rsquo;t know why I couldn&rsquo;t easily find a working X11 configuration example for use with the rPi 4 GPU, but I wasn&rsquo;t able to ðŸ¤·.</p>
<p>Hopefully the above helps somebody else!</p>
]]></description></item><item><title>PoE at a distance caused terrible cat5 speeds</title><link>https://karlquinsland.com/poe-at-a-distance-ruined-my-cat5-speeds/</link><pubDate>Wed, 01 Jul 2020 00:00:00 +0000</pubDate><author>Author</author><guid>https://karlquinsland.com/poe-at-a-distance-ruined-my-cat5-speeds/</guid><description><![CDATA[<p>This is a quick post for made in the hopes that some poor soul in the future will find it and save themselves some time.</p>
<h2 id="background">Background</h2>
<p>I&rsquo;ve been experimenting with a few different ways to surface various home automation controls in the appropriate place and at a good time. One prototype host is deployed behind a small LCD under some cabinets in a high traffic area. This host is a raspberry pi 4 with a <a href="https://www.raspberrypi.org/products/poe-hat/" target="_blank" rel="noopener noreffer">PoE hat</a>. It boots a very stripped down version of <a href="https://www.raspberrypi.org/downloads/raspberry-pi-os/" target="_blank" rel="noopener noreffer">Raspberry Pi OS</a> into a web browser running in Kiosk mode.</p>
<p>It&rsquo;s pretty simple and does many things well. There&rsquo;s a few small issues that need to be addressed in the CAD files as well as some additional electronic improvements that should be made before I can publish the design / files.</p>
<p>In any event, this host has been trouble-free until recently. Simple <code>apt update</code> transfers would take <strong>DAYS</strong> to complete, simple <code>scp</code> operations to other hosts on the LAN would trickle by at tens of kB/s. The web app that the host is primarily responsible for displaying would time out or fail to completely load resulting in some &ldquo;a-for-effort&rdquo; <a href="https://www.mavenecommerce.com/2017/10/31/progressive-enhancement-vs-graceful-degradation/" target="_blank" rel="noopener noreffer">graceful degradation</a>.</p>
<h2 id="the-facts">The Facts</h2>
<p>As soon as I bring up the <code>wlan0</code> interface and bring down the <code>eth0</code> interface performance is IMMEDIATELY restored. The web app is responsive and fully loads instantly, <code>scp</code> is fast like it should be on a LAN and <code>apt update</code> completes without any errors as fast as my internet connection will let it!</p>
<p><strong>Conclusion</strong>: The problem is <em>not</em> network related. Both the <code>eth0</code> and <code>wlan0</code> interface are on the same <code>vLan</code> so the bizarre behavior is not likely caused by a QoS policy or firewall rule.</p>
<p>The rPi and a few other hosts a powered via a a <a href="https://shop.poetexas.com/products/at-4-48v120w/" target="_blank" rel="noopener noreffer">120 watt</a> which is in the same closet as my core switch. Two terminations and about 200 feet of cat5 cable later, you get to the rPi host on the other side of the house.</p>
<p>Continuity tester was used on every segment of the link to confirm the link is good. The segments of the link from the switch to the injector and to the patch-panel all use high quality pre-made cables, as does the final segment from the wall to the rPi. Shocker, they tested fine, just like the in-wall segment.</p>
<p>Additionally, no other host on the PoE injector is misbehaving. No other host on the PoE injector is indicating that there&rsquo;s not enough power, and the power supply feeding the injector isn&rsquo;t even warm.</p>
<p><strong>Conclusion</strong>: The cables are certainly fine and the PoE injector is <em>probably fine</em>.</p>
<p>Next, I disabled the PoE injector all together and use the USBC port on the rPi for power. It was just as performant as with WiFi! I did not expect this result, but it did certainly narrow down the possible problem areas.</p>
<p><strong>Conclusion</strong>: The problem is only present when the host is powered via PoE.</p>
<p>I was very confident that the PoE injector was not the problem, but in order to be certain, I used a second cheap PoE injector that lives on my bench power supply. Turns out, the same slow speeds manifested with the second injector, too.</p>
<p><strong>Conclusion</strong>: The problem is not in the network, nor is it in the cables, nor is it in the injectors.</p>
<p>This only leaves one candidate: the host. Unfortunately, there&rsquo;s nothing about the host that screams &ldquo;i&rsquo;m the problem!&rdquo;. The microSD card is new and very fast. There&rsquo;s nothing in the logs indicating a hardware failure. On-device performance (via non-networking benchmarks) is inline with what i&rsquo;d expect.</p>
<p>Here&rsquo;s two additional facts from some brief testing I did a few weeks ago. I had more or less forgotten about them and only really remembered that:</p>
<ul>
<li>
<p>When I tried a fresh install of Ubuntu on a fresh microSD card&hellip; same slow speeds.</p>
</li>
<li>
<p>The host performs <em>perfectly</em> when plugged into other networks.</p>
</li>
</ul>
<p>I was <em>confident</em> then, that the rPi was not the issue and that something about the network was. But I just spent 3 hours systematically testing out every component of the network and concluding that the network is fine!</p>
<p><strong>Conclusion</strong>: I&rsquo;m back where I started; angry and confused.</p>
<p>The &ldquo;ah ha!&rdquo; moment didn&rsquo;t come until i decided to try my second PoE injector <em>at the client</em>. Much to my surprise, <strong>it worked!</strong>.</p>
<p>After a bit more testing, I determined that the PoE HAT on the rPi is &lsquo;fine&rsquo; when the PoE source is CLOSE&hellip; which probably explains the &lsquo;works fine on other networks&rsquo; fact above.</p>
<p>That leaves just the &lsquo;problem is OS independent&rsquo; fact which - after thoroughly vetting every part of the network and PoE system - makes it pretty obvious that the problem must be between the rPi and the cat5 cable coming from the wall. There&rsquo;s <em>only</em> the PoE HAT between the rPi and the cat5 cable coming from the wall. I borrowed a PoE HAT from another host elsewhere on the network and the problematic rPi started behaving again. Network transfer speeds were appropriate and the web app / dashboard was performant again!</p>
<p><strong>Conclusion</strong>: the PoE HAT powering a home automation dashboard has failed in such a way that makes the <code>eth0</code> interface all but useless. replacing the HAT solved the problem.</p>
<h2 id="tldr">TL;DR:</h2>
<p>Several months ago, the home automation dashboard displayed on a PoE powered rPi 4 started to act up. Further investigation showed absolute crap network performance from the host to any other point on the LAN or WAN. After testing each component in isolation, the PoE HAT was the only reaming suspect. After further investigation, the failure mode is <em>not present</em> when the PoE source is <em>close</em> to the client, only when the source is far from the client.</p>
<p>So if you have a PoE powered rPi project out there w/ abysmal <code>eth0</code> performance, try replacing the PoE hat&hellip;</p>
<p>Also, if anybody knows <em>why</em> this happened, I&rsquo;d love to know.</p>
]]></description></item></channel></rss>