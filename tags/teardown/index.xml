<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Teardown - Tag - karl</title><link>https://karlquinsland.com/tags/teardown/</link><description>Teardown - Tag - karl</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 17 May 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://karlquinsland.com/tags/teardown/" rel="self" type="application/rss+xml"/><item><title>TESmart HKS801-P23-USBK KVM Teardown</title><link>https://karlquinsland.com/tesmart-hks801-p23-usbk-kvm-teardown/</link><pubDate>Sat, 17 May 2025 00:00:00 +0000</pubDate><author>Author</author><guid>https://karlquinsland.com/tesmart-hks801-p23-usbk-kvm-teardown/</guid><description><![CDATA[<h1 id="tesmart-hks801-p23-usbk-kvm-teardown">TESmart HKS801-P23-USBK KVM Teardown</h1>
<p>Recently, one of the USB ports on <a href="/hdmi-kvm-teardown-and-esphome/" rel="">my previous KVM switch</a> failed. Since it&rsquo;s a critical piece of equipment, I needed a replacement the same day. The original AliExpress product page was no longer available; the seller seems to have closed up shop entirely.</p>
<p>Fortunately, the OEM—<code>XUFUNG</code>—has released an updated version, now sold in the US as the <a href="https://www.tesmart.com/products/hks801-p23" target="_blank" rel="noopener noreffer">TESmart HKS801-P23-USBK</a>. It looks visually identical to the previous KVM switch, but the USB ports now feature the characteristic blue color indicating USB 3.0 support.</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            OEM &#39;what&#39;s in the box&#39; image.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        <p>
            OEM feature overview image.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        <p>
            OEM &#34;what&#39;s new&#34; image; the big upgrade here is 5 Gbps USB support.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<div class="details admonition note open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-pencil-alt fa-fw"></i>Note<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">Despite every PCB featuring a clear <code>XUFUNG</code> label, that specific string doesn&rsquo;t appear in many places online! A quick Google search only returns my prior post and <a href="https://dancharblog.wordpress.com/2025/05/02/tesmart-hdc202-x24-thunderbolt-4-kvm-teardown-and-review/" target="_blank" rel="noopener noreffer">this teardown of another TESmart KVM</a>. You should check out the internals of that one too! Because it uses Thunderbolt, the internals are quite a bit more complicated.</div>
        </div>
    </div>
<h2 id="whats-inside">What&rsquo;s inside?</h2>
<div class="details admonition tip open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-lightbulb fa-fw"></i>TL;DR<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">It&rsquo;s the same architecture as before, but with some minor component changes and corresponding PCB layout updates.</div>
        </div>
    </div>
<p>As before, two main PCBs are stacked: the top houses the main microcontroller and HDMI ports, while the bottom contains the USB ports and power supply.</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Photo taken just after top cover removed.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<p><figure >

    
        
        

    

    <figcaption>
        
        <p>
            Close up of the &#34;output&#34; portion of the HDMI PCB.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Closeup of the network interface PCB.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Angled shot of the dupont connector between the top (HDMI) and bottom (USB) PCBs.
            
                
                
        </p> 
    </figcaption>
    
</figure>

</p>
<p>It&rsquo;s interesting to see that the power rails differ: 5V for the 4K version, and apparently there&rsquo;s an 8K version that uses 12V. It&rsquo;s also nice that the RX/TX lines are explicitly labeled; it makes things a bit easier to hack on.</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Close up of the RTS5411S USB hub controller and the mysterious F68B chips.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<h2 id="chips">Chips</h2>
<p>In no particular order, here are the main ICs I identified on the PCB:</p>
<ul>
<li>
<p><a href="https://lcsc.com/product-detail/USB-Converters_Realtek-Semicon-RTS5411S-GR_C5356838.html" target="_blank" rel="noopener noreffer">RTS5411s</a> - USB 3.1 Super-Speed HUB Controller
cx32l003f8</p>
</li>
<li>
<p>F68B / A1V8 - Not sure, can&rsquo;t find any positive ID. There&rsquo;s one for every RTS5411S port, though, and some traces do daisy chain between the individual F68B chips so i&rsquo;m guessing they&rsquo;re related to USB and possibly a buffer/signal conditioner?</p>
<ul>
<li>Interestingly enough, I don&rsquo;t see any traces from this chip to the &ldquo;slow&rdquo; USB ports that are meant to handle the keyboard/mouse. Those are monitored by the CH545L which is probably looking for the keyboard/mouse signals to trigger switching between banks.</li>
</ul>
</li>
<li>
<p><a href="https://lcsc.com/product-detail/Microcontrollers-MCU-MPU-SOC_WCH-Jiangsu-Qin-Heng-CH545L_C19183926.html?s_z=n_C19183926" target="_blank" rel="noopener noreffer">WCH CH545L</a> - USB multi-host multi-device enhanced E8051 MCU</p>
</li>
<li>
<p><a href="https://www.zbitsemi.com/upload/file/20200903/20200903105452_99571.pdf" target="_blank" rel="noopener noreffer">CX32L003F8</a> - ARM® Cortex®-M0+ 32-bit</p>
<ul>
<li>Used in a few different locations: front panel to scan buttons, update the display, monitor IR signals.</li>
</ul>
</li>
<li>
<p><a href="https://www.wch-ic.com/products/CH578_7.html" target="_blank" rel="noopener noreffer">WCH CH578M</a> - ARM® Cortex®-M0 Core Bluetooth Low Energy MCU</p>
<ul>
<li>This is the micro on the LAN port; makes sense as it has a built in 10M Ethernet PHY</li>
<li>Assuming there&rsquo;s no restriction that prevents the ethernet PHY and BT PHY from being used at the same time, this KVM could have ditched the IR remote and used a phone app instead&hellip;</li>
<li>Previously, this was handled with a <a href="https://www.st.com/en/microcontrollers-microprocessors/stm8s003f3.html" target="_blank" rel="noopener noreffer">ST 8S003f3p6</a> and a <a href="https://jlcpcb.com/partdetail/WCH_Jiangsu_Qin_Heng-CH395Q/C87390" target="_blank" rel="noopener noreffer">WCH CH395Q</a> so the LAN controller has definitely had a BOM consolidation!</li>
</ul>
</li>
<li>
<p><a href="https://en.chipsea.com/product/details/?choice_id=1079" target="_blank" rel="noopener noreffer">Chipsea CS32F031C8T6</a> - ARM® Cortex®-M0 MCU</p>
<ul>
<li>Happens to be the exact same micro as the previous KVM and seems to be featured in Dan&rsquo;s KVM, too</li>
</ul>
</li>
<li>
<p><a href="https://jlcpcb.com/partdetail/GEC-WS3232ECN/C2973151" target="_blank" rel="noopener noreffer">WS3232ECN</a> - Generic RS232 transceiver</p>
<ul>
<li>Previously this was done with a <code>SIPEX SP3223EEX</code> which is not the same footprint as the WS3232ECN.. so that&rsquo;s a minor layout change</li>
</ul>
</li>
<li>
<p><a href="https://web.archive.org/web/20240523025020/https://www.ite.com.tw/en/product/view?mid=99" target="_blank" rel="noopener noreffer">IT66341TE</a> - 4 IN to 1 OUT HDMI2.0 18Gb/s Switch.</p>
<ul>
<li>Still can&rsquo;t find any formal technical info on this chip, probably due to <a href="https://en.wikipedia.org/wiki/High-bandwidth_Digital_Content_Protection" target="_blank" rel="noopener noreffer">HDCP</a> restrictions.</li>
<li>Same as the previous KVM, but that one also used an IT66321E, which is not present on this PCB.</li>
</ul>
</li>
</ul>
]]></description></item><item><title>Solum 2.2 inch Electronic Shelf Label Teardown</title><link>https://karlquinsland.com/solum-el022hwra-teardown/</link><pubDate>Thu, 20 Jul 2023 00:00:00 +0000</pubDate><author>Author</author><guid>https://karlquinsland.com/solum-el022hwra-teardown/</guid><description><![CDATA[<h1 id="quick-peek-inside-the-el029f3wra">Quick peek inside the EL029F3WRA</h1>
<p>In light of the recent news that the <a href="https://github.com/jjwbruijn/OpenEPaperLink" target="_blank" rel="noopener noreffer">OpenEPaperLink</a> firmware has been <a href="https://www.youtube.com/watch?v=Ph5BXFcugC4" target="_blank" rel="noopener noreffer">ported to the <code>nRF52811</code></a> series of chips, I decided to take a look inside the Solum EL029F3WRA to see if it was a viable candidate for a project.</p>
<p>As it turns out, it is very similar to the <a href="https://github.com/jjwbruijn/OpenEPaperLink/wiki/2.9%22-EL029H3WRA" target="_blank" rel="noopener noreffer">2.9 inch</a> tags.
I hope to soon have a simple CAD model of the ESL which I&rsquo;ll use to model a basic pogo-pin programming jig for this particular ESL.</p>
<hr>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            The rear of the ESL is clipped in and can be removed with a plastic spudger.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        <p>
            All programming pins are accessible from the rear once the batteries are removed.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Batteries are held in with moulded plastic clips.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Side profile of the ESL.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        <p>
            The outer front panel is glued in place. Careful prying was enough to remove it.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Unfortunately, there&#39;s more glue holding the eInk panel to the PCB and the whole PCB assembly in the case.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<div class="details admonition warning open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-exclamation-triangle fa-fw"></i>Warning<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><p>DO NOT DO THIS.</p>
<p>The PCB <strong>can</strong> be pried out of the case but doing so will likely damage the eInk panel unless you apply pressure equally from multiple corners.</p>
<p>The glass on the eInk panel is very thin and far less flexible than the PCB.
Note the crack&hellip;</p>
</div>
        </div>
    </div>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            The residue is not there by default. Since I had already ruined the panel, I was testing the effect of different solvents on the panel hoping to find one that would dissolve the glue without damaging the panel.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        <p>
            The eInk panel is attached to the PCB with a thin layer of glue. The same tool/technique used to remove the front panel can be used to remove the eInk panel.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<p><figure >

    
        
        

    

    <figcaption>
        
        <p>
            PCB as seen from the rear of the ESL.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        <p>
            A close up look at the micro and related pcb traces.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Close up look at the second half of the PCB.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Closeup of the side of the PCB normally covered by the eInk panel. Note the thin layer of glue around the edge of the PCB used to hold the eInk panel in place.
            
                
                
        </p> 
    </figcaption>
    
</figure>

</p>
]]></description></item><item><title>Roborock S8 Pro Ultra Teardown</title><link>https://karlquinsland.com/roborock-s8-pro-ultra-dock-teardown/</link><pubDate>Sat, 06 May 2023 00:00:00 +0000</pubDate><author>Author</author><guid>https://karlquinsland.com/roborock-s8-pro-ultra-dock-teardown/</guid><description><![CDATA[<h1 id="roborock-s8-teardown">Roborock S8 teardown</h1>
<p>I recently acquired the new S8 from Roborock to replace my rapidly failing roomba.</p>
<p>While I am patiently waiting for <a href="https://dontvacuum.me/" target="_blank" rel="noopener noreffer">Dennis</a> and <a href="https://github.com/Hypfer" target="_blank" rel="noopener noreffer">Hypfer</a> to add <a href="https://github.com/Hypfer/Valetudo" target="_blank" rel="noopener noreffer">Valetudo</a> support, I thought I&rsquo;d have a peek inside to see if this model will be any more serviceable or maintainable than my current vacuum.</p>
<p>From what I&rsquo;m told, the S7 and the S8 are supposed to be pretty similar so here&rsquo;s to hoping that it&rsquo;s not too much more of a wait.</p>
<p>In the mean time this post is going &ldquo;live&rdquo; with photos of the docking station internals and a few photos of the vacuum.
I ran out of time to finish the S8 teardown but I&rsquo;ll update this post when I have made progress.
Assuming the S8 is similar to the S7, I imagine that the procedure and internals will be similar.</p>
<h2 id="the-dock">The dock</h2>
<p>Fortunately, it&rsquo;s pretty easy to open the <em>huge</em> charging station/dock up.
Really, you just need a single philips screwdriver for the ~10 screws on the rear.
There is one sticker covering a screw on the rear but it&rsquo;s not the &ldquo;tamper-evident&rdquo; kind so it should be easy enough to replace if needed.</p>
<hr>
<p>Excess cable slack can be looped around the rear of the docking station to minimize errant cords.</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Note the white sticker covering the screw in the middle on the bottom.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<p>Near the mains input is a simple USB-C port.
<code>dmesg</code> doesn&rsquo;t show any signs of life on the port both with and without the mains cable plugged in. I have not yet tried with the robot docked so there may be some simple handshake that&rsquo;s needed before this port becomes interesting.</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>With screws removed, the rear panel lifts off to reveal the internals.
The overall layout seems logical and there&rsquo;s lots of room between components which is nice to see.
Each component is well labeled secured to the main body with standard screws and Zip-Ties.</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>In addition to the small features molded into the body for cable management, the cables to the components that move are protected with an easy to remove cable chain.</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>The strong vaccuum motor that empties the mobile dustbin into the larger bin is powered directly via mains but isn&rsquo;t easily accessible.
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>

</p>
<p>The mains PSU is nothing special to write home about.
There is a low-voltage connection right next to the mains cabling that heads down to the main &ldquo;evacuation&rdquo; suction motor but there is no obvious relay.</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>Here&rsquo;s a closeup of the main control board for the docking station.</p>
<p>Each of the connectors around the edge is a different size/number of pins os it&rsquo;s virtually impossible to plug the wrong cable in to the wrong port - nice!</p>
<p>The conformal coating does obscure component IDs and traces, but you can still get a high-level idea of the topology.
More than likely, all sensors and actuators are controlled by the <a href="https://www.nationstech.com/en/N32G455MCUs/" target="_blank" rel="noopener noreffer">Nation N32G455</a> and the ESP32 is (probably) just there for communicating status to the robot and/or cloud.</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>From this angle it&rsquo;s a bit easier to see where the USB-C traces go but since the ESP32 module is BGA packaged and everything is conformally coated, I skipped the tedious work of trying to beep things out.</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            At least the conformal coating is pretty easy to rub off the IC.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<h2 id="the-vacuum">The vacuum</h2>
<p>More photos coming in a later update, but here&rsquo;s what I have so far.</p>
<p><figure >

    
        
        

    

    <figcaption>
        
        <p>
            It would be better if Roborock provided tools to verify this claim, but at least they&#39;re trying to address consumer privacy concerns.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Like with the S7, the panel surrounding the LIDAR puck can be pried off.
            
                
                
        </p> 
    </figcaption>
    
</figure>

</p>
<p>Nice to see that the labeling for which roller goes into which position is molding into the robot body for ultimate wear-resistance.</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>And here&rsquo;s a shot of the LIDAR pcb.</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>As for getting into the rest of the robot, it&rsquo;s not that difficult.
Standard &ldquo;keep track of all the screws and take photos at each step&rdquo; advice applies here.</p>
<p>You can follow the the <a href="https://www.youtube.com/watch?v=TKMD-VOvILc" target="_blank" rel="noopener noreffer">existing S7 teardown guides</a> for the initial steps but once you remove the front bumper just look for screws that hold the top lid onto the body of the robot.
There are two obvious ones, two next to the castor wheel and a few more hiding under the mop pad.
With those removed, the lid slides off pretty easily to reveal the PCB:</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>There&rsquo;s a few interesting things to note here:</p>
<ul>
<li>
<p>The roller brush assembly and mop head are lifted up via small steel cables. You can see the actuator motor for the main brush assembly just off of the top left corner of the PCB. The steel cable runs through the white plastic guides which route it around other internal components. The &ldquo;space claim&rdquo; portion of this design must have been pretty interesting :).</p>
</li>
<li>
<p>There are only two small locating features for the PCB. When installing the PCB back in to the chassis start with the small plastic peg between the screw and the micro USB port. If you seat this corner of the PCB first and everything else should fall into place nicely.</p>
</li>
</ul>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>The conformal coating is annoying but here&rsquo;s the big players:</p>
<ul>
<li>
<p>An Allwinner <a href="https://github.com/mangopi-sbc/aw-doc/blob/main/A133-MR813-R818/MR813_Datasheet_V1.6.pdf" target="_blank" rel="noopener noreffer"><code>MR813</code></a> runs the show.</p>
</li>
<li>
<p>Samsung <a href="https://semiconductor.samsung.com/estorage/emmc/emmc-5-1/klm4g1fete-b041/" target="_blank" rel="noopener noreffer"><code>KLM4G1</code></a> for RAM.</p>
</li>
<li>
<p>A GigaDevice <a href="https://item.szlcsc.com/3292467.html#pdf-view" target="_blank" rel="noopener noreffer"><code>GDQ2BFAA-CE</code></a> 4Gb flash chip for OS storage.</p>
</li>
<li>
<p>A <a href="https://www.sekorm.com/doc/2446002.html" target="_blank" rel="noopener noreffer"><code>GDQ2BFAA</code></a> handles everything low level.</p>
</li>
<li>
<p>WiFi provided by <a href="https://www.realtek.com/en/products/communications-network-ics/item/rtl8189ftv" target="_blank" rel="noopener noreffer"><code>RTL8189FTV</code></a>.</p>
</li>
</ul>
]]></description></item><item><title>Teardown and Home Assistant integration with two generic Chinese 'smart' power strips.</title><link>https://karlquinsland.com/esphome-power-strips/</link><pubDate>Sun, 15 Jan 2023 00:00:00 +0000</pubDate><author>Author</author><guid>https://karlquinsland.com/esphome-power-strips/</guid><description><![CDATA[<!-- markdownlint-disable-file MD002 -->
<p>I love the Sonoff-S31 smart plugs.
They&rsquo;re cheap, well made and - most importantly - trivial to flash with ESPHome and integrate into Home Assistant.
They do have one obvious draw back, though; optimized for a &ldquo;traditional&rdquo; US style outlet.
When you try to deploy them to a power strip, you end up loosing about 50% of the outlets on the strip!</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            This is how you loose about 50% of the outlets on your power strip.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<p>I figured that there must be a power strip out there that had the WiFi radio, power supply and relays built in.</p>
<p>Looking through the <a href="https://templates.blakadder.com/us.html#Power%20Strip" target="_blank" rel="noopener noreffer"><code>Power Strip</code></a> listing of the excellent Tasmota device/template repository, there are more than a few options out there.
Upon closer inspection, almost <em>all</em> of them are from super generic/no-name Chinese brands and lack any ETL or UL certifications 😬.</p>
<p>Searching for smart power strips on Amazon returns several results&hellip; and only a few from name brands.
The few name brand power strips out there that I could find are using their own microcontrollers internally and are immediately disqualified as they&rsquo;ll be - at best - difficult ot integrate with Home Assistant.</p>
<p>I&rsquo;m not quite so concerned about any power conditioning/surge suppression as I am not plugging in any valuable or delectate electronics.
I am concerned with a more integrated / space efficient solution that allows me to retain my ESPHome/Home Assistant integration.</p>
<p>After cross referencing the Tasmota templates listing with the Amazon search listings, it became clear that there&rsquo;s really only a few designs that get sold under several different brands and that virtually all of the devices that were known to be powered by an ESP micro are no longer for sale on Amazon.</p>
<p>I eventually took a gamble on two:</p>
<ul>
<li><a href="https://www.amazon.com/gp/product/B097NHBPN9" target="_blank" rel="noopener noreffer"><code>BN-LINK U158WT</code></a></li>
<li><a href="https://www.amazon.com/gp/product/B0B5G6MDQ6" target="_blank" rel="noopener noreffer"><code>POWSAV AHR-083</code></a></li>
</ul>
<h2 id="bn-link">BN-Link</h2>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Marketing photo for the BN-Link power strip
            
                
                
        </p> 
    </figcaption>
    
</figure>


<p>This opens up with a standard philips screw driver and you only need one bit size for all screws - nice touch!</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>The screws are hiding under the anti-slip pads but instead of those being glued down, the pads use a friction fit on the <code>+</code> shaped locating pegs.
I really like this design feature as the glued pads never stick quite as well when replaced.
In addition to the 4 screws, there are several plastic clip/tabs around the permitter that take some work to carefully undo.
If you have a thin metal pry tool / spudger, it will come in handy!</p>
<p>Overall, the physical construction is solid enough and - pleasantly - serviceable.</p>
<p><figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        <p>
            I&#39;m not loving the sloppy wiring connecting the USB power supply to the mains rails.
            
                
                
        </p> 
    </figcaption>
    
</figure>

</p>
<p>Like the USB power supply, the WiFi module is also separate from the main PCB.</p>
<p><figure >

    
        
        

    

    <figcaption>
        
        <p>
            You know what&#39;s cheaper than pin headers? PCB fingers in slots.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>

</p>
<p>Bad news: this module is NOT an ESP powered device.</p>
<p>Good news: there a Tasmota-like firmware for it: <a href="https://github.com/openshwprojects/OpenBK7231T_App" target="_blank" rel="noopener noreffer">OpenBK7231T</a>!</p>
<p>I&rsquo;ll go ahead and flash the OpenBK firmware and have a go to at least give it a try.</p>
<p>The relay switching electronics look reasonable enough:</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>The relays themselves are nothing special to write home about:</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Note the links. I&#39;d bet that it&#39;s simpler to scale a design by copy/pasting a self-contained footprint and adjust the number of links on the BOM as needed.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<p>There&rsquo;s nothing remarkable about the USB Power supply; standard switch mode power supply topology.
The power conversion is done by the chip under the metal heat sink; I didn&rsquo;t bother to get an ID on it as the ports don&rsquo;t support any quick charge or power delivery protocols.</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>Before putting the strip back together, I secured the USB power supply wires with a bit of electrical tape to lessen the probability of a short due to insulation wearing off.</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<h3 id="flashing-openbk">Flashing OpenBK</h3>
<p>I don&rsquo;t have a ton of notes about the flashing process as it was pretty straight forward.
Two small things to note:</p>
<ul>
<li>The <a href="https://github.com/OpenBekenIOT/hid_download_py" target="_blank" rel="noopener noreffer"><code>hid_download_py/uartprogram</code></a> tool needs a <a href="https://github.com/OpenBekenIOT/hid_download_py/pull/13/files" target="_blank" rel="noopener noreffer">requirements.txt</a>.</li>
<li>You can get away with only 4 wires (power, gnd, rx, tx) to program the chip but you must move very fast! It took me more than a few attempts to get the tool to connect to the bootloader on the chip; you have a very limited window for the tool to connect to the chip. I had to run connect power to the chip within about 200ms of starting the <code>uartprogram</code>. If i waited much longer, I would get <code>Cannot get bus.</code></li>
</ul>
<p>Eventually I was able to program the chip:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">❯ python3 uartprogram ../OpenBK7231T_UA_1.15.308.bin -d /dev/ttyUSB0 -w
</span></span><span class="line"><span class="cl">UartDownloader....
</span></span><span class="line"><span class="cl">programm....
</span></span><span class="line"><span class="cl">Cannot get bus. : <span class="p">|</span>                                                  <span class="p">|</span><span class="o">[</span>    ?k/s<span class="o">]</span>
</span></span><span class="line"><span class="cl">❯ python3 uartprogram ../OpenBK7231T_UA_1.15.308.bin -d /dev/ttyUSB0 -w
</span></span><span class="line"><span class="cl">UartDownloader....
</span></span><span class="line"><span class="cl">programm....
</span></span><span class="line"><span class="cl">Gotten Bus...   : <span class="p">|</span>                                                  <span class="p">|</span><span class="o">[</span>    ?k/s<span class="o">]</span>caution: ignoring unexpected reply in SetBaudRate
</span></span><span class="line"><span class="cl">Write Successful: <span class="p">|</span><span class="c1">##################################################|[ 13.2k/s]</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>The <code>caution: ignoring unexpected reply</code> came as soon as I connected the power to the programmer.</p>
<p>After figuring out the <a href="#bn-gpio-notes" rel="">GPIO assignments</a>, I did manage to get the Home Assistant / MQTT auto discovery working but - like with Tasmota - wasn&rsquo;t impressed with the lack of customization in the mqtt payloads.
I <strong>highly value</strong> having the correct device/entity class, icon, name &hellip; etc all populating in home assistant automatically; ESPHome lets me do this.</p>
<p>I&rsquo;ll keep an eye on the project and may find another use for this power strip in the future.
If ESPHome ever adds support for the <code>BK7231T</code> chips then this is <em>perfect</em>.</p>
<div class="details admonition tip open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-lightbulb fa-fw"></i>Tip<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><p>While drafting this post, I <a href="https://old.reddit.com/r/esp8266/comments/qfg3yc/replaced_tuya_plug_controller_with_esp8266/" target="_blank" rel="noopener noreffer">came across</a> an ESP based drop in replacement for the <code>WB2S</code> module: the <a href="https://www.lcsc.com/product-detail/WiFi-Modules_Wireless-tag-WT-01N_C477823.html" target="_blank" rel="noopener noreffer"><code>WT-01N</code></a>.
Had I known, I would have just done the module swap, flashed ESPHome and stopped there.</p>
<p>While looking for the <code>WT-01N</code>, on Ali Express, I found that there&rsquo;s already a small supply of <a href="https://www.aliexpress.com/w/wholesale--ESP%2525252d02S.html?catId=0&amp;initiative_id=SB_20230114112241&amp;SearchText=%2BESP-02S&amp;spm=a2g0o.home.1000002.0&amp;dida=y" target="_blank" rel="noopener noreffer"><code>ESP-02S</code> modules that should be drop in replacements</a>!</p>
<p>Next time!</p>
</div>
        </div>
    </div>
<h4 id="wt-01n-swap">WT-01N swap</h4>
<div class="details admonition note open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-pencil-alt fa-fw"></i>Note<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">On a rainy afternoon in late 2023.03, I got around to doing the module swap.
Below you&rsquo;ll find the appropriate Tasmota configuration for GPIO pins.</div>
        </div>
    </div>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            And here&#39;s the Tasmota configuration for the BN-Link.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<h3 id="bn-gpio-notes">BN GPIO notes</h3>
<p>The project needs some basic &ldquo;here&rsquo;s how to figure out which GPIOs do what&rdquo; docs similar to <a href="https://Tasmota.github.io/docs/Configuration-Procedure-for-New-Devices/#step-1" target="_blank" rel="noopener noreffer">these</a> but I eventually figured out the following GPIO assignments.</p>
<table>
  <thead>
      <tr>
          <th>PIN</th>
          <th>Label</th>
          <th>Purpose</th>
          <th>Notes</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td>6</td>
          <td>PWM0</td>
          <td><code>Rel</code> 1</td>
          <td>Outlet closest to the power cord.</td>
      </tr>
      <tr>
          <td>7</td>
          <td>PWM1</td>
          <td>NC</td>
          <td>This is not connected to the main PCB.</td>
      </tr>
      <tr>
          <td>8</td>
          <td>PWM2</td>
          <td><code>Rel</code> 4</td>
          <td>Outlet closest to the USB.</td>
      </tr>
      <tr>
          <td>10</td>
          <td>RXD1</td>
          <td><code>Btn</code></td>
          <td>This is the user button.</td>
      </tr>
      <tr>
          <td>11</td>
          <td>TXD1</td>
          <td><code>WiFiLED_n</code></td>
          <td>WiFi status LED.</td>
      </tr>
      <tr>
          <td>23</td>
          <td>ADC3</td>
          <td>NC</td>
          <td>This is not connected to the main PCB.</td>
      </tr>
      <tr>
          <td>24</td>
          <td>PWM4</td>
          <td><code>Rel</code> 2</td>
          <td>Second outlet from power cord.</td>
      </tr>
      <tr>
          <td>26</td>
          <td>PWM5</td>
          <td><code>Rel</code> 3</td>
          <td>Third outlet from power cord.</td>
      </tr>
  </tbody>
</table>
<h2 id="powsav">POWSAV</h2>
<p>Happy that I was able to get open firmware on the first but disappointed with the lack of customization, I moved onto the second candidate.</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Marketing photo for the POWSAV power strip
            
                
                
        </p> 
    </figcaption>
    
</figure>


<div class="details admonition note open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-pencil-alt fa-fw"></i>Note<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><p>At one point in time, this <em>exact same device</em> was sold under the <code>ahrise</code> branding and was <a href="https://templates.blakadder.com/ahrise_AHR-083.html" target="_blank" rel="noopener noreffer">Tasmota compatible</a>.</p>
<p>The model number is the same, the templates repo picture is identical, the GPIO pinout is identical&hellip; but the linked Amazon listing is no longer available.
The PCB silk screen also include the old <code>AHR</code> markings so I&rsquo;m guessing that this was just a re-brand with the new <code>POWSAV</code> branding after switching to TuYa?</p>
</div>
        </div>
    </div>
<p>To open this one, you&rsquo;ll need a 2.2mm triangle bit.
There are 6 screws. four hidden under the anti-slip pads.</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Why are the screw mounting slots not centered :/.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<p>The USB, WiFI and mains switching are all on a single PCB but the main power cut off and protection features are all on a separate PCB.</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Nothing of concern to see on the bottom, everything looks pretty boring... which is good when it comes to mains handling!
            
                
                
        </p> 
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        <p>
            About what you&#39;d expect for a PCB layout. Plenty of distance between the HV and LV sides!
            
                
                
        </p> 
    </figcaption>
    
</figure>


<p>It&rsquo;s nice to see that the surge suppression circuitry is on it&rsquo;s own PCB. Repairs there should be easier to pull off - in theory.</p>
<p>Here&rsquo;s a few more shots of the primary components/assemblies:</p>
<p><figure >

    
        
        

    

    <figcaption>
        
        <p>
            Note the silk screen: this protection PCB is common to the AHR-053 model as well.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        <p>
            WB3S is a TuYa branded module that is pin compatible with the ubiquitous ESP-8266 modules.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Note the black insulating material separating the USB ports from the mains side of things.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Relatively painless extraction, only partially lifted the pad in the bottom left.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Not even 5 min later, the TuYa modules has been replaced with one running a firmware powered by ESPHome.
            
                
                
        </p> 
    </figcaption>
    
</figure>

</p>
<h3 id="powsav-gpio-notes">POWSAV GPIO notes</h3>
<p>Thanks to <a href="https://Tasmota.github.io/docs/Configuration-Procedure-for-New-Devices/#step-1" target="_blank" rel="noopener noreffer">excellent</a> Tasmota docs, it was pretty easy to figure out the mappings.</p>
<p>For reference:</p>
<table>
  <thead>
      <tr>
          <th>PIN</th>
          <th>Type</th>
          <th>Number</th>
      </tr>
  </thead>
  <tbody>
      <tr>
          <td>GPIO2</td>
          <td><code>Led_i</code></td>
          <td>1</td>
      </tr>
      <tr>
          <td>GPIO5</td>
          <td><code>Button_n</code></td>
          <td>1</td>
      </tr>
      <tr>
          <td>GPIO 12</td>
          <td><code>Relay</code></td>
          <td>3</td>
      </tr>
      <tr>
          <td>GPIO 13</td>
          <td><code>Relay</code></td>
          <td>4</td>
      </tr>
      <tr>
          <td>GPIO 14</td>
          <td><code>Relay</code></td>
          <td>2</td>
      </tr>
      <tr>
          <td>GPIO 15</td>
          <td><code>Relay</code></td>
          <td>1</td>
      </tr>
  </tbody>
</table>
<p>And the corresponding template:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="line"><span class="cl"><span class="p">{</span><span class="nt">&#34;NAME&#34;</span><span class="p">:</span><span class="s2">&#34;POWSAV_AHR-083&#34;</span><span class="p">,</span><span class="nt">&#34;GPIO&#34;</span><span class="p">:[</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">320</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">64</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">226</span><span class="p">,</span><span class="mi">227</span><span class="p">,</span><span class="mi">225</span><span class="p">,</span><span class="mi">224</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">],</span><span class="nt">&#34;FLAG&#34;</span><span class="p">:</span><span class="mi">0</span><span class="p">,</span><span class="nt">&#34;BASE&#34;</span><span class="p">:</span><span class="mi">18</span><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="esphome">Esphome</h3>
<p>And here&rsquo;s a super basic ESPHome configuration using the mappings from above.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">substitutions</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">friendly_name_short</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;Power Strip&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">esphome</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;power-strip&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">esp8266</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">board</span><span class="p">:</span><span class="w"> </span><span class="l">esp01_1m</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># Disable writing the switch mode / restore_from_flash</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">restore_from_flash</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">status_led</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">pin</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">number</span><span class="p">:</span><span class="w"> </span><span class="l">GPIO02</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">inverted</span><span class="p">:</span><span class="w"> </span><span class="kc">True</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">binary_sensor</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># I don&#39;t know what the stock behavior was. For now, only basic control</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;${friendly_name_short} Button&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">platform</span><span class="p">:</span><span class="w"> </span><span class="l">gpio</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">internal</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">pin</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">number</span><span class="p">:</span><span class="w"> </span><span class="l">GPIO05</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">mode</span><span class="p">:</span><span class="w"> </span><span class="l">INPUT_PULLUP</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">inverted</span><span class="p">:</span><span class="w"> </span><span class="kc">False</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c"># Press is momentary quick</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">on_press</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">then</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span>- <span class="nt">switch.toggle</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">            </span><span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="l">sw_relay1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># Not doing anything fancy so we can go with basic GPIO switches</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># See: https://esphome.io/components/switch/gpio.html</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">switch</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;Outlet 1&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="l">sw_relay1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">platform</span><span class="p">:</span><span class="w"> </span><span class="l">gpio</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">pin</span><span class="p">:</span><span class="w"> </span><span class="l">GPIO15</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">icon</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;mdi:numeric-1&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c"># Don&#39;t want to wear down flash storing state, easiest to just not bother remembering</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">restore_mode</span><span class="p">:</span><span class="w"> </span><span class="l">ALWAYS_OFF</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c"># See: https://developers.home-assistant.io/docs/core/entity/switch/#available-device-classes</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">device_class</span><span class="p">:</span><span class="w"> </span><span class="l">OUTLET</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;Outlet 2&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="l">sw_relay2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">platform</span><span class="p">:</span><span class="w"> </span><span class="l">gpio</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">pin</span><span class="p">:</span><span class="w"> </span><span class="l">GPIO14</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">icon</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;mdi:numeric-2&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">restore_mode</span><span class="p">:</span><span class="w"> </span><span class="l">ALWAYS_OFF</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">device_class</span><span class="p">:</span><span class="w"> </span><span class="l">OUTLET</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;Outlet 3&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="l">sw_relay3</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">platform</span><span class="p">:</span><span class="w"> </span><span class="l">gpio</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">pin</span><span class="p">:</span><span class="w"> </span><span class="l">GPIO12</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">icon</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;mdi:numeric-3&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">restore_mode</span><span class="p">:</span><span class="w"> </span><span class="l">ALWAYS_OFF</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">device_class</span><span class="p">:</span><span class="w"> </span><span class="l">OUTLET</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;Outlet 4&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="l">sw_relay4</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">platform</span><span class="p">:</span><span class="w"> </span><span class="l">gpio</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">pin</span><span class="p">:</span><span class="w"> </span><span class="l">GPIO13</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">icon</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;mdi:numeric-4&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">restore_mode</span><span class="p">:</span><span class="w"> </span><span class="l">ALWAYS_OFF</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">device_class</span><span class="p">:</span><span class="w"> </span><span class="l">OUTLET</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div>]]></description></item><item><title>Quick look inside two Ali Express mmWave presence detection sensors</title><link>https://karlquinsland.com/two-mmwave-sensors/</link><pubDate>Tue, 01 Nov 2022 00:00:00 +0000</pubDate><author>Author</author><guid>https://karlquinsland.com/two-mmwave-sensors/</guid><description><![CDATA[<p>Millimeter Wave technology has recently hit &ldquo;mass consumer product adoption&rdquo; price points.
A casual search for &ldquo;human presence sensor&rdquo; on Ali Express will turn up a seemingly endless number of sub $40 devices that can detect movement far more accurately than any old PIR sensor.</p>
<p>Each listing is fairly generic; there&rsquo;s no explicit manufacturer details but they all use the same marketing images:</p>
<p><figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>

</p>
<p>As the photos below will show, neither device is super well marked with a model number so I&rsquo;ll just refer to each by either the color of the enclosure or by the radar sensor inside.</p>
<p>Before getting into the specific modules, a brief look at the packaging for both.</p>
<h2 id="packaging">Packaging</h2>
<p>The packaging isn&rsquo;t anything special but I am including pictures here in the off chance that some of the Mandarin markings is useful for somebody.</p>
<p><figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>

</p>
<div class="details admonition warning open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-exclamation-triangle fa-fw"></i>Micro USB in 2022?!<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">Both devices featured here have <em>micro</em> USB leads.
It&rsquo;s 2022 and we&rsquo;re still using MICRO USB for power?
I know that USB-C connectors are slightly more expensive but it just seems lazy and dated to put a micro USB port on any new design in 2022!</div>
        </div>
    </div>
<div class="details admonition question open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-question-circle fa-fw"></i>uart?<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">I did probe both of the 4 pin connectors on the PCB but didn&rsquo;t see any signs of life.
If those headers are for a UART, the MCU isn&rsquo;t responding to any inputs nor is it putting anything out over it :(.</div>
        </div>
    </div>
<!-- markdownlint-disable-file MD002 -->
<h2 id="zy-m100-s"><code>ZY-M100-S</code></h2>
<p>AKA &ldquo;the white one&rdquo;. Box content is bare-bones; the USB lead is comically short for almost any &ldquo;mid height on the wall&rdquo; or ceiling installs so i&rsquo;m not really sure what the point was.</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>I&rsquo;m not sure why they went with 3 screws here instead of 4. If you&rsquo;re going to omit <em>a</em> screw for cost-cutting reasons, why not just use clips or a single screw in the middle?</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            No, it&#39;s not the camera or the lighting, the text really is that blurry in real life.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<p>The interior is more or less as expected; two highly integrated modules with a small MCU gluing them together.</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>There is some evidence that the Zigbee version of the white sensor supports ambient brightness.
Based on the two small holes in the enclosure and the PCB markings, I suspect that <code>d2</code> is being used as a light sensor:
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>

</p>
<p>Nothing of interest on the bottom of the PCB:
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>

</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Close up of the sensor MCU
            
                
                
        </p> 
    </figcaption>
    
</figure>


<h3 id="unique-markings">Unique Markings</h3>
<ul>
<li>PCB: <code>ZY-M100</code> and <code>V4.20</code></li>
<li>TuYa radio: <a href="https://developer.tuya.com/en/docs/iot/wbr3-module-datasheet?id=K9dujs2k5nriy" target="_blank" rel="noopener noreffer"><code>WBR3</code></a></li>
<li>TuYa mcu: <a href="https://www.gigadevice.com/products/microcontrollers/gd32/arm-cortex-m23/value-line/gd32e230-series/" target="_blank" rel="noopener noreffer"><code>GD32E230</code></a></li>
<li>Radar sensor: <code>JYSJ_5807_A01</code> with an IC marked <code>SJ 501</code>. <del>No results on this one. Please do <a href="/contact/" rel="">get in touch</a> if you do know anything about it. I&rsquo;d love to re-use the sensor in something else!</del></li>
</ul>
<div class="details admonition update open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-pencil-alt fa-fw"></i>We have an ID!<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><p>Thanks to the prolific <a href="https://blakadder.com/zy-m100/" target="_blank" rel="noopener noreffer">blakadder.com for bringing it to my attention</a> and <a href="https://community.home-assistant.io/u/crlogic" target="_blank" rel="noopener noreffer">@crlogic</a> from the Home Assistant community forums <a href="https://community.home-assistant.io/t/mmwave-wars-one-sensor-module-to-rule-them-all/453260/73" target="_blank" rel="noopener noreffer">for identifying the module <em>and</em> linking to a datasheet</a>!</p>
<p>The module is <a href="http://docs.leapmmw.com/%E4%BC%A0%E6%84%9F%E5%99%A8%E4%BA%A7%E5%93%81/%E6%A8%A1%E5%9D%97/module.html" target="_blank" rel="noopener noreffer"><code>Leapmmw 5.8GHz Motion Detection: MD5G20</code></a></p>
</div>
        </div>
    </div>
<h2 id="the-micradar-rd24d">The <code>MicRadar RD24D</code></h2>
<p>AKA &ldquo;the black one&rdquo;.</p>
<p>Like the M100, there&rsquo;s not a ton in the box.</p>
<p>The rear enclosure has a simple key-hole slot for mounting to a wall or ceiling and the USB power lead is considerably longer than the M100. Somebody did consider that a celling-mounted device might need a long power lead&hellip;</p>
<p><figure >

    
        
        

    

    <figcaption>
        
        <p>
            Yes, that is a neo-pixel LEDin the center of the opaque plastic panel.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>

</p>
<p>Same story here: WiFi module and radar sensor both talk to a MCU over UART.</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>Nothing remarkable on the bottom of the PCB:
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            They only soldered in one half of the pins connecting the radar sensor to the main PCB. I wonder how much time/money that saved...
            
                
                
        </p> 
    </figcaption>
    
</figure>

</p>
<p>Here&rsquo;s a close up of the business end of the sensor. This one is considerably more sophisticated and complex relative to the white one.</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>And a close up of the coordinating MCU</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<!-- markdownlint-disable-file MD024 -->
<h3 id="unique-markings-1">Unique Markings</h3>
<ul>
<li>PCB: <code>V1.01</code></li>
<li>TuYa radio: <a href="https://developer.tuya.com/en/docs/iot/cb3s?id=Kai94mec0s076" target="_blank" rel="noopener noreffer"><code>CB3S</code></a></li>
<li>TuYa mcu: <a href="https://www.stcmicro.com/stc/stc8g1k08.html" target="_blank" rel="noopener noreffer">STC 8G1K17</a></li>
<li>Radar sensor: <code>MicRadar R24D</code>. I can&rsquo;t find a datasheet for the specific module, but it does seem to be part of <a href="https://www.iflabel.com/product/28.html" target="_blank" rel="noopener noreffer">this product family</a>.
<ul>
<li>IC1: <code>MicRadar / T15BT / DAT2230</code></li>
<li>IC2: This above picture isn&rsquo;t the best but the chip is marked with <code>S3KM11L / N46Y80D1 / 2123H</code>. The <a href="https://www.ic37.com/news/2022-3_293564/" target="_blank" rel="noopener noreffer"><em>only</em> google result</a> does not really indicate <em>who</em> makes the chip.</li>
</ul>
</li>
</ul>
<h2 id="conclusion">Conclusion</h2>
<p>Neither are going to be quick/easy to convert or otherwise get working with the likes of ESPHome or Tasmota:</p>
<ul>
<li>Neither wifi module is an espressif module. At least some re-flow work would be required to replace the modules with an Espressif module.</li>
<li>There&rsquo;s a MCU sitting between the WiFi module and the actual sensor. Reverse engineering how the TuYa radio talks to the MCU and how the MCU talks to the radar module just isn&rsquo;t worth the time!</li>
</ul>
<p>The sensors cost about as much as the bare radar modules themselves so - if you&rsquo;re willing to spend the time to desolder the radar modules - you get an enclosure for &ldquo;free&rdquo;.</p>
]]></description></item><item><title>Quick look inside the OMRON Evolv BP7000 Blood Pressure cuff</title><link>https://karlquinsland.com/omron-bp7000-evolv-teardown/</link><pubDate>Sat, 14 May 2022 00:00:00 +0000</pubDate><author>Author</author><guid>https://karlquinsland.com/omron-bp7000-evolv-teardown/</guid><description><![CDATA[<p>A friend recently asked for my help with some reverse engineering.
They wanted to know how difficult it would be to re-use some components from a lot of refurbished blood pressure cuffs they had recently acquired.</p>
<p>Sounds easy, right?
At a high level, there&rsquo;s going to be:</p>
<ul>
<li>a pump and a pressure sensor and a valve</li>
<li>a micro controller to run the show</li>
<li>a way to communicate the readings back to the user</li>
</ul>
<p>In the interest of expediting things, I asked for the FCC IDs from the devices so I could have a look inside&hellip; and was surprized to find out that there was no FCC listing for this particular model from the lot.</p>
<p>😕</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Here&#39;s what it looks like on the outside
            
                
                
        </p> 
    </figcaption>
    
</figure>


<p>So with that out of the way, here&rsquo;s what the <code>Omron BP7000</code> looks like on the inside.</p>
<h1 id="teardown">Teardown</h1>
<p>There are a total of 7 philips screws holding the unit together. Two of the six are much smaller so two different sized bits might be a good idea.</p>
<p>After removing all the screws and carefully prying back the plastic clips, the front panel comes off of the body giving us the first look at the PCB stackup and mechanical internals.</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>The OLED screen is not held in place with anything so be exceedingly careful when opening!</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>Here&rsquo;s a closeup of the &lsquo;front&rsquo; of the main PCB.
There&rsquo;s a ton more passives than I thought there would be but a single large controller next to a pressure sensor is about what I figured.</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>Details on the ICs are <a href="#pcb-markings" rel="">below</a>.</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>I am not quite sure what this little IC is for. Calibration or firmware?</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>The BTLE module is connected through a 8 wire FFC.</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Several of the square pads are accessible from the exterior before the pressure cuff is attached. Almost certainly for programming at the factory.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<p>With the main PCB removed, you can see the actual mechanical components that build up and release the air pressure.
The two blue wires are for the solenoid that vents air pressure out of the system.
The port to the right and just above the BTLE module is where air pressure is measured.
The white box attached tot the motor is the air pump.</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<h2 id="btle-module">BTLE module</h2>
<p>For some additional photos of the module w/o a shield, check the amazing <a href="https://fccid.io/Q6ZHHXMD05T/Internal-Photos/Short-Term-Confidential-Internal-Photo-3042585" target="_blank" rel="noopener noreffer">fccid.io page</a>.</p>
<p>This module appears to be used in <em>several</em> similar blood pressure monitors.</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<h2 id="pcb-markings">PCB Markings</h2>
<p>AKA SEO optimization 😉</p>
<p>Main PCB is marked:</p>
<blockquote>
<p>HEM-7600T
MEIKO
5662769-8A
20M
MDK332V-0W</p>
</blockquote>
<p>And on the rear:</p>
<blockquote>
<p>F02Z1B
F15Z1B</p>
</blockquote>
<p>The main CPU is - apparently - from Toshiba and marked with:</p>
<blockquote>
<p>2127 HAL
T5DE1FG
369440</p>
</blockquote>
<p>I can&rsquo;t find anything specific. The only result in google is <a href="https://www.fomalhaut.co.jp/0000-List_Schedule_Master.xls" target="_blank" rel="noopener noreffer">this spreadsheet</a>. If you look closely, you&rsquo;ll find the string <code>T5DE1FG (TOSHIBA)</code> in column <code>L</code> on rows <code>1254</code> and <code>1255</code>.</p>
<p>The pressure sensor is labeled:</p>
<ul>
<li><a href="https://www.mouser.com/c/i/sensors/pressure-sensors/?q=PP-02" target="_blank" rel="noopener noreffer"><code>PP02 L8HW</code></a> which appears to be an Omron made sensor.</li>
</ul>
<p>The small 8 pin IC adjacent to the main processor is labeled:</p>
<blockquote>
<p>4G64
12953</p>
</blockquote>
<p>BTLE PCB is marked:</p>
<ul>
<li><code>MODEL: HHX-MD05T</code></li>
<li><a href="https://fccid.io/Q6ZHHXMD05T" target="_blank" rel="noopener noreffer"><code>FCC ID: Q6ZHHXMD05T</code></a></li>
<li><code>IC: 10623A-HHXMD05T</code></li>
<li><code>Anatel 13257-20-10304</code></li>
<li><code>007-AE0102</code></li>
<li><code>9545448-2A</code></li>
</ul>
]]></description></item><item><title>Quick look inside Venstar T7850 - One of the only 'no-cloud' WiFi Thermostats that plays nice with Home Assistant</title><link>https://karlquinsland.com/venstar-t7850-teardown-review/</link><pubDate>Sat, 23 Apr 2022 00:00:00 +0000</pubDate><author>Author</author><guid>https://karlquinsland.com/venstar-t7850-teardown-review/</guid><description><![CDATA[<div class="details admonition info open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-info-circle fa-fw"></i>Info<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">As of 2022-05-11, there is an update on my experience with the thermostat <a href="#an-update-on-wifi-connectivity" rel="">below</a>!</div>
        </div>
    </div>
<p>This is another one of those posts from my never ending quest to integrate Home Assistant with All The Things!</p>
<p>The thermostat that was installed when I moved in was an early Nest thermostat. These thermostats are - for the most part - well reviewed and liked. I had no complaints&hellip; except one.</p>
<p>Google only permits programmatic interaction with Nest devices through their <a href="https://developers.google.com/nest/device-access/api" target="_blank" rel="noopener noreffer">Smart Device Management API</a>.
This API is essentially cloud hosted MQTT and requires a small fee to access.
There is no way to control a supported Nest device without an Internet connection&hellip; even if the Home Assistant server and the Nest device are on the same subnet! 👎</p>
<p>This policy makes it needlessly complicated to integrate the thermostat with Home Assistant and that cripples my climate control automations beyond a tolerable level.</p>
<p>With summer approaching, I started looking for a thermostat that would play nice with Home Assistant.
My criteria:</p>
<ul>
<li>Work with existing HVAC system and wiring.</li>
<li>Play nice with Home Assistant, preferably with a <em><strong>local</strong></em> API.</li>
<li>Cost no more than the Nest thermostat.</li>
<li>Use TCP/IP over WiFi instead of Zigbee or Zwave.</li>
</ul>
<p>As it turns out, I am not the only one on a similar hunt:</p>
<ul>
<li>
<p><a href="https://community.home-assistant.io/t/which-of-these-thermostats-have-the-best-experience-with-ha/207520" target="_blank" rel="noopener noreffer">Which of these thermostats have the best experience with HA?</a></p>
</li>
<li>
<p><a href="https://community.home-assistant.io/t/smart-thermostat-recommendations-for-2021/359434" target="_blank" rel="noopener noreffer">Smart Thermostat Recommendations for 2021</a></p>
</li>
<li>
<p><a href="https://community.home-assistant.io/t/best-easiest-and-of-course-lowest-cost-smart-thermostat-for-home-assistant/384927" target="_blank" rel="noopener noreffer">Best, easiest and of course lowest cost smart thermostat for Home Assistant</a></p>
</li>
<li>
<p><a href="https://www.reddit.com/r/homeassistant/comments/kzavi9/what_is_the_best_thermostats_to_use_with_home/" target="_blank" rel="noopener noreffer">What is the best thermostats to use with Home Automation</a></p>
</li>
</ul>
<p>The &ldquo;TL;DR:&rdquo; of most of those threads is: <em>&ldquo;Any thermostat with zwave of zigbee will work&rdquo;</em>.</p>
<p>As most people don&rsquo;t particularly care about the network protocol(s) used to link Home Assistant to the thermostat, that&rsquo;s fine advice.</p>
<p>For whatever reason, you have to dig much deeper to find people discussing <strong>WiFi</strong> based thermostats that play nice with Home Assistant w/o an internet connection but there are a few out there. I settled on the Venstar T7850.</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<h1 id="initial-impressions">Initial Impressions:</h1>
<p>Below is a super concise review that is based mostly on my initial impressions / install experience.
I have only recently acquired and installed the T7850 so I can&rsquo;t comment on any of the finer points or drawbacks that could only be known after several months experience with the thermostat.</p>
<p>TL;DR: I wish I had more insight into Google&rsquo;s disappointing decision to not implement a local API for the Nest; I&rsquo;ll uninstall the Venstar and put it up on eBay the nanosecond the Nest gets a local API!</p>
<h2 id="an-update-on-wifi-connectivity">An Update on WiFi connectivity</h2>
<p>Less than 48 hours after installing the thermostat, I noticed that Home Assistant was no longer able to control it.
Every entity on the device showed <code>Unavailable</code>. Apparently, the thermostat had fallen off the network and was struggling to get back on.</p>
<p>I went through all the usual troubleshooting steps and was able to confirm a few interesting things:</p>
<ul>
<li>Changing the network name and password didn&rsquo;t help.</li>
<li>I disabled the SSID on my access point and created an identical SSID/network key on an old raspberry pi. The thermostat was <em>usually</em> able to connect to the AP. If I powered down the raspberry pi AP and re-enabled the same network name/key on my AP, the thermostat would not connect. If left on the raspberry pi AP, the thermostat would eventually eventually &ldquo;fall off&rdquo;.</li>
</ul>
<p>I initially suspected that the initial firmware update I didn&rsquo;t consent to may have broken something and started to look for a way to downgrade the firmware to the previous version that <em>did</em> manage to connect to my AP quickly.</p>
<p>No such luck.</p>
<p>While the thermostat does have an A/B partition scheme, I couldn&rsquo;t find any way to force a downgrade or even get older firmware files from the manufacturer.</p>
<p>After a few factory resets and additional troubleshooting, I started to look around&hellip; and apparently this is not a new problem.</p>
<p>Here are two &lsquo;relatively new&rsquo; reddit threads that mention similar connection issues with similar models in the same product family:</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Source: /r/homeassistant post:
            <a href="https://www.reddit.com/r/homeassistant/comments/nge04w/all_local_control_thermostat_with_mqtt_and_home/hvxxpwy/?context=3"> 
                ALL Local Control Thermostat with MQTT and Home Assistant - Venstar T7900
                </a> 
        </p> 
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Source: /r/thermostats post:
            <a href="https://www.reddit.com/r/thermostats/comments/og9bae/comment/hgzqdmj/?context=3"> 
                Venstar T7900 - problem with WIFI
                </a> 
        </p> 
    </figcaption>
    
</figure>


<p>And an Amazon question from years ago indicating that this might not be a &rsquo;new&rsquo; issue:</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Source: Amazon question: 
            <a href="https://www.amazon.com/ask/questions/Tx2N92LOB3XBR7U"> 
                My venstar phone app says thermostat is offline. How do I reconnect it ?
                </a> 
        </p> 
    </figcaption>
    
</figure>


<p>A Home Assistant community/support form poster seems to have a similar issue and even offers a fix&hellip; which did not work.</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Source: Home Assistant community forums: 
            <a href="https://community.home-assistant.io/t/venstar-t7900-trane-air-conditioning-amana-forced-air-furnace/314969"> 
                Venstar T7900 &amp; Trane Air Conditioning / Amana Forced Air Furnace
                </a> 
        </p> 
    </figcaption>
    
</figure>


<p>My access point is also a Unifi AP so of course there are a few threads on the unifi support forums:</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Source: Ubiquity community forums: 
            <a href="https://community.ui.com/questions/Trouble-associating-Venstar-Wifi-thermostats-with-one-particular-UAP-AC-PRO/ad597f22-b8ff-4b7c-8e01-1676e92cc318"> 
                Trouble associating Venstar Wifi thermostats with one particular UAP-AC-PRO
                </a> 
        </p> 
    </figcaption>
    
</figure>


<div class="details admonition note open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-pencil-alt fa-fw"></i>Note<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">Note: <a href="https://fccid.io/MUH-SKYPORT2/Attestation-Statements/Models-Covered-2531030" target="_blank" rel="noopener noreffer">The FCC documents indicate</a> that Venstar did re-brand the thermostat for <code>First Alert</code> and <code>Bionaire</code>. It is likely that they also did this for <code>Carrier</code> as well judging by <a href="https://images.google.com/search?q=carrier&#43;infinity&#43;touch&#43;control&amp;tbm=isch" target="_blank" rel="noopener noreffer">pictures</a> of a <code>Carrier Infinity Touch Control</code> thermostat.</div>
        </div>
    </div>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Source: Ubiquity community forums: 
            <a href="https://community.ui.com/questions/Cant-connect-to-Carrier-Infinity-Thermostat/e95531ef-ac18-452a-be4d-7ac0157258fe"> 
                Cant connect to Carrier Infinity Thermostat
                </a> 
        </p> 
    </figcaption>
    
</figure>


<p>The user name seems familiar; probably the same user from one of the above reddit threads:
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Source: Ubiquity community forums: 
            <a href="https://community.ui.com/questions/Venstar-T7900-Thermostat-Wont-Connect-to-WiFi/48eff0a3-5b27-4cdd-9c2f-80bcdb5e0bc3"> 
                Venstar T7900 Thermostat Won&#39;t Connect to WiFi
                </a> 
        </p> 
    </figcaption>
    
</figure>

</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Source: Ubiquity community forums: 
            <a href="https://community.ui.com/questions/Venstar-ColorTouch-Thermostat-Unable-to-Connect-to-AC-LR/77e08c30-246d-4a39-923c-c912c259fca9"> 
                Venstar ColorTouch Thermostat Unable to Connect to AC-LR
                </a> 
        </p> 
    </figcaption>
    
</figure>


<div class="details admonition warning open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-exclamation-triangle fa-fw"></i>TL;DR:<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><p>Ubiquity&rsquo;s Unifi line of wireless access points has a pretty solid reputation for a reason; by and large they just work. I have installed dozens of them over the years and have supported installs with <em>thousands</em> of them and had far fewer issues with those customers/sites than with your typical &lsquo;soho&rsquo; routers and other consumer-grade access points.</p>
<p>As of <strong>right now</strong>, I have a little more than a hundred wireless devices hanging off of the same AP that the thermostat failed to reliably connect to. Over the past several years, I have acquired many more devices and - with the exception of <strong>one other device</strong> - I have never had issues connecting anything to my wireless network.</p>
<p>Even if only some users experience issues with Venstar thermostats connecting to WiFi, I have to wonder why the issue exists at all. It&rsquo;s 2022 and there&rsquo;s no excuse for basic WiFi network compatibility issues like the kind that were more common in the bad old days of early WiFi circa <em>2005</em>. Somehow, the hundred+ other devices got their WiFi right&hellip; what is Venstar missing?</p>
<p>While I didn&rsquo;t want to introduce <em>yet another</em> wireless&rsquo;s networking standard to my home, I am <em>considerably</em> happier with the Honeywell TH6320ZW2003 that has replaced the T7850.</p>
</div>
        </div>
    </div>
<h2 id="the-good">The Good</h2>
<ul>
<li>It has <em>optional</em> cloud connectivity! It&rsquo;s trivial to turn this off and - as far as I can tell - it is <strong>mostly</strong> disabled. More on that <a href="#network" rel="">below</a>.</li>
<li>API is <a href="https://developer.venstar.com/documentation/" target="_blank" rel="noopener noreffer">documented</a>!</li>
<li>API accessible over HTTP or HTTPS and can be put behind <a href="https://en.wikipedia.org/wiki/Basic_access_authentication" target="_blank" rel="noopener noreffer">BasicAuth</a>! 👏</li>
<li>Thermostat has <em>lots</em> of tweaks and options meant for &lsquo;power users&rsquo;. These settings ship with reasonably sane default values. I suspect that most of these options are included in the &ldquo;residential&rdquo; devices only because they&rsquo;re already baked into the firmware for &ldquo;commercial&rdquo; customers that legitimately do need lots of knobs to adjust.</li>
<li>It&rsquo;s a reasonably good looking LCD screen; viewing angles are decent and the screen is plenty readable in direct sunlight when the brightness is turned all the way up.</li>
<li>The piezoelectric beeper can be disabled in software! 🔇</li>
</ul>
<h2 id="the-bad">The Bad</h2>
<ul>
<li>The API is <a href="#api-limitations" rel="">pretty limited</a>.</li>
<li>The screen has an integrated <em>resistive</em> touch panel. This was a poor choice for for a product design in 2014/2015 and is inexcusable for in 2022! 👎</li>
<li>There is no way to use your own TLS certificate. You have to use the certificate generated by the device. 🙁</li>
<li>There is no way to disable automatic firmware updates or view release notes on device. If there&rsquo;s an update found, the thermostat will download it and restart&hellip; even if the user is <em>actively using the device</em>. 😡 Even <a href="https://support.microsoft.com/en-us/windows/defer-feature-updates-in-windows-10-770c0ea8-eee5-ae25-f695-8e33f541e04d" target="_blank" rel="noopener noreffer">windows (finally) let you push the update to <em>after</em> you&rsquo;re done using the device</a>!</li>
<li>There is no ambient brightness sensor or presence detection sensor so the screen is always on at one brightness level.</li>
<li>The device has WiFI and communicates with the mothership using TLS1.2&hellip; but somehow it does not have <a href="https://en.wikipedia.org/wiki/Network_Time_Protocol" target="_blank" rel="noopener noreffer">NTP</a> support! Yep! This is literally the <strong>only</strong> internet enabled <em>thing</em> that I own that <strong>still requires me to manually set the date/time</strong> 😡. What a glaring oversight!</li>
</ul>
<h3 id="api-limitations">API limitations</h3>
<div class="details admonition warning open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-exclamation-triangle fa-fw"></i>Warning<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><p>The only <em>documented</em> portions of the API <a href="https://developer.venstar.com/documentation/#query" target="_blank" rel="noopener noreffer">cover interrogating the device for state about sensors and mode</a>.
Keep these limitations in mind when considering exactly what you want to be able to control via the API.</p>
<p>E.G.: It was <em>very</em> disappointing to find out that I can&rsquo;t adjust the screen on/off/brightness state via the API! So much for automatically turning the screen at night and waking it only when nearby motion was detected!</p>
</div>
        </div>
    </div>
<p>There is no <em>documented</em> way to control most of the other device settings that can be manipulated through the screen.
Things you can do via the screen but not via the (documented) API:</p>
<ul>
<li>Adjust the date / time</li>
<li>Adjust the screen brightness</li>
<li>Adjust any program/schedule settings or adjust vacation mode settings</li>
<li>Adjust setpoint limits (e.g.: don&rsquo;t let the user try to cool below 25°C or heat above 35°C)</li>
<li>Set/Disable Screen lock (requires a PIN code to access controls)</li>
<li>Set &lsquo;screensaver&rsquo; functionality. You can&rsquo;t toggle this via the API nor can you set the &ldquo;idle timeout&rdquo; setting or upload custom photos. You have to resort to a desktop / electron app to do so!</li>
</ul>
<p>I have not bothered with the &ldquo;skyport&rdquo; remote control functionality that Venstar offers but their marketing literature implies that some of the above points <em>can</em> be manipulated via their remote service. This leads me to believe that there is more to the API that what is documented publicly.</p>
<p>Given that the thermostat seems to have it&rsquo;s own CA created by Venstar engineering, I would bet that simple TLS proxy will not be enough to discover any undocumented API endpoints in the unit that could allow for more control.</p>
<p>If anybody does know of a local API endpoint that allows for controlling the screen brightness&hellip;<a href="https://karlquinsland.com/contact/" rel="">please do get in touch</a>!</p>
<h1 id="teardown">Teardown</h1>
<p>It&rsquo;s not a particularly complicated device: everything is on one side of a multi-layer PCB.
A ton of electronics for directly interfacing with thermostat wires and a few ICs for all the fun stuff!</p>
<p>The photos are mine, taken right before installing the unit.
There are more / similar photos at the <a href="https://fccid.io/MUH-SKYPORT2/Internal-Photos/Internal-Photos-Revised-2531033" target="_blank" rel="noopener noreffer">FCC filing</a> if you&rsquo;re curious.</p>
<p>I am including mine for some additional detail and as a &lsquo;mirror&rsquo; of the FCC photos. Shoutout to the <em>amazing</em> <code>fccid.io</code> ❤️!</p>
<p>The main PCB is readily accessed - just remove the rear panel / wall mount bracket.</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            I don&#39;t see any (mechanical) relays
            
                
                
        </p> 
    </figcaption>
    
</figure>


<p>Lots of passives and misc ICs and a few unpopulated footprints. This is consistent with <a href="https://fccid.io/MUH-SKYPORT2/Attestation-Statements/Models-Covered-2531030" target="_blank" rel="noopener noreffer">some of the documentation on file with the FCC</a>: there is 1 PCB for all 6 products in the family and the only significant difference is the software and the humidity sensor.
If i had to guess, I&rsquo;d be that <code>U13</code> is the humidity sensor.</p>
<p>Only one obvious pin header but the silkscreen <code>JP2</code> implies that there&rsquo;s another one somewhere (<code>JP1</code>).
The pins are suspiciously close to the full sized SD card and don&rsquo;t match the pinout for an obvious UART but 6 pins could be JTAG.</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>There&rsquo;s nothing remarkable on the other side; just a connection for the LCD and a beeper. At least the beeper module is trivial to &ldquo;factory delete&rdquo; if the software option to disable it ever stops working!</p>
<p>The full sized SD card is for users to store photos and firmware upgrades.
Photo parsing is notoriously tricky so there&rsquo;s a decent chance that a malicious photo could be crafted to attack the thermostat. 🤔</p>
<p>All the business logic lives under the big metal shield. I didn&rsquo;t probe the two test points but they certainly look like they could be UART or similar interface to the app processor.</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Highly integrated ARM with external flash and ram. Almost a given these days!
            
                
                
        </p> 
    </figcaption>
    
</figure>


<p>Here&rsquo;s a partial shot of the LCD panel barcode.
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>

</p>
<p>And a quick bonus picture! I took this just a few moments after the thermostat had been installed and powered up.
I had connected it to the WiFi network just 45 seconds before and was exploring the system settings when the unit locked up for a second and then kicked me to this screen:</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            No way to cancel or defer. No explanation of &#39;why&#39;!
            
                
                
        </p> 
    </figcaption>
    
</figure>


<p>There was no explanation for the abrupt reboot but after the device came back, the system settings indicated the device was running the latest firmware.</p>
<p><strong>Note:</strong> Look at the date/time! The device <em>obviously</em> has been able to phone home and download the latest firmware file&hellip; but does nothing with the NTP server it asked for (and received!)</p>
<h1 id="other-technical-details">Other technical details</h1>
<h2 id="firmware">Firmware</h2>
<p>The firmware updates can be obtained through the desktop app. They are written out to a SD card with this directory structure:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">❯ tree
</span></span><span class="line"><span class="cl">.
</span></span><span class="line"><span class="cl">├── FOUND.000
</span></span><span class="line"><span class="cl">│   └── FILE0000.CHK
</span></span><span class="line"><span class="cl">├── System Volume Information
</span></span><span class="line"><span class="cl">│   ├── IndexerVolumeGuid
</span></span><span class="line"><span class="cl">│   └── WPSettings.dat
</span></span><span class="line"><span class="cl">├── VC
</span></span><span class="line"><span class="cl">│   └── firmware
</span></span><span class="line"><span class="cl">│       └── Update.bin
</span></span><span class="line"><span class="cl">├── VH
</span></span><span class="line"><span class="cl">│   ├── dealer.bin
</span></span><span class="line"><span class="cl">│   ├── dealerlogo.bin
</span></span><span class="line"><span class="cl">│   ├── dealerlogo - Copy.jpg
</span></span><span class="line"><span class="cl">│   ├── firmware1a
</span></span><span class="line"><span class="cl">│   │   └── update.bin
</span></span><span class="line"><span class="cl">│   ├── gallery
</span></span><span class="line"><span class="cl">│   │   ├── 0.bin
</span></span><span class="line"><span class="cl">│   │   ├── gallery.bin
</span></span><span class="line"><span class="cl">│   │   └── thumbs
</span></span><span class="line"><span class="cl">│   │       └── 0.bin
</span></span><span class="line"><span class="cl">│   ├── name.bin
</span></span><span class="line"><span class="cl">│   ├── schedule.bin
</span></span><span class="line"><span class="cl">│   └── settings.bin
</span></span><span class="line"><span class="cl">├── VR
</span></span><span class="line"><span class="cl">│   └── firmware
</span></span><span class="line"><span class="cl">│       └── Update.bin
</span></span><span class="line"><span class="cl">└── VW
</span></span><span class="line"><span class="cl">    └── firmware1a
</span></span><span class="line"><span class="cl">        └── update.bin
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="m">12</span> directories, <span class="m">16</span> files
</span></span></code></pre></td></tr></table>
</div>
</div><p>The <code>dealerlogo - Copy.jpg</code> was me testing something related to the &ldquo;user photos&rdquo; function of the desktop app. The <code>gallery/*.bin</code> files are just re-sized jpeg files.
There is a mechanism for backing up / importing settings using <code>bin</code> files which are just <code>json</code> files store in the root directory for the device model; <code>VH</code> in this case. Those files are not pictured above as I discovered the export function after I drafted this section of the post.</p>
<p>I could do a whole <em>series</em> of posts on reverse engineering the firmware but that&rsquo;s going to have to wait for another day / more time. In the interim, here&rsquo;s some of my findings:</p>
<ul>
<li>The user interface is javascript. Yep! The entire interface is a single page web app that seems to be hosted by a binary called <code>maestero2</code>. Not much comes up on google, but <a href="https://github.com/grassroot72/Maestro2" target="_blank" rel="noopener noreffer">this repo</a> does seem like it could be related.
<ul>
<li>I can <em>see</em> in the source code where the javascript controls the LCD backlight&hellip; so there is <strong>absolutely no good reason</strong> why I can&rsquo;t do the same via the &ldquo;local API&rdquo;.</li>
</ul>
</li>
<li>The device appears to use mutual TLS when talking to the remote endpoints. Try to make a request to <code>https://ctupdate.skyport.io/feed</code> and you&rsquo;ll see the server ask you for a certificate :D.
<ul>
<li>I don&rsquo;t know if the certificates are <em>per device</em> or not. The certificates are stored in a separate <code>jffs2</code> partition which is <em>not</em> distributed in the firmware updates (as best I can tell).</li>
<li>There are a few strings that mention code signing certificates but I have not probed the firmware update routines in depth to know how it all works.</li>
</ul>
</li>
<li>It appears that the TTY is disabled and there are no telnet/ssh services started on boot so it&rsquo;s unclear how the <code>root</code> user can be used remotely&hellip; but I did find this in <code>/etc/shadow</code>: <code>root:$1$JEstzl9y$Ed7nAJIsY/0irewnqZoqn1:10933:0:99999:7:::</code>.</li>
</ul>
<h2 id="network">network</h2>
<div class="details admonition warning open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-exclamation-triangle fa-fw"></i>Warning<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">Even though the <code>skyport</code> functionality has been switched off, <a href="#dns" rel="">I still see the thermostat phoning home to <code>ctupdate.skyport.io</code> on startup</a>. In addition to the usual &ldquo;write firewall rules preventing WAN access&rdquo;, I would suggest sinkholing the <code>skyport.io</code> domain.</div>
        </div>
    </div>
<p>Like with all new devices, I ran <code>tcpdump</code> while setting it up. Almost all of the traffic was TLS1.2 protected but I did notice a few interesting things from the packet capture.</p>
<p>Immediately after booting / joining the network, the device sends out a DHCP request:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">Dynamic Host Configuration Protocol (Discover)
</span></span><span class="line"><span class="cl">    Message type: Boot Request (1)
</span></span><span class="line"><span class="cl">    Hardware type: Ethernet (0x01)
</span></span><span class="line"><span class="cl">    Hardware address length: 6
</span></span><span class="line"><span class="cl">    Hops: 0
</span></span><span class="line"><span class="cl">    Transaction ID: 0x1308ee40
</span></span><span class="line"><span class="cl">    Seconds elapsed: 0
</span></span><span class="line"><span class="cl">    Bootp flags: 0x0000 (Unicast)
</span></span><span class="line"><span class="cl">    Client IP address: 0.0.0.0
</span></span><span class="line"><span class="cl">    Your (client) IP address: 0.0.0.0
</span></span><span class="line"><span class="cl">    Next server IP address: 0.0.0.0
</span></span><span class="line"><span class="cl">    Relay agent IP address: 0.0.0.0
</span></span><span class="line"><span class="cl">    Client MAC address: MurataMa_de:ad:bf (10:98:c3:de:ad:bf)
</span></span><span class="line"><span class="cl">    Client hardware address padding: 00000000000000000000
</span></span><span class="line"><span class="cl">    Server host name not given
</span></span><span class="line"><span class="cl">    Boot file name not given
</span></span><span class="line"><span class="cl">    Magic cookie: DHCP
</span></span><span class="line"><span class="cl">    Option: (53) DHCP Message Type (Discover)
</span></span><span class="line"><span class="cl">        Length: 1
</span></span><span class="line"><span class="cl">        DHCP: Discover (1)
</span></span><span class="line"><span class="cl">    Option: (61) Client identifier
</span></span><span class="line"><span class="cl">        Length: 7
</span></span><span class="line"><span class="cl">        Hardware type: Ethernet (0x01)
</span></span><span class="line"><span class="cl">        Client MAC address: MurataMa_de:ad:bf (10:98:c3:de:ad:bf)
</span></span><span class="line"><span class="cl">    Option: (57) Maximum DHCP Message Size
</span></span><span class="line"><span class="cl">        Length: 2
</span></span><span class="line"><span class="cl">        Maximum DHCP Message Size: 576
</span></span><span class="line"><span class="cl">    Option: (55) Parameter Request List
</span></span><span class="line"><span class="cl">        Length: 7
</span></span><span class="line"><span class="cl">        Parameter Request List Item: (1) Subnet Mask
</span></span><span class="line"><span class="cl">        Parameter Request List Item: (3) Router
</span></span><span class="line"><span class="cl">        Parameter Request List Item: (6) Domain Name Server
</span></span><span class="line"><span class="cl">        Parameter Request List Item: (12) Host Name
</span></span><span class="line"><span class="cl">        Parameter Request List Item: (15) Domain Name
</span></span><span class="line"><span class="cl">        Parameter Request List Item: (28) Broadcast Address
</span></span><span class="line"><span class="cl">        Parameter Request List Item: (42) Network Time Protocol Servers
</span></span><span class="line"><span class="cl">    Option: (60) Vendor class identifier
</span></span><span class="line"><span class="cl">        Length: 12
</span></span><span class="line"><span class="cl">        Vendor class identifier: udhcp 1.29.2
</span></span><span class="line"><span class="cl">    Option: (255) End
</span></span><span class="line"><span class="cl">        Option End: 255
</span></span><span class="line"><span class="cl">    Padding: 0000000000000000000000000000000000000000
</span></span></code></pre></td></tr></table>
</div>
</div><p><strong>Note:</strong> <code>de:ad:bf </code> is replacing the <em>actual</em> octets of my thermostat MAC :).</p>
<p>Interesting! The DHCP server <em>explicitly asks for a NTP server</em> and then the thermostat &hellip; does not use it!</p>
<p>The <code>udhcp 1.29.2</code> string implies a relatively recent build of - possibly - busybox running the show&hellip;</p>
<p>The next packets after that are basic SSDP and IGMP:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">NOTIFY ALIVE SDDP/1.0
</span></span><span class="line"><span class="cl">From: &#34;123.456.789.012:1902&#34;
</span></span><span class="line"><span class="cl">Host: &#34;10:98:c3:de:ad:bf&#34;
</span></span><span class="line"><span class="cl">Max-Age: 300
</span></span><span class="line"><span class="cl">Type: &#34;venstar:control4_thermostat_proxy:colortouch&#34;
</span></span><span class="line"><span class="cl">Primary-Proxy: &#34;thermostatV2&#34;
</span></span><span class="line"><span class="cl">Proxies: &#34;thermostatV2&#34;
</span></span><span class="line"><span class="cl">Manufacturer: &#34;Venstar&#34;
</span></span><span class="line"><span class="cl">Model: &#34;ColorTouch&#34;
</span></span><span class="line"><span class="cl">Driver: &#34;venstar_ip_colortouch_hvac.c4z&#34;
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">Internet Group Management Protocol
</span></span><span class="line"><span class="cl">    [IGMP Version: 3]
</span></span><span class="line"><span class="cl">    Type: Membership Report (0x22)
</span></span><span class="line"><span class="cl">    Reserved: 00
</span></span><span class="line"><span class="cl">    Checksum: 0xea03 [correct]
</span></span><span class="line"><span class="cl">    [Checksum Status: Good]
</span></span><span class="line"><span class="cl">    Reserved: 0000
</span></span><span class="line"><span class="cl">    Num Group Records: 1
</span></span><span class="line"><span class="cl">    Group Record : 239.255.255.250  Change To Exclude Mode
</span></span><span class="line"><span class="cl">        Record Type: Change To Exclude Mode (4)
</span></span><span class="line"><span class="cl">        Aux Data Len: 0
</span></span><span class="line"><span class="cl">        Num Src: 0
</span></span><span class="line"><span class="cl">        Multicast Address: 239.255.255.250
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="dns">DNS</h3>
<p>And <em>just before</em> the TLS traffic, there is a single DNS query:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">Queries
</span></span><span class="line"><span class="cl">    ctupdate.skyport.io: type A, class IN
</span></span><span class="line"><span class="cl">        Name: ctupdate.skyport.io
</span></span><span class="line"><span class="cl">        [Name Length: 19]
</span></span><span class="line"><span class="cl">        [Label Count: 3]
</span></span><span class="line"><span class="cl">        Type: A (Host Address) (1)
</span></span><span class="line"><span class="cl">        Class: IN (0x0001)
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="web-server">Web server</h3>
<p>After setting a user/password and selecting the <code>https</code> option for the local API, here&rsquo;s what I see:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span><span class="lnt">76
</span><span class="lnt">77
</span><span class="lnt">78
</span><span class="lnt">79
</span><span class="lnt">80
</span><span class="lnt">81
</span><span class="lnt">82
</span><span class="lnt">83
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">❯ openssl s_client -connect 123.456.789.012:443
</span></span><span class="line"><span class="cl">CONNECTED<span class="o">(</span>00000003<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="nv">depth</span><span class="o">=</span><span class="m">0</span> <span class="nv">C</span> <span class="o">=</span> US, <span class="nv">ST</span> <span class="o">=</span> California, <span class="nv">L</span> <span class="o">=</span> Chatsworth, <span class="nv">O</span> <span class="o">=</span> Venstar Inc., <span class="nv">OU</span> <span class="o">=</span> Engineering, <span class="nv">CN</span> <span class="o">=</span> CT1A_100163664
</span></span><span class="line"><span class="cl">verify error:num<span class="o">=</span>20:unable to get <span class="nb">local</span> issuer certificate
</span></span><span class="line"><span class="cl">verify <span class="k">return</span>:1
</span></span><span class="line"><span class="cl"><span class="nv">depth</span><span class="o">=</span><span class="m">0</span> <span class="nv">C</span> <span class="o">=</span> US, <span class="nv">ST</span> <span class="o">=</span> California, <span class="nv">L</span> <span class="o">=</span> Chatsworth, <span class="nv">O</span> <span class="o">=</span> Venstar Inc., <span class="nv">OU</span> <span class="o">=</span> Engineering, <span class="nv">CN</span> <span class="o">=</span> CT1A_100163664
</span></span><span class="line"><span class="cl">verify error:num<span class="o">=</span>21:unable to verify the first certificate
</span></span><span class="line"><span class="cl">verify <span class="k">return</span>:1
</span></span><span class="line"><span class="cl"><span class="nv">depth</span><span class="o">=</span><span class="m">0</span> <span class="nv">C</span> <span class="o">=</span> US, <span class="nv">ST</span> <span class="o">=</span> California, <span class="nv">L</span> <span class="o">=</span> Chatsworth, <span class="nv">O</span> <span class="o">=</span> Venstar Inc., <span class="nv">OU</span> <span class="o">=</span> Engineering, <span class="nv">CN</span> <span class="o">=</span> CT1A_100163664
</span></span><span class="line"><span class="cl">verify <span class="k">return</span>:1
</span></span><span class="line"><span class="cl">---
</span></span><span class="line"><span class="cl">Certificate chain
</span></span><span class="line"><span class="cl"> <span class="m">0</span> s:C <span class="o">=</span> US, <span class="nv">ST</span> <span class="o">=</span> California, <span class="nv">L</span> <span class="o">=</span> Chatsworth, <span class="nv">O</span> <span class="o">=</span> Venstar Inc., <span class="nv">OU</span> <span class="o">=</span> Engineering, <span class="nv">CN</span> <span class="o">=</span> CT1A_100163664
</span></span><span class="line"><span class="cl">   i:C <span class="o">=</span> US, <span class="nv">ST</span> <span class="o">=</span> California, <span class="nv">O</span> <span class="o">=</span> Venstar Inc., <span class="nv">OU</span> <span class="o">=</span> Engineering, <span class="nv">CN</span> <span class="o">=</span> Skyport Root CA
</span></span><span class="line"><span class="cl">---
</span></span><span class="line"><span class="cl">Server certificate
</span></span><span class="line"><span class="cl">-----BEGIN CERTIFICATE-----
</span></span><span class="line"><span class="cl">MIIGAzCCA+ugAwIBAgIJAIMdu2UK2QoqMA0GCSqGSIb3DQEBDQUAMGkxCzAJBgNV
</span></span><span class="line"><span class="cl">BAYTAlVTMRMwEQYDVQQIDApDYWxpZm9ybmlhMRUwEwYDVQQKDAxWZW5zdGFyIElu
</span></span><span class="line"><span class="cl">Yy4xFDASBgNVBAsMC0VuZ2luZWVyaW5nMRgwFgYDVQQDDA9Ta3lwb3J0IFJvb3Qg
</span></span><span class="line"><span class="cl">Q0EwHhcNMTkxMTA4MDUxOTM2WhcNMzcwNTE3MjM1OTU5WjB9MQswCQYDVQQGEwJV
</span></span><span class="line"><span class="cl">UzETMBEGA1UECAwKQ2FsaWZvcm5pYTETMBEGA1UEBwwKQ2hhdHN3b3J0aDEVMBMG
</span></span><span class="line"><span class="cl">A1UECgwMVmVuc3RhciBJbmMuMRQwEgYDVQQLDAtFbmdpbmVlcmluZzEXMBUGA1UE
</span></span><span class="line"><span class="cl">AwwOQ1QxQV8xMDAxNjM2NjQwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoIC
</span></span><span class="line"><span class="cl">AQDIYpgYtd/+KVEwVKTAHjFzp3FZXJx+RFQjUwdCGMOOWqrztokmNF5I/qXbWqA7
</span></span><span class="line"><span class="cl">okUmO7FKUdW3hAKq358tjcPZytEr1RtRQVtc4/fg35IwtNWf1g/UACazkFOgmOLd
</span></span><span class="line"><span class="cl">yQ4AwMWvfgDFLxREGH3WfPCHJS7v1ddO02WZMEpligK8g7iSEsqw1ZD4gD2xIbwf
</span></span><span class="line"><span class="cl">OxgbIdWJyakNbOebVMul5HUoqtVOLawaOefgh65gf4x0gBgMJ95E32cXZxjUB016
</span></span><span class="line"><span class="cl">r2sAanTkeK7gJhYjVuwFkepEgiLEfj+VY23Qv6CnhR2Kg4g1hv0ZxacHvNw1HCYU
</span></span><span class="line"><span class="cl">5o38tyQQWNHFw4+CadUPLzSnjhK/8TaaIdVcXDgxpQTdwr3l4Q8Dyz4SX+VihdGT
</span></span><span class="line"><span class="cl">Zb2s4K7emuJFlQv9ZlSYpltC7o44sLnQbETBdDwoS8EjOb/T1QyfEvNoqLvWSPOD
</span></span><span class="line"><span class="cl">V1VPPAHp68q9DOgnXa8PJj9nlz0btITmYWhGPobtGeD25Qxl/FulAZLaHWVDfkXb
</span></span><span class="line"><span class="cl">VbWquGMxm5xkYqcsI7UM4r0O8W94x9QZcobQ1sgZ6rs1vDsMGCZBmdexvqZgGN/t
</span></span><span class="line"><span class="cl">oPEIA8MaI4R1UfkqJx3haxYS4AOYt2IEE12kiPeAZlER4PIKbcGny7BgJPi72JSb
</span></span><span class="line"><span class="cl">eacDm7djJBqTP/G/O6Pdny9aWh2WVh0Kom5pLCHm3qydawIDAQABo4GZMIGWMAkG
</span></span><span class="line"><span class="cl">A1UdEwQCMAAwSQYJYIZIAYb4QgENBDwWOklmIHlvdSBrZXB0IHRoZSBzbWFsbCBy
</span></span><span class="line"><span class="cl">dWxlcywgeW91IGNvdWxkIGJyZWFrIHRoZSBiaWcgb25lcy4wHQYDVR0OBBYEFNwF
</span></span><span class="line"><span class="cl">Q5GfrnSlRDSGT/QZ6f283vPMMB8GA1UdIwQYMBaAFLEAWEXFwN/oc5doNhyOE47D
</span></span><span class="line"><span class="cl">w/qxMA0GCSqGSIb3DQEBDQUAA4ICAQA6sUR9fZ0CiwWFnYOKQ5CTzy2rDsXGtP9t
</span></span><span class="line"><span class="cl">DJcN/Ga396Pd2CwxDxp1fXXsbrcLELsuupYnLtsm6VzAaix+fgTtxeFTaQR4vqPf
</span></span><span class="line"><span class="cl">wMXfRzLe0Bk6m+BpWSslD7FTCyDVCnGtuHGCfesOFVvqR897vgU4mGG0qsI8OoD9
</span></span><span class="line"><span class="cl">0EEeX2HVG8QYvKSbJF3FhmKiCDemG9TVfITHKSody/iHpUNo0uHHGjsPfVXq4iWe
</span></span><span class="line"><span class="cl">bkQ3dqRXZmjcGPwzQK4CjlKcmXBDWyEhR25/U+dDItaTQet0GGaYK+KrpjDLH56d
</span></span><span class="line"><span class="cl">XWm7YDP5/EMbfRR7en7L6Ca3TFhpyNF5PxDfmz1fywqr85wdAb/ACJztew9f9hqG
</span></span><span class="line"><span class="cl">35rOH+OqucGeHqfYk6UW46fjXSnybBMJG8+HcVUMpYn7myfFK0tnwQZb477dV7Fs
</span></span><span class="line"><span class="cl">G+rYViPjPmfgxi5/kvXpn0FvTzNg73vkgSBCRxuFIPtMkHrpQdSTr1umAXhKCd7d
</span></span><span class="line"><span class="cl">3mragcL61lhKhh17vOBG73C4bhlAGBFsuACYrmnJFghlfv2X5PbLksc3h8P0DEn3
</span></span><span class="line"><span class="cl">36x/fGTVRvq14/9hxeKmOhL5KFQXrja5YJpoLRs/pgBl2zXQGF3+dLdbcAdaDVjy
</span></span><span class="line"><span class="cl">LyDkRMOfhugXmRh7TuWaqGrpcyXVeL4Kn6nWpq51PEval1HKoUMIkahRJu2WK0BT
</span></span><span class="line"><span class="cl"><span class="nv">kVBzZrkbvA</span><span class="o">==</span>
</span></span><span class="line"><span class="cl">-----END CERTIFICATE-----
</span></span><span class="line"><span class="cl"><span class="nv">subject</span><span class="o">=</span><span class="nv">C</span> <span class="o">=</span> US, <span class="nv">ST</span> <span class="o">=</span> California, <span class="nv">L</span> <span class="o">=</span> Chatsworth, <span class="nv">O</span> <span class="o">=</span> Venstar Inc., <span class="nv">OU</span> <span class="o">=</span> Engineering, <span class="nv">CN</span> <span class="o">=</span> CT1A_100163664
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nv">issuer</span><span class="o">=</span><span class="nv">C</span> <span class="o">=</span> US, <span class="nv">ST</span> <span class="o">=</span> California, <span class="nv">O</span> <span class="o">=</span> Venstar Inc., <span class="nv">OU</span> <span class="o">=</span> Engineering, <span class="nv">CN</span> <span class="o">=</span> Skyport Root CA
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">---
</span></span><span class="line"><span class="cl">No client certificate CA names sent
</span></span><span class="line"><span class="cl">Peer signing digest: SHA256
</span></span><span class="line"><span class="cl">Peer signature type: RSA-PSS
</span></span><span class="line"><span class="cl">Server Temp Key: X25519, <span class="m">253</span> bits
</span></span><span class="line"><span class="cl">---
</span></span><span class="line"><span class="cl">SSL handshake has <span class="nb">read</span> <span class="m">2277</span> bytes and written <span class="m">430</span> bytes
</span></span><span class="line"><span class="cl">Verification error: unable to verify the first certificate
</span></span><span class="line"><span class="cl">---
</span></span><span class="line"><span class="cl">New, TLSv1.2, Cipher is ECDHE-RSA-AES128-GCM-SHA256
</span></span><span class="line"><span class="cl">Server public key is <span class="m">4096</span> bit
</span></span><span class="line"><span class="cl">Secure Renegotiation IS supported
</span></span><span class="line"><span class="cl">Compression: NONE
</span></span><span class="line"><span class="cl">Expansion: NONE
</span></span><span class="line"><span class="cl">No ALPN negotiated
</span></span><span class="line"><span class="cl">SSL-Session:
</span></span><span class="line"><span class="cl">    Protocol  : TLSv1.2
</span></span><span class="line"><span class="cl">    Cipher    : ECDHE-RSA-AES128-GCM-SHA256
</span></span><span class="line"><span class="cl">    Session-ID: 1391DF607DB2888CA81220E321CB06CA6B5CBDE2031483A3E4AC075AD95A6A5D
</span></span><span class="line"><span class="cl">    Session-ID-ctx:
</span></span><span class="line"><span class="cl">    Master-Key: 7A37EEBC584574EBA6B114E85CCD685B30F640D17D38A9B2E90AC8739BC76EB4A15E38A8F3B74F3D428328F874C9807C
</span></span><span class="line"><span class="cl">    PSK identity: None
</span></span><span class="line"><span class="cl">    PSK identity hint: None
</span></span><span class="line"><span class="cl">    SRP username: None
</span></span><span class="line"><span class="cl">    Start Time: <span class="m">1650744968</span>
</span></span><span class="line"><span class="cl">    Timeout   : <span class="m">7200</span> <span class="o">(</span>sec<span class="o">)</span>
</span></span><span class="line"><span class="cl">    Verify <span class="k">return</span> code: <span class="m">21</span> <span class="o">(</span>unable to verify the first certificate<span class="o">)</span>
</span></span><span class="line"><span class="cl">    Extended master secret: yes
</span></span></code></pre></td></tr></table>
</div>
</div><p>The thermostat was pretty well closed off. <code>nmap</code> came back with port 53 and 443 open. Taking a closer lok at 443:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">PORT    STATE SERVICE  VERSION
</span></span><span class="line"><span class="cl">443/tcp open  ssl/http Neato Botvac Connected
</span></span><span class="line"><span class="cl"><span class="p">|</span> ssl-cert: Subject: <span class="nv">commonName</span><span class="o">=</span>CT1A_100163664/organizationName<span class="o">=</span>Venstar Inc./stateOrProvinceName<span class="o">=</span>California/countryName<span class="o">=</span>US
</span></span><span class="line"><span class="cl"><span class="p">|</span> Issuer: <span class="nv">commonName</span><span class="o">=</span>Skyport Root CA/organizationName<span class="o">=</span>Venstar Inc./stateOrProvinceName<span class="o">=</span>California/countryName<span class="o">=</span>US
</span></span><span class="line"><span class="cl"><span class="p">|</span> Public Key type: rsa
</span></span><span class="line"><span class="cl"><span class="p">|</span> Public Key bits: <span class="m">4096</span>
</span></span><span class="line"><span class="cl"><span class="p">|</span> Signature Algorithm: sha512WithRSAEncryption
</span></span><span class="line"><span class="cl"><span class="p">|</span> Not valid before: 2019-11-08T05:19:36
</span></span><span class="line"><span class="cl"><span class="p">|</span> Not valid after:  2037-05-17T23:59:59
</span></span><span class="line"><span class="cl"><span class="p">|</span> MD5:   3efc 609c bbf3 cfb6 ddfb 4cbe bb54 1c63
</span></span><span class="line"><span class="cl"><span class="p">|</span>_SHA-1: 1e65 43f9 <span class="m">8404</span> 9bf6 acf4 0be8 <span class="m">5116</span> 78ff bc02 f024
</span></span><span class="line"><span class="cl">Service Info: Device: specialized
</span></span></code></pre></td></tr></table>
</div>
</div><p>And taking a closer look @ the web server:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-text" data-lang="text"><span class="line"><span class="cl">❯ curl -vvv --insecure -L &#39;https://123.456.789.012/&#39; -H &#39;Authorization: Digest username=&#34;SomeUserNameHere&#34;, realm=&#34;thermostat&#34;, nonce=&#34;1234567890&#34;, uri=&#34;/&#34;, response=&#34;some_64_char_string_here&#34;, qop=auth, nc=00000003, cnonce=&#34;some16CharStrHere&#34;&#39;
</span></span><span class="line"><span class="cl">*   Trying 123.456.789.012:443...
</span></span><span class="line"><span class="cl">* Connected to 123.456.789.012 (123.456.789.012) port 443 (#0)
</span></span><span class="line"><span class="cl">* ALPN, offering h2
</span></span><span class="line"><span class="cl">* ALPN, offering http/1.1
</span></span><span class="line"><span class="cl">* TLSv1.3 (OUT), TLS handshake, Client hello (1):
</span></span><span class="line"><span class="cl">* TLSv1.3 (IN), TLS handshake, Server hello (2):
</span></span><span class="line"><span class="cl">* TLSv1.2 (IN), TLS handshake, Certificate (11):
</span></span><span class="line"><span class="cl">* TLSv1.2 (IN), TLS handshake, Server key exchange (12):
</span></span><span class="line"><span class="cl">* TLSv1.2 (IN), TLS handshake, Server finished (14):
</span></span><span class="line"><span class="cl">* TLSv1.2 (OUT), TLS handshake, Client key exchange (16):
</span></span><span class="line"><span class="cl">* TLSv1.2 (OUT), TLS change cipher, Change cipher spec (1):
</span></span><span class="line"><span class="cl">* TLSv1.2 (OUT), TLS handshake, Finished (20):
</span></span><span class="line"><span class="cl">* TLSv1.2 (IN), TLS handshake, Finished (20):
</span></span><span class="line"><span class="cl">* SSL connection using TLSv1.2 / ECDHE-RSA-AES128-GCM-SHA256
</span></span><span class="line"><span class="cl">* ALPN, server did not agree to a protocol
</span></span><span class="line"><span class="cl">* Server certificate:
</span></span><span class="line"><span class="cl">*  subject: C=US; ST=California; L=Chatsworth; O=Venstar Inc.; OU=Engineering; CN=CT1A_100163664
</span></span><span class="line"><span class="cl">*  start date: Nov  8 05:19:36 2019 GMT
</span></span><span class="line"><span class="cl">*  expire date: May 17 23:59:59 2037 GMT
</span></span><span class="line"><span class="cl">*  issuer: C=US; ST=California; O=Venstar Inc.; OU=Engineering; CN=Skyport Root CA
</span></span><span class="line"><span class="cl">*  SSL certificate verify result: unable to get local issuer certificate (20), continuing anyway.
</span></span><span class="line"><span class="cl">&gt; GET / HTTP/1.1
</span></span><span class="line"><span class="cl">&gt; Host: 123.456.789.012
</span></span><span class="line"><span class="cl">&gt; User-Agent: curl/7.82.0
</span></span><span class="line"><span class="cl">&gt; Accept: */*
</span></span><span class="line"><span class="cl">&gt; Authorization: Digest username=&#34;SomeUserNameHere&#34;, realm=&#34;thermostat&#34;, nonce=&#34;1234567890&#34;, uri=&#34;/&#34;, response=&#34;some_64_char_string_here&#34;, qop=auth, nc=00000003, cnonce=&#34;some16CharStrHere&#34;
</span></span><span class="line"><span class="cl">&gt;
</span></span><span class="line"><span class="cl">* Mark bundle as not supporting multiuse
</span></span><span class="line"><span class="cl">&lt; HTTP/1.1 200 OK
</span></span><span class="line"><span class="cl">&lt; Transfer-Encoding: chunked
</span></span><span class="line"><span class="cl">&lt;
</span></span><span class="line"><span class="cl">* Connection #0 to host 123.456.789.012 left intact
</span></span><span class="line"><span class="cl">{&#34;api_ver&#34;:9,&#34;type&#34;:&#34;residential&#34;,&#34;model&#34;:&#34;COLORTOUCH&#34;,&#34;firmware&#34;:&#34;6.91&#34;}%
</span></span></code></pre></td></tr></table>
</div>
</div><p>Unfortunately no headers that leak details about the web server implementation. 😒</p>
<h2 id="ics-and-distinguishing-markings">ICs and distinguishing markings</h2>
<p>As noted above, the WiFi module was covered with a soldered on shield. Fortunately, the FCC filings give a good look!
The chip is a <code>muRata Type ZX WiFi Module</code> which is the <a href="https://learn.sparkfun.com/tutorials/nest-protect-teardown/sensor-scavenger-hunt" target="_blank" rel="noopener noreffer"><em>same</em> WiFi radio thats inside the Nest Protect</a>!</p>
<p>The larger of the two metal shields on the PCB can be removed giving a look at the main application processor:</p>
<ul>
<li>
<p><code>W971GG</code> (probably <a href="https://www.alldatasheet.com/datasheet-pdf/pdf/555599/WINBOND/W971GG6JB-25.html" target="_blank" rel="noopener noreffer"><code>W971GG6JB</code></a>) - DRAM.</p>
</li>
<li>
<p><a href="https://www.digikey.com/en/products/detail/winbond-electronics/W29N01HVBINA/5804021" target="_blank" rel="noopener noreffer"><code>W29N01HVBINA</code></a>: 1gigabit flash.</p>
</li>
<li>
<p><a href="https://www.microchip.com/en-us/product/AT91SAM9G15" target="_blank" rel="noopener noreffer"><code>AT91SAM9G15</code></a> - ARM926 with the peripherals needed for driving a LCD and reading from the resistive (🤮) touchscreen</p>
</li>
</ul>
<p>The LCD is marked with (partially visible):</p>
<pre><code>AT043HS40D07R2
30671T051KD
190805527 (0000000) L101661
</code></pre>
]]></description></item></channel></rss>