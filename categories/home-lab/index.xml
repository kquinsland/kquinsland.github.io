<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Home-Lab - Category - karl</title><link>https://karlquinsland.com/categories/home-lab/</link><description>Home-Lab - Category - karl</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 19 Mar 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://karlquinsland.com/categories/home-lab/" rel="self" type="application/rss+xml"/><item><title>Arris SB8200 Prometheus Exporter</title><link>https://karlquinsland.com/arris-sb8200-prometheus-exporter/</link><pubDate>Tue, 19 Mar 2024 00:00:00 +0000</pubDate><author>Author</author><guid>https://karlquinsland.com/arris-sb8200-prometheus-exporter/</guid><description><![CDATA[<!-- markdownlint-disable-file MD002 -->
<p>This is a very short &ldquo;announcement&rdquo; post.</p>
<p>To beef up my home-lab observability stack, I&rsquo;ve been working on a few projects to expose more data to Prometheus.
Getting metrics from my cable modem has been on the &ldquo;todo&rdquo; list for literally years.
There have been various metric exporters written in the past but they have either been archived/deleted off of GitHub or are otherwise inappropriate for my needs.
So, I wrote my own.</p>
<p>The GitHub repo is <a href="https://github.com/kquinsland/sb820_prometheus_exporter/" target="_blank" rel="noopener noreffer">here</a> if you want to dive right in.</p>
<p>When set up, one possible way to visualize the data looks like this:</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            blah
            
                
                
        </p> 
    </figcaption>
    
</figure>


<h2 id="a-few-observations">A few observations</h2>
<p>While building out the dashboard / prototyping it, a few things immediately stood out as &ldquo;interesting&rdquo;</p>
<p>After rebooting the modem, the metrics that keep track of error-corrected symbols sent/received over the connection are 0.
This makes sense as the modem has just been rebooted and hasn&rsquo;t had time to accumulate any errors yet.
The first jump in correctable/uncorrectable errors&hellip; happens to corelate directly with a meaningful change in both received/downstream power <em>and</em> transmit/upstream power.</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            blah
            
                
                
        </p> 
    </figcaption>
    
</figure>


<p>The metric exporter keeps track of how long scraping the modem&rsquo;s web interface takes as well as weather or not the scraped data was complete / well formed.
The time it takes to scrape a particular endpoint increases pretty quickly after power up before leveling off.
I&rsquo;d love to know why the web server on the modem slows down so quickly after booting up&hellip;.</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            blah
            
                
                
        </p> 
    </figcaption>
    
</figure>


]]></description></item><item><title>I made a thing: GPS/PPS clock source for ntpd</title><link>https://karlquinsland.com/yet-another-gps-pps-opnsense/</link><pubDate>Sat, 15 Oct 2022 00:00:00 +0000</pubDate><author>Author</author><guid>https://karlquinsland.com/yet-another-gps-pps-opnsense/</guid><description><![CDATA[<div class="details admonition tip open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-lightbulb fa-fw"></i>Tip<i class="details-icon fas fa-angle-right fa-fw"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content"><p>This is just a &lsquo;pointer&rsquo; post.</p>
<p>All the details are in the <a href="https://github.com/kquinsland/yet-another-gps-pps-opnsense" target="_blank" rel="noopener noreffer"><code>kquinsland/yet-another-gps-pps-opnsense</code> repo</a> on github.</p>
</div>
        </div>
    </div>
<hr>
<p>For the longest time, I had a dedicated raspberry pi with a GPS module acting as the <code>ntp</code> server for my home network. I chose to use a dedicated host for this because my router - at the time - did not have a serial port that I could leverage.</p>
<p>Recently, the miroSD card on the ntp pi died and I decided to leverage the serial port in my  current router rather than re-build the operating system on the ntp host.</p>
<p>It didn&rsquo;t take that much time to but together a bare-bones schematic in KiCad.
One LCSC order, one mouser order and about a week later, I had a basic RS232 &lt;-&gt; TTL converter for use with a cheap GPS module</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>After a bit more testing, I was convinced I hadn&rsquo;t made any egregious mistakes and the new module didn&rsquo;t pose a significant threat/risk to my production router.</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


]]></description></item><item><title>Adding an APC UPS to Home Assistant energy dashboard</title><link>https://karlquinsland.com/apc-ups-energy-in-homeassistant/</link><pubDate>Sun, 05 Sep 2021 00:00:00 +0000</pubDate><author>Author</author><guid>https://karlquinsland.com/apc-ups-energy-in-homeassistant/</guid><description><![CDATA[<p><strong>EDIT:</strong> (2021-09-19): After some <a href="https://old.reddit.com/r/homeassistant/comments/pi3pv2/how_to_use_an_apc_ups_as_an_energy_dashboard/hbqudh5/" target="_blank" rel="noopener noreffer">back and forth</a> with <a href="https://old.reddit.com/user/Laxarus" target="_blank" rel="noopener noreffer">/u/Laxarus</a>, there is now a simpler method! The <code>snmp</code> platform still does not support setting <code>device_class</code>, but wrapping the sensor in another template sensor is not required; just do so in your <a href="https://www.home-assistant.io/docs/configuration/customizing-devices/" target="_blank" rel="noopener noreffer"><code>customize.yaml</code></a>. I have called this out <a href="#edit-2021-09-19" rel="">below</a>.</p>
<hr>
<p>This is another quick &ldquo;here&rsquo;s how I did it, hope this help&rdquo; post.</p>
<p>In preparation for the inevitable grid brownouts that summer 2021 would bring, I installed a rather beefy UPS for my home network / lab. After some browsing, I discovered a local eWaste liquidator with a really good deal on some second-hand APC UPSs.</p>
<p>A few hundred dollars and about 150 lbs later, the UPS was installed in the server rack. Despite being a newer generation, the software on the UPS has a <em><strong>TON</strong></em> of similarities to the <a href="/monitoring-ap7900-switched-pdu-prometheus-grafana/" rel="">older style of PDU that I installed in my lab </a> a while back. This made it relatively straightforward to use the same
pattern to start getting UPS metrics into Grafana as well.</p>
<p>After getting the basic monitoring up and running, I started to draft this post to serve as an &lsquo;update&rsquo; to the APC9700 post. Life got in the way and the post sat in the drafts branch where it was completely forgotten about&hellip;. until <a href="https://www.home-assistant.io/blog/2021/08/04/release-20218/" target="_blank" rel="noopener noreffer">Home Assistant released their new Energy dashboard</a>. Now that HA could show the energy consumption of individual devices right next to the cumulative consumption and production data, the post was worth finishing and expanding on.</p>
<p>The configuration that I was <em>going</em> to publish is <a href="#current-and-voltage-independently" rel="">below</a> but after finding <a href="https://old.reddit.com/r/homeassistant/comments/pi3pv2/how_to_use_an_apc_ups_as_an_energy_dashboard/hbpqzr6/" target="_blank" rel="noopener noreffer">this</a> comment by <a href="https://old.reddit.com/user/Laxarus" target="_blank" rel="noopener noreffer">Laxarus</a> on <a href="https://old.reddit.com/user/Navydevildoc" target="_blank" rel="noopener noreffer">Navydevildoc</a>&rsquo;s <a href="https://old.reddit.com/r/homeassistant/comments/pi3pv2/how_to_use_an_apc_ups_as_an_energy_dashboard/" target="_blank" rel="noopener noreffer">reddit post</a>, I&rsquo;ve got a revised and simpler configuration to share!</p>
<h2 id="long-term-statistics-in-home-assistant">Long Term Statistics in Home Assistant</h2>
<p>Before diving into the configuration, a little bit of context. In preparation for the energy sub system, the Home Assistant developers have been working on a &lsquo;<a href="https://developers.home-assistant.io/docs/core/entity/sensor/#long-term-statistics" target="_blank" rel="noopener noreffer">long term statistics</a>&rsquo; (LTS) framework. The LTS framework is meant to give HA some improved speed and capabilities when dealing with a lot of data! The energy subsystem is the first &lsquo;consumer&rsquo; of the LTS framework.</p>
<p>Home Assistant will look for two &lsquo;properties&rsquo; on a given sensor to determine if that sensor will work with the LTS framework.
For a sensor/entity to &lsquo;work&rsquo; with the long term stats system it must:</p>
<ul>
<li>have a property called <code>device_class</code> with a value of <code>energy</code>, <code>gas</code>, or <code>monetary</code></li>
<li>have a property called <code>state_class</code> with a value of either <code>measurement</code> or <code>total_increasing</code></li>
</ul>
<p>In testing, I was <em>not</em> able to get a sensor with <code>state_class: measurement</code> and <code>device_class: energy</code> to &lsquo;work&rsquo; with the energy sub system. Fortunately, this does not apply with the concise configuration <a href="#a-single-oid-for-power-consumption" rel="">below</a>!</p>
<p>As the LTS framework is still new, many platforms - including the SNMP platform - do not support the required properties:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">Invalid config for [sensor.snmp]: [state_class] is an invalid option for [sensor.snmp]. Check: sensor.snmp-&gt;state_class.
</span></span><span class="line"><span class="cl">Invalid config for [sensor.snmp]: [device_class] is an invalid option for [sensor.snmp]. Check: sensor.snmp-&gt;device_class.
</span></span></code></pre></td></tr></table>
</div>
</div><p>The <code>template</code> platform <em>has</em> been updated to work with the <code>device_class</code> or <code>state_class</code> properties though.
So that&rsquo;s the technique to use here; a <code>template</code> sensor with the correct <code>{device,state}_class</code> properties set will wrap the snmp sensor.</p>
<p>Hopefully a future release of HA will include <code>{device,state}_class</code> support for the <code>snmp</code> platform; the <code>template</code> sensors in the configuration snips below won&rsquo;t be needed!</p>
<h3 id="edit-2021-09-19">EDIT (2021-09-19)</h3>
<p>You don&rsquo;t need to wrap the snmp sensor in a template sensor. As of home assistant 2021.09, the <code>snmp</code> platform does not allow you to set <code>device_class: energy</code>&hellip; however, you <em>can</em> set the <code>device_class</code> attribute on the snmp sensor through <code>customize.yaml</code>:</p>
<p>Make sure your configuration file loads the customization file:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">❯ cat configuration.yaml <span class="p">|</span> grep customize
</span></span><span class="line"><span class="cl">  customize: !include customize.yaml
</span></span></code></pre></td></tr></table>
</div>
</div><p>If your snmp sensor was called <code>sensor.usp_energy</code>, then you would add an object called <code>sensor.ups_energy</code> like so:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">❯ cat customize.yaml <span class="p">|</span> grep -a2 ups
</span></span><span class="line"><span class="cl">sensor.ups_energy:
</span></span><span class="line"><span class="cl">  state_class: total_increasing
</span></span><span class="line"><span class="cl">  device_class: energy
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="configure-home-assistant">Configure Home Assistant</h2>
<p>I have broken my <code>configuration.yaml</code> up to make things easier to manage. Almost all entity/device/template/sensor..etc configuration is done through files placed in the <code>devices/**/*</code> directory:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">❯ cat configuration.yaml <span class="p">|</span> grep -E <span class="s1">&#39;devices/sensor|template/&#39;</span>
</span></span><span class="line"><span class="cl">sensor: !include_dir_merge_list devices/sensor/
</span></span><span class="line"><span class="cl">template: !include_dir_merge_list devices/template/
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="a-single-oid-for-power-consumption">A single OID for power consumption</h3>
<p>Thanks again to <a href="https://old.reddit.com/user/Laxarus" target="_blank" rel="noopener noreffer">Laxarus</a> for the <a href="https://old.reddit.com/r/homeassistant/comments/pi3pv2/how_to_use_an_apc_ups_as_an_energy_dashboard/hbpqzr6/" target="_blank" rel="noopener noreffer">tip</a> about the <code>upsHighPrecOutputEnergyUsage</code> OID!</p>
<p>First, create the &lsquo;raw&rsquo; sensor using the <code>snmp</code> platform:</p>
<p><code>devices/sensor/snmp.yaml</code>:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl">- <span class="nt">platform</span><span class="p">:</span><span class="w"> </span><span class="l">snmp</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;UPS Energy (raw)&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">host</span><span class="p">:</span><span class="w"> </span><span class="m">192.168.1.1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># The current in tenths of amperes drawn by the load on the UPS.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># Contained in Module(s): PowerNet-MIB</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c">##</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">baseoid</span><span class="p">:</span><span class="w"> </span><span class="l">.1.3.6.1.4.1.318.1.1.1.4.3.6.0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># Determines whether the sensor should start and keep working even if the SNMP host is unreachable or not responding.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># This allows the sensor to be initialized properly even if, for example, your printer is not on when you start Home Assistant.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">accept_errors</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># UPS reports in tens of kWh so we&#39;ll need to divide by 10 to get kWh; HA only accepts kWh or Wh for sensors</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c">#   that will &#39;work&#39; on the energy dashboard</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">unit_of_measurement</span><span class="p">:</span><span class="w"> </span><span class="l">kWh</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">value_template</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ ((value | int) / 10) | float}}&#34;</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>Then, wrap the <code>snmp</code> sensor with the necessary properties:</p>
<p><code>devices/template/ups_energy.yaml</code>:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl">- <span class="nt">sensor</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;UPS Energy&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="c"># Unique ID is required for mgmt through the web UI</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">unique_id</span><span class="p">:</span><span class="w"> </span><span class="l">tmpl-ups-energy</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">icon</span><span class="p">:</span><span class="w"> </span><span class="l">mdi:lightning-bolt</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="c"># Required for Energy dashboard</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">state_class</span><span class="p">:</span><span class="w"> </span><span class="l">total_increasing</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">device_class</span><span class="p">:</span><span class="w"> </span><span class="l">energy</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">unit_of_measurement</span><span class="p">:</span><span class="w"> </span><span class="l">kWh</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">state</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ (states(&#39;sensor.ups_energy_raw&#39;) | float) }}&#34;</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>Restart Home Assistant and you should now be able to add <code>sensor.ups_energy</code> to the list of individual devices on your Energy Dashboard :D.</p>
<h3 id="current-and-voltage-independently">Current and Voltage independently</h3>
<p>After sorting through the <em>massive</em> MIB file that APC publishes; I only found ways to measure the voltage and current via SNMP. I assumed that APC meant for you to calculate the power use on your own from the voltage and current.</p>
<p>As it turns out, APC has a <code>upsHighPrecOutputEnergyUsage</code> field which reports: <code>The output energy usage of the UPS in hundredths of kWh.</code> If your APC device publishes a value on the OID <code>.1.3.6.1.4.1.318.1.1.1.4.3.6.0</code> then you can skip the configuration below; use the more concise configuration <a href="#a-single-oid-for-power-consumption" rel="">above</a>. If your devices <em><strong>does not</strong></em> publish the cumulative energy consumption, it can still be calculated manually.</p>
<p>The manual approach below is a lot like the concise approach above; uses two <code>snmp</code> sensors to collect the voltage and current from the UPS and then wrap everything in a LTS-compatible <code>template</code> sensor to get the data to show up on the energy dashboard.</p>
<p><code>devices/sensor/snmp.yaml</code>:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="c"># Unfortunately, there is no direct &#39;watt&#39; field. We need to calculate this on our own</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># P = IV so if we can get the current and voltage, we can figure out the power</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">##</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">platform</span><span class="p">:</span><span class="w"> </span><span class="l">snmp</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;UPS Output Current&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">host</span><span class="p">:</span><span class="w"> </span><span class="m">192.168.1.1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># The current in tenths of amperes drawn by the load on the UPS.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># Contained in Module(s): PowerNet-MIB</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c">##</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">baseoid</span><span class="p">:</span><span class="w"> </span><span class="l">.1.3.6.1.4.1.318.1.1.1.4.3.4.0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># Determines whether the sensor should start and keep working even if the SNMP host is unreachable or not responding.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># This allows the sensor to be initialized properly even if, for example, your printer is not on when you start Home Assistant.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">accept_errors</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># For reasons that I don&#39;t understand... HA does not like it when i specify &#39;device_class&#39; :/</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c">#device_class: current</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">unit_of_measurement</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;A&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># Because the number is in 10ths of amps, we need to shift the decimal by 1 place</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c">#   43 becomes 4.3</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c">##</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">value_template</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{((value | int) / 10) | float}}&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">platform</span><span class="p">:</span><span class="w"> </span><span class="l">snmp</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;UPS Output Voltage&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">host</span><span class="p">:</span><span class="w"> </span><span class="m">192.168.1.1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c">#The output voltage of the UPS system in tenths of VAC.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># Contained in Module(s): PowerNet-MIB</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c">##</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">baseoid</span><span class="p">:</span><span class="w"> </span><span class="l">.1.3.6.1.4.1.318.1.1.1.4.3.1.0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># Determines whether the sensor should start and keep working even if the SNMP host is unreachable or not responding.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># This allows the sensor to be initialized properly even if, for example, your printer is not on when you start Home Assistant.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">accept_errors</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">unit_of_measurement</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;V&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># Because the number is in 10ths of volts, we need to shift the decimal by 1 place</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c">#   1211 becomes 121.1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c">##</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">value_template</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{((value | int) / 10) | float}}&#34;</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p><code>devices/template/ups_energy.yaml</code>:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="c"># The docs around the long term stats support for a sensor are not super clear and seem to be a bit contradictory.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># Both the power and current sensors are &#39;point in time&#39; sensors and DO NOT represent an &#39;always increasing&#39; value.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># The docs seem to imply that HA will do the integration for you if the sensor has `state_class` set to `measurement` or</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#   `total_increasing`. But elsewhere in the docs, you have this:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#         Home Assistant tracks the min, max and mean value during the statistics period.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#         The state_class property must be set to measurement, and the device_class must not be either of `energy`, `gas`, or `monetary`.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># In testing, I was only able to get sensors that had `total_increasing` and `energy` set to show up / work with the energy dashboard. It looks like a `measurement` sensor _could_ be used... but only if the `last_reset` property can be set to 0... and currently this can&#39;t be done via YAML.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># So we lie about the sensor and tell HA that it&#39;s a `total_increasing` sensor and we just hope that the value never drops more than 10% which appears to be the signal to HA that the meter has been reset :/</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># https://developers.home-assistant.io/docs/core/entity/sensor/#long-term-statistics</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c"># https://www.home-assistant.io/integrations/sensor/</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">##</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">sensor</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;UPS Power&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="c"># Unique ID is required for mgmt through the web UI</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">unique_id</span><span class="p">:</span><span class="w"> </span><span class="l">tmpl-UPS-power-use</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">icon</span><span class="p">:</span><span class="w"> </span><span class="l">mdi:lightning-bolt</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="c"># This sensor records the instantaneous power load on the UPS... it is a measurement at that point in time</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">state_class</span><span class="p">:</span><span class="w"> </span><span class="l">measurement</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">device_class</span><span class="p">:</span><span class="w"> </span><span class="l">power</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">unit_of_measurement</span><span class="p">:</span><span class="w"> </span><span class="l">W</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">state</span><span class="p">:</span><span class="w"> </span><span class="p">&gt;</span><span class="sd">
</span></span></span><span class="line"><span class="cl"><span class="sd">        {% set current = states(&#39;sensor.UPS_output_current&#39;) | float %}
</span></span></span><span class="line"><span class="cl"><span class="sd">        {% set voltage = states(&#39;sensor.UPS_output_voltage&#39;) | float %}
</span></span></span><span class="line"><span class="cl"><span class="sd">        {{ (current * voltage) | round (2) }}</span><span class="w">        
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="nt">sensor</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;UPS Energy&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="c"># Unique ID is required for mgmt through the web UI</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">unique_id</span><span class="p">:</span><span class="w"> </span><span class="l">tmpl-UPS-energy</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">icon</span><span class="p">:</span><span class="w"> </span><span class="l">mdi:lightning-bolt</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="c"># Lie to HA about the type of sensor so we get values in the dashboard.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">state_class</span><span class="p">:</span><span class="w"> </span><span class="l">total_increasing</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">device_class</span><span class="p">:</span><span class="w"> </span><span class="l">energy</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="c"># Since we are pretending to integrate over time, we are in Wh now.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="c"># Good thing, too... because the energy dashboard WILL NOT use any sensor that does not report in kWh or Wh</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">unit_of_measurement</span><span class="p">:</span><span class="w"> </span><span class="l">Wh</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">state</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ (states(&#39;sensor.UPS_power&#39;) | float) }}&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="c"># or, for kWh</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="c">#state: &#34;{{ (states(&#39;sensor.UPS_power&#39;) | float)/1000 }}&#34;</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div>]]></description></item><item><title>PoE powered Stack Light</title><link>https://karlquinsland.com/poe-stack-light/</link><pubDate>Sun, 28 Feb 2021 00:00:00 +0000</pubDate><author>Author</author><guid>https://karlquinsland.com/poe-stack-light/</guid><description><![CDATA[<figure >

    
        
        

    

    <figcaption>
        
        <p>
            The lights are much brighter than they appear in this picture; had to intentionally darken the image to prevent camera from blowing out the colors.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<p><a href="https://en.wikipedia.org/wiki/Stack_light" target="_blank" rel="noopener noreffer">Stack/signal lights</a> are <em>everywhere</em> in industrial applications for good reason: they&rsquo;re a compact and relatively information-dense indicator system. They always seemed like the kind of indicator that only people with expensive machines needed. Until I found that they can be had for just under $6/light from Ali Express, that is.</p>
<p>I don&rsquo;t have any giant industrial machines to attach one to, but I do have a non-trivial number of containers/servers/networked-devices running and they all emit various notifications, usually through email. Who wouldn&rsquo;t mind a novel way to move those notifications beyond email/push notifications into the physical world 🤔?</p>
<ul>
<li>🟢 =&gt; Everything is nominal</li>
<li>🟠 =&gt; Check your email; a <code>WARN</code> level event has occurred</li>
<li>🔴 =&gt; A <code>WARN</code> or <code>ERROR</code> level condition has occurred; something (ISP down?) is preventing delivery of notifications so check the logs/dashboards directly</li>
<li>🔵 =&gt; A new <code>INFO</code> level message available in Home Assistant</li>
<li>⚪ =&gt; Not sure; either a &ldquo;A HIGH priority task is past due&rdquo; or a &lsquo;modifier&rsquo; for above status</li>
</ul>
<p>While waiting for the light to arrive from China, I started to design something to drive it.
It was immediately obvious that an ESP32 module would be <strong>ideal</strong> to run the show, and just for the fun of it, I decided to make the entire thing (optionally) controlled and powered over Ethernet.</p>
<h2 id="home-assistant">Home Assistant</h2>
<p>It wouldn&rsquo;t be an ESP32 powered project w/o the the <em>fantastic</em> <a href="https://esphome.io/" target="_blank" rel="noopener noreffer">ESPHome</a> framework! With ESPHome comes trivial Home Assistant integration; each individual light / channel on the stack light is automatically configured via MQTT a a light:</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Stack light is controlled via MQTT making it easy to control from Home Assistant or any other program that can speak MQTT.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<p>A slightly modified version of the ESPHome config that I use to build the firmware for the light is attached at the end of this post.</p>
<p>Unfortunately, the one Home Assistant integration that I had in mind is currently not feasible!
I wanted to light the blue light when there is any new/unread Home Assistant <a href="https://www.home-assistant.io/integrations/persistent_notification/" target="_blank" rel="noopener noreffer">persistent notifications</a>;
a real life &ldquo;unread&rdquo; badge of sorts.</p>
<p>There is no way to get the list / count of active notifications unless you&rsquo;re a <a href="https://github.com/home-assistant/core/blob/41b45c7f78f9937520b38126cedf228da7507d7d/homeassistant/components/persistent_notification/__init__.py#L203" target="_blank" rel="noopener noreffer">websocket client</a>, however.</p>
<p>Using the <a href="https://github.com/home-assistant/core/blob/41b45c7f78f9937520b38126cedf228da7507d7d/homeassistant/components/persistent_notification/__init__.py#L30" target="_blank" rel="noopener noreffer"><code>persistent_notifications_updated</code></a> event as a trigger won&rsquo;t work because the event payload lacks useful data; I can&rsquo;t figure out the number of notifications or their state&hellip; just that either notification has been created or dismissed.
If I wanted the blue light on any time a notification was either created or destroyed, I could use this trigger. But the light is no longer a useful indicator; it would be on the first time a notification was created or destroyed and then it would never be off.</p>
<p>Manually trying to <a href="https://community.home-assistant.io/t/dismiss-of-a-persistent-notification-as-trigger-for-automations/135621/5" target="_blank" rel="noopener noreffer">keep track of the number of notification created/dismissed actions</a> just feels like a hacky workaround that could easily get out of sync, too.</p>
<p>Oh well 😔.</p>
<h2 id="bom">BOM</h2>
<p>I&rsquo;ll cover the individual 3D printed and electronic components below. Beyond them, you&rsquo;ll need some additional hardware:</p>
<ul>
<li>4x <a href="https://www.mcmaster.com/catalog/91290A113" target="_blank" rel="noopener noreffer">m3x8mm</a> screws</li>
<li>4x <a href="https://www.mcmaster.com/catalog/91274A115" target="_blank" rel="noopener noreffer">m4x8mm</a> screws</li>
<li>4x <a href="https://www.mcmaster.com/catalog/91274A117" target="_blank" rel="noopener noreffer">m4x10mm</a> screws</li>
<li>6x <a href="https://www.kjmagnetics.com/proddetail.asp?prod=BC41" target="_blank" rel="noopener noreffer">Neodymium magnets</a> sized 20mm x 6mm x 2mm. These are optional and are leftover magnets from this <a href="https://www.google.com/search?client=firefox-b-1-d&amp;q=prusa&#43;mk3&#43;enclosure&#43;2" target="_blank" rel="noopener noreffer">build</a></li>
<li>10mm diameter <a href="https://www.amazon.com/s?k=10mm&#43;cabinet&#43;door&#43;pad" target="_blank" rel="noopener noreffer">anti-slip pads</a>. Thees are optional but will keep the base from sliding around.</li>
</ul>
<p>I&rsquo;ve linked to the screws that I used, but any similar ones should work. Strong glue could also work, but is not recommended.</p>
<p>The m3 screws are for attaching the PCB to the printed part (in yellow, below)
The shorter m4 screws are for attaching the base (yellow) to the lid (dark blue) and the longer screws are for attaching the stack light to the lid.</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            About to start melting threads into the 3D printed parts.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<h4 id="stack-light">Stack light</h4>
<p>Looking quickly through Ali Express, it seems that the lights come in a few different styles, but all appear to be modular in construction.
Regardless of lamp style, they all appear to come in 2-5 lamp variants and some have configuration switches that allow for customizing the behavior per lamp.</p>
<p>The ESPHome code and PCB are designed to accommodate up to 6 colors but will work with less.</p>
<p>No matter which style and colors you select, make sure you get one with a <strong>positive <a href="https://en.wikipedia.org/wiki/Anode" target="_blank" rel="noopener noreffer">anode</a></strong> rated for <strong>12V DC</strong>.</p>
<p>The exact lamp that I used is <a href="https://www.aliexpress.com/item/1005001391165850.html" target="_blank" rel="noopener noreffer">here</a>.</p>
<h4 id="esp32-module">ESP32 Module</h4>
<p>I chose to use the <a href="https://www.aliexpress.com/item/1005001739834076.html" target="_blank" rel="noopener noreffer">WirelessTag WT32-eth01</a> module for the onboard Ethernet circuitry at a relatively cheap price: about $10/module. Bonus: it&rsquo;s got a breadboard friendly footprint <em>and</em> castellated pads!</p>
<p>You do not need to use Ethernet for control <em>or</em> power; the ESPHome configuration below can be easily modified to use the WiFi.</p>
<p>In any case, you will need a dedicated UART programmer for the module as there is no built-in USB port on the WT32-eth01.</p>
<h4 id="pcb">PCB</h4>
<p>Nothing much to see here; just a simple board to consolidate connections for what would otherwise be a mess of wires.</p>
<p>Since I was already using Ethernet for the data, may as well use it for the power, too.
Designing my own PoE circuitry was not in scope for this project, so I went with another off-the-shelf <a href="https://www.aliexpress.com/item/32620368747.html" target="_blank" rel="noopener noreffer">module</a>. I ordered the <code>12V2A-Full 24W</code> version, but the others are likely to also have an identical internal PCB layout which should fit in the 3D printed parts. Make sure to get one that supplies the 12V that the stack light will need!</p>
<p>The PCB does not care <em>where</em> the 12V DC supply comes from.
It wouldn&rsquo;t be difficult to modify the enclosure to accommodate a <a href="https://www.aliexpress.com/item/1005001668143510.html" target="_blank" rel="noopener noreffer">USB-C Power Delivery module</a> or even just a standard barrel jack / LED power supply.</p>
<p>Like the PoE module, I use an off the shelf DC to DC converter <a href="https://www.aliexpress.com/item/32833398811.html" target="_blank" rel="noopener noreffer">module</a> to step the 12V down from the PoE dongle to 5V which the ESP32 module requires. That link is to a whole-sale lot of 10 converters. You can order the same module in quantities of one from similar listings. I buy them in bulk because it&rsquo;s more expensive to design and solder my own on each board that I build&hellip;</p>
<p>My testing isn&rsquo;t super through, but I see the total power draw (measured from the PoE supplying equipment) reaching about 4.5W when all lights are on and about 2W at at idle.</p>
<p>The ESP32 just drives some <a href="https://lcsc.com/product-detail/MOSFET_Diodes-Incorporated-DMN1019USN-7_C145103.html" target="_blank" rel="noopener noreffer">N-Channel MOSFETS</a> to switch the individual lights on/off.
They&rsquo;re the only surface mount (SOT-23-4) component; everything else can be done with through hole components. The board is designed for up to 6 colors/lights, but populate only as many MOSFETS as you need.</p>
<p>All of the screw terminals are optional; I had several spares left over from a different project, but soldering wires directly to the PCB would work as well.</p>
<p>The 6 pin screw terminal is LCSC part <a href="https://lcsc.com/product-detail/Screw-terminal_JILN-JL301-50007U02_C409139.html" target="_blank" rel="noopener noreffer"><code>C409139</code></a></p>
<p>The 2 pin screw terminal is LCSC part <a href="https://lcsc.com/product-detail/Screw-terminal_Ningbo-Kangnex-Elec-WJ129V-5-0-2P_C8463.html" target="_blank" rel="noopener noreffer"><code>C8463</code></a></p>
<p>The source and gerber files from EasyEDA are below. Upload them to your favorite PCB prototyping service or try your hand at making your own.</p>
<h4 id="printed-parts">Printed parts</h4>
<p>There are two parts: a <code>lid</code> and a <code>plate</code>. The electronics are attached to the plate and the stack light is attached to the lid. In the photos associated with this post, the <code>lid</code> is dark blue and the <code>plate</code> is yellow.</p>
<p>The plate has features for several attachment methods:</p>
<ul>
<li>magnets; meant for horizontal surfaces</li>
<li>3M command strip; probably wont be enough to do wall/ceilings, but should work in lieu of magnets on horizontal surfaces</li>
<li>4 circular indents (<code>10mm</code> diameter) included for anti-slip pads</li>
<li>drywall screw/slot mounting for walls/ceilings</li>
</ul>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            I wasn&#39;t sure where I&#39;d want to install this, so there are a few options for attaching the base to surfaces.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<p>Pause the print job at the correct layer if you intend to embed magnets:</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Insert your magnets before the layer covering thee 6 cavities is printed.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<p>Both the <code>lid</code> and <code>base</code> are easy to print; material and color are up to you, as is layer height and quality settings. The <code>stl</code> and <code>step</code> files for both are at the end of this post.
Should you want to make your own enclosure from scratch, I have also included the <code>step</code> files for the PoE dongle and PCB below.</p>
<h2 id="assemble">Assemble</h2>
<p>Assembly is relatively straightforward; its mostly integrating a few components into a simple 3d printed enclosure.</p>
<h3 id="pcb-1">PCB</h3>
<p>Solder the electronic components to the PCB. If omitting screw terminals for the stack light wires, do not solder them to the PCB yet!</p>
<p>I created the castellated pad footprint for the ESP32 module by hand and, in the version of the PCB pictured, didn&rsquo;t get the pads as close as they should be so there are some ugly solder blobs to compensate. The pads are correctly placed on the most recent PCB revision.</p>
<p>I have included two programming headers on the PCB to flash your firmware; one at <code>2.54mm</code> pitch and the other at <code>1.0mm</code> pitch, the latter of which is intended for use with <a href="https://www.aliexpress.com/item/4001122992446.html" target="_blank" rel="noopener noreffer">this</a> programmer.</p>
<p>There is a solder bridge labeled <code>EXT 3v3</code>; short this out if you intend to use the programmer to power the ESP32 module. Leave it alone if you plan to use external DC to power the device during programming.</p>
<p>I suggest programming the module <em>now</em> to verify that you&rsquo;ve built the PCB correctly and that your stack light works as expected.
Once you&rsquo;ve confirmed the electronics and software all work together, proceed to final assembly.</p>
<h2 id="everything-else">Everything else</h2>
<p>The various holes designed to receive screw threads are intentionally undersized. If you&rsquo;re not using self-tapping screws, you&rsquo;ll find it MUCH EASER to insert a <em>hot</em> screw for the first time.</p>
<p>With the screw on the end of the driver, hold the tip of the screw/threads under a flame for 5-10 seconds and then quickly rotate the screw into the plastic using a bit of extra &lsquo;pushing&rsquo; force.
Once the screw is fully inserted, allow it to fully cool (~5min) so the softened plastic has a chance to solidify around the screw threads.</p>
<p>The screws that hold the base plate to the body of the enclosure are meant to sit flush. Ensure that you screw them in fully before the plastic cools!</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            If the screws protrude even a fraction of a millimeter, the light can wobble and the magnetic attachment is weakened.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<p>While waiting for the screws to cool, cut the Ethernet and power leads from the PoE dongle down to size. Desolder the leads from the dongle, trim to be as short as possible and re-solder.</p>
<p>The less &lsquo;slack&rsquo; cable in the enclosure, the easier it will be to finish assembly!</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            I cut a few inches off the Ethernet cable and power leads so everything fits in the enclosure better.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<p>After the screws have cooled, ensure that the PCB sits flush against the mounts.</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            PCB should be flush against the mounting posts.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<p>With all wires connected, lift the PoE dongle off of the base plate slightly and align the RJ45 jack with the square hole in the enclosure.</p>
<p>Make sure the side of the base plate opposite the side with the RJ45 jack is securely mounts into the body of the enclosure!</p>
<p>Gently press the remaining side of the base plate into the enclosure. As the base plate gets closer to flush with the body, the RJ45 jack should slowly come into alignment with the wall.</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Use the plate as a lever to carefully push, then hold, the PoE dongle in place.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<p>When the base blate is completely installed into the body, the RJ45 jack should be flush with the external wall of the enclosure.</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            RJ45 jack should be flush to the outer wall of the enclosure.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<p>Attach the base plate to the enclosure body with the 4 screws, attach silicon feet or a 3M command strip and then you&rsquo;re done!</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Translucent white lenses for much less ambiguity than the stack lights with colored lenses.
            
                
                
        </p> 
    </figcaption>
    
</figure>


<h2 id="files">Files</h2>
<p>All files below are licensed under the <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank" rel="noopener noreffer">Attribution-NonCommercial-ShareAlike 4.0 International (CC BY-NC-SA 4.0)</a> license unless otherwise explicitly noted.</p>
<p><strong>None of the files below may be used for commercial purposes</strong></p>
<ul>
    
    <li>
        

        
        

        <figure>
            <a target="_blank" href="https://karlquinsland.com/poe-stack-light/images/complete/01_all_off.jpg">
                
            </a>
            
            <figcaption>
                <small>Translucent white lenses for much less ambiguity than the stack lights with colored lenses.</small>
            </figcaption>
            
        </figure>

        
    </li>
    
    <li>
        

        
        

        <figure>
            <a target="_blank" href="https://karlquinsland.com/poe-stack-light/images/assemble/base_mounting_options.png">
                
            </a>
            
            <figcaption>
                <small>I wasn&#39;t sure where I&#39;d want to install this, so there are a few options for attaching the base to surfaces.</small>
            </figcaption>
            
        </figure>

        
    </li>
    
    <li>
        

        
        

        <figure>
            <a target="_blank" href="https://karlquinsland.com/poe-stack-light/images/assemble/04_close.jpg">
                
            </a>
            
            <figcaption>
                <small>Use the plate as a lever to carefully push, then hold, the PoE dongle in place.</small>
            </figcaption>
            
        </figure>

        
    </li>
    
    <li>
        

        
        

        <figure>
            <a target="_blank" href="https://karlquinsland.com/poe-stack-light/images/complete/02_all_on.jpg">
                
            </a>
            
            <figcaption>
                <small>The lights are much brighter than they appear in this picture; had to intentionally darken the image to prevent camera from blowing out the colors.</small>
            </figcaption>
            
        </figure>

        
    </li>
    
    <li>
        
        <a target="_blank" href="https://karlquinsland.com/poe-stack-light/files/easy_eda_gerber.zip">
            <i class="far fa-file-"></i>
            files/easy_eda_gerber.zip:
            
            
            <br>
            <small>sha1: d7686b0ad88a1686a5a11cb009632b53ca474c75</small>
            
        </a>
        
    </li>
    
    <li>
        
        <a target="_blank" href="https://karlquinsland.com/poe-stack-light/files/easy_eda_source.zip">
            <i class="far fa-file-"></i>
            files/easy_eda_source.zip:
            
            
            <br>
            <small>sha1: e05a00cdca9af94dd0e8d1d8f3aa998b75c14a08</small>
            
        </a>
        
    </li>
    
    <li>
        
        <a target="_blank" href="https://karlquinsland.com/poe-stack-light/files/enclosure-lid-m1v2.stl">
            <i class="far fa-file-code"></i>
            files/enclosure-lid-m1v2.stl:
            
            <small style="font-family:'Lucida Console', monospace">stl</small> <small>file</small>
            
            
            <br>
            <small>sha1: 3870a674d9cf08bf26e3607e42ee766e9816ac6c</small>
            
        </a>
        
    </li>
    
    <li>
        
        <a target="_blank" href="https://karlquinsland.com/poe-stack-light/files/enclosure-plate-m1v2.stl">
            <i class="far fa-file-code"></i>
            files/enclosure-plate-m1v2.stl:
            
            <small style="font-family:'Lucida Console', monospace">stl</small> <small>file</small>
            
            
            <br>
            <small>sha1: 8f90b54be2a798cf87bc6ca4fc118b82669e0668</small>
            
        </a>
        
    </li>
    
    <li>
        
        <a target="_blank" href="https://karlquinsland.com/poe-stack-light/files/esphome_confg.yaml">
            <i class="far fa-file-code"></i>
            files/esphome_confg.yaml:
            
            <small style="font-family:'Lucida Console', monospace">yaml</small> <small>file</small>
            
            
        </a>
        
    </li>
    
    <li>
        
        <a target="_blank" href="https://karlquinsland.com/poe-stack-light/files/pcb.step">
            <i class="far fa-file-code"></i>
            files/pcb.step:
            
            <small style="font-family:'Lucida Console', monospace">step</small> <small>file</small>
            
            
            <br>
            <small>sha1: e212f3cd3d90a639e6518b7d11bc5cc20df09b67</small>
            
        </a>
        
    </li>
    
    <li>
        
        <a target="_blank" href="https://karlquinsland.com/poe-stack-light/files/poe-dongle.step">
            <i class="far fa-file-code"></i>
            files/poe-dongle.step:
            
            <small style="font-family:'Lucida Console', monospace">step</small> <small>file</small>
            
            
            <br>
            <small>sha1: a698c249d89f2ab2c981427df49620cb09ce5f66</small>
            
        </a>
        
    </li>
    
    <li>
        
        <a target="_blank" href="https://karlquinsland.com/poe-stack-light/files/stack-light-base.step">
            <i class="far fa-file-code"></i>
            files/stack-light-base.step:
            
            <small style="font-family:'Lucida Console', monospace">step</small> <small>file</small>
            
            
            <br>
            <small>sha1: 3c3d0d6162a985b4f09d0f9a58fdacb3f08beb78</small>
            
        </a>
        
    </li>
    
    <li>
        

        
        

        <figure>
            <a target="_blank" href="https://karlquinsland.com/poe-stack-light/images/assemble/00_flush_screws.jpg">
                
            </a>
            
            <figcaption>
                <small>If the screws protrude even a fraction of a millimeter, the light can wobble and the magnetic attachment is weakened.</small>
            </figcaption>
            
        </figure>

        
    </li>
    
    <li>
        

        
        

        <figure>
            <a target="_blank" href="https://karlquinsland.com/poe-stack-light/images/home-assistant.png">
                
            </a>
            
            <figcaption>
                <small>Stack light is controlled via MQTT making it easy to control from Home Assistant or any other program that can speak MQTT.</small>
            </figcaption>
            
        </figure>

        
    </li>
    
    <li>
        

        
        

        <figure>
            <a target="_blank" href="https://karlquinsland.com/poe-stack-light/images/assemble/02_pcb_attached.jpg">
                
            </a>
            
            <figcaption>
                <small>PCB should be flush against the mounting posts.</small>
            </figcaption>
            
        </figure>

        
    </li>
    
    <li>
        

        
        

        <figure>
            <a target="_blank" href="https://karlquinsland.com/poe-stack-light/images/complete/00_plugged_in.jpg">
                
            </a>
            
            <figcaption>
                <small>RJ45 jack should be flush to the outer wall of the enclosure.</small>
            </figcaption>
            
        </figure>

        
    </li>
    
    <li>
        

        
        

        <figure>
            <a target="_blank" href="https://karlquinsland.com/poe-stack-light/images/assemble/01_prep.jpg">
                
            </a>
            
            <figcaption>
                <small>About to start melting threads into the 3D printed parts.</small>
            </figcaption>
            
        </figure>

        
    </li>
    
    <li>
        

        
        

        <figure>
            <a target="_blank" href="https://karlquinsland.com/poe-stack-light/images/slicer.png">
                
            </a>
            
            <figcaption>
                <small>Insert your magnets before the layer covering thee 6 cavities is printed.</small>
            </figcaption>
            
        </figure>

        
    </li>
    
    <li>
        

        
        

        <figure>
            <a target="_blank" href="https://karlquinsland.com/poe-stack-light/images/assemble/03_wire.jpg">
                
            </a>
            
            <figcaption>
                <small>I cut a few inches off the Ethernet cable and power leads so everything fits in the enclosure better.</small>
            </figcaption>
            
        </figure>

        
    </li>
    
</ul>

]]></description></item><item><title>Monitoring APC AP7900 switched PDU with Prometheus and Grafana</title><link>https://karlquinsland.com/monitoring-ap7900-switched-pdu-prometheus-grafana/</link><pubDate>Sun, 27 Dec 2020 00:00:00 +0000</pubDate><author>Author</author><guid>https://karlquinsland.com/monitoring-ap7900-switched-pdu-prometheus-grafana/</guid><description><![CDATA[<p>The APC AP7900 is a 1U single phase PDU with 8 switchable outlets and a network interface. It&rsquo;s been EoL&rsquo;d and can be had for less than 20% of it&rsquo;s original price on <a href="https://www.ebay.com/sch/i.html?_nkw=AP7900" target="_blank" rel="noopener noreffer">eBay</a>. The network interface is so underpowered tha it can&rsquo;t <a href="http://origin-faq.pro-face.com/resources/sites/PROFACE/content/live/FAQS/300000/FA300635/en_US/APC%20AP7000%20Series%20End%20of%20Life%20Notice.pdf" target="_blank" rel="noopener noreffer">support any modern cryptographic ciphers</a>.</p>
<p>So with that, here&rsquo;s a revised copy of my notes from the process of getting the device reset, updated and monitored.</p>
<h2 id="the-hardware">The Hardware</h2>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>Unfortunately, there&rsquo;s no &ldquo;reset everything to defaults&rdquo; button or button sequence on the PDU. The unit I purchased had been configured with a manual IP assignment so it wasn&rsquo;t as straightforward as using an unfolded paperclip to press the reboot button at boot and wait for a successful DHCP negotiation. This process has been <a href="https://dan.langille.org/2015/01/13/apc-pdu-ap7900-resetting-the-password/" target="_blank" rel="noopener noreffer">covered before</a>, so I&rsquo;ll omit it here. In short: connect to the local mgmt interface via the <a href="https://pinoutguide.com/UPS/apc_smart_cable_pinout.shtml" target="_blank" rel="noopener noreffer">serial port</a>, adjust the network configuration and other settings as needed.</p>
<p>The firmware can be updated via FTP easily enough. The processor on the network interface is <em>really</em> slow so allow for <em>several minutes</em> between the bin file upload and the flashing to commence/end. I had to repeat this three times for each of the partitions / subsystem OSs.</p>
<h2 id="the-metrics">The Metrics</h2>
<p>Again, because the network interface has an ancient/slow CPU, any method that extracts metrics from the device must be light weight&hellip; enter <a href="https://en.wikipedia.org/wiki/Simple_Network_Management_Protocol" target="_blank" rel="noopener noreffer">SNMP</a>.</p>
<p>SNMP is quite old and cumbersome but there&rsquo;s an <a href="https://github.com/prometheus/snmp_exporter" target="_blank" rel="noopener noreffer">exporter for prometheus</a> which, after some tedious configuration, can interface the complexity that is is legacy SNMP with prometheus.</p>
<h3 id="generating-a-config">Generating a config</h3>
<p>In short, SNMP identifies each setting/entity that can be monitored or set with a unique numerical ID. Each number is separated with a <code>.</code> and represents a specific edge/vertex on the graph of all settings that device supports.</p>
<p>So, a setting known as <code>rPDUIdentDeviceLinetoLineVoltage</code> may be &lsquo;read&rsquo; at the following address: <code>1.3.6.1.4.1.318.1.1.12.1.15.0</code>. So if you have a few hundred parameters to monitor, you&rsquo;ll have a few hundred nondescript numerical paths. Keeping track of them all is a royal pain in the ass, even with <a href="https://en.wikipedia.org/wiki/Management_information_base" target="_blank" rel="noopener noreffer">lookup tables</a>; known as &ldquo;MIB files&rdquo;.</p>
<p>Unfortunately, there&rsquo;s no way around it; a map between the numerical paths and the &lsquo;human friendly&rsquo; names must be built so the prometheus exporter knows what to expose and how to categorize it.</p>
<p>The exporter comes with <a href="https://github.com/prometheus/snmp_exporter/tree/master/generator" target="_blank" rel="noopener noreffer">generator</a> to make this process a bit easier, but the process of obtaining MIB files isn&rsquo;t quite so straightforward.
I hit a few snags and below is an updated <code>Dockerfile</code> that gave me a <em>working</em> generator tool:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-Dockerfile" data-lang="Dockerfile"><span class="line"><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="k">FROM</span><span class="s"> golang:latest</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c">##</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c"># The `mibs` target in the Makefile does not run to completion on OSX.</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c"># Somewhere, a `sed` command is run against some vendor&#39;s MIB file that&#39;s for hardware that I don&#39;t want to target.</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c"># I don&#39;t have the patience to resolve those issues and i&#39;d prefer that the _entire_ MIB parse and generate </span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c">#   process be 100% contained in the container image anyways.</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c">#</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c"># There are a _variety_ of errors that cropped up when running `generator parse_errors`:</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c">#</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c"># - level=warn ts=2020-12-27T21:40:42.988Z caller=main.go:120 msg=&#34;NetSNMP reported parse error(s)&#34; errors=16924</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c"># - Cannot find module (SNMPv2-SMI): At line 275 in mibs/apc-powernet-mib</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c"># - Did not find &#39;enterprises&#39; in module #-1 (mibs/apc-powernet-mib)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c"># - Did not find &#39;DisplayString&#39; in module #-1 (mibs/apc-powernet-mib)</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c"># - Unlinked OID in PowerNet-MIB: apc ::= { enterprises 318 }</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c"># - Undefined identifier: enterprises near line 281 of mibs/apc-powernet-mib</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c"># - Cannot adopt OID in PowerNet-MIB: atsInputEntry ::= { atsInputTable 1 }</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c"># -   &lt;and hundreds more `Cannot adopt OID in PowerNet-MIB:` messages</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c"># - Bad operator (INTEGER): At line 73 in /usr/share/snmp/mibs/ietf/SNMPv2-PDU</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c">#</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c">#</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c"># After some searching, it appears that MIBs can refer to other MIBs and some set of &#39;base&#39; files is not present.</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c"># Due to licensing, the Debian docker image that the generator is based on does NOT ship w/ them or the </span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c">#   `snmp-mibs-downloader` tool which is used to fetch the base MIB files. This is easy enough to fix...</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c">##</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c"># First, update the repos we&#39;ll pull packaged from</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="k">RUN</span> <span class="nb">echo</span> <span class="s2">&#34;deb http://deb.debian.org/debian/ buster main contrib non-free&#34;</span> <span class="p">|</span> tee -a /etc/apt/sources.list <span class="o">&amp;&amp;</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    <span class="nb">echo</span> <span class="s2">&#34;deb http://deb.debian.org/debian/ buster-updates main contrib non-free&#34;</span> <span class="p">|</span> tee -a /etc/apt/sources.list <span class="o">&amp;&amp;</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    <span class="nb">echo</span> <span class="s2">&#34;deb http://security.debian.org/debian-security buster/updates main contrib non-free&#34;</span> <span class="p">|</span> tee -a /etc/apt/sources.list<span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c"># Then we run the &#39;original&#39; set of commands, adding in the `snmp-mibs-downloader` package.</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c"># As part of the post-install hook, snmp-mibs-downloader will fetch the base MIBs that appear to be</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c">#   missing.</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c">##</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="k">RUN</span> apt-get update <span class="o">&amp;&amp;</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    apt-get install -y libsnmp-dev p7zip-full snmp-mibs-downloader <span class="o">&amp;&amp;</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    go get github.com/prometheus/snmp_exporter/generator <span class="o">&amp;&amp;</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    <span class="nb">cd</span> /go/src/github.com/prometheus/snmp_exporter/generator <span class="o">&amp;&amp;</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    go get -v . <span class="o">&amp;&amp;</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    go install<span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c"># To fix _this_ error:</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c">#   Bad operator (INTEGER): At line 73 in /usr/share/snmp/mibs/ietf/SNMPv2-PDU</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c">#</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c"># we install a &#39;patched&#39; version.</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c"># src: https://serverfault.com/questions/936119/snmp-mibs-on-ubuntu-error-in-mibs</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c">##</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="k">RUN</span> wget http://pastebin.com/raw.php?i<span class="o">=</span>p3QyuXzZ -O /usr/share/snmp/mibs/ietf/SNMPv2-PDU<span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c">##</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c"># This command is not needed for generation, but IS needed for manual checking / use of `snmptranslate` within the</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c">#   container. Add to the above RUN statement if needed.</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c">#       sed -i &#34;s/^\(mibs *:\).*/#\1/&#34; /etc/snmp/snmp.conf</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c">#</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c"># It simply comments out the `mibs:` line in `/etc/snmp/snmp.conf`</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c">##</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c"># The &#39;stock&#39; generator expects the output of `make mibs` to be mounted into /opt/mibs.</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c"># Since we are no longer relying on the `make` target, we must tell the generator binary</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c">#   to look in all of the &#39;system default&#39; locations *as well as* /opt/mibs</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c">##</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="k">WORKDIR</span><span class="s"> &#34;/opt&#34;</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="k">ENTRYPOINT</span> <span class="p">[</span><span class="s2">&#34;/go/bin/generator&#34;</span><span class="p">]</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c"># Rather than do something like this on the CLI every time the container is run</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c">#   `-e MIBDIRS=&#34;/usr/share/snmp/mibs:/usr/share/snmp/mibs/iana:/usr/share/snmp/mibs/ietf:/opt/mibs&#34;`</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c">#   we do it here...</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="c">##</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="k">ENV</span> MIBDIRS /usr/share/snmp/mibs:/usr/share/snmp/mibs/iana:/usr/share/snmp/mibs/ietf:/opt/mibs<span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="k">CMD</span> <span class="p">[</span><span class="s2">&#34;generate&#34;</span><span class="p">]</span><span class="err">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>In short, ditch the <code>make mibs</code> step from <a href="https://github.com/prometheus/snmp_exporter/tree/master/generator#docker-users" target="_blank" rel="noopener noreffer">here</a> and move it inside the <code>docker build</code> step; fetch all the MIB files, patching those that need it. Tell the tool where to find them.</p>
<p>For my needs, I only care about the total amount of power being distributed through the PDU so, of the hundreds of different parameters that can be monitored, I&rsquo;m only interested in:</p>
<ul>
<li>Uptime</li>
<li>Input Voltage</li>
<li>Power in Watts and VoltAmps</li>
<li>Percentage of used/remaining capacity</li>
</ul>
<p>This makes for a simple generator config:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="c"># See: https://github.com/prometheus/snmp_exporter/tree/master/generator</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">##</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">modules</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># APC/Schneider UPS Network Management Cards</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c">#</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># Note: older management cards only support SNMP v1 (AP9606 and</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># AP9607, possibly others). Older versions of the firmware may only</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># support v1 as well. If you only have newer cards you can switch to</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># version v2c or v3.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c">#</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># The management cards have relatively slow processors so don&#39;t poll</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># very often and give a generous timeout to prevent spurious</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># errors. Alternatively you can eliminate the interface polling (OIDs</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># beginning with 1.3.6.1.2.1) to reduce the time taken for polling.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c">#</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># MIB: https://download.schneider-electric.com/files?p_File_Name=powernet426.mib</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># Guide: http://www.apc.com/salestools/ASTE-6Z5QEY/ASTE-6Z5QEY_R0_EN.pdf</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c"># Download site: http://www.apc.com/us/en/tools/download/index.cfm</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="c">##</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">apcups</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c"># Not 100% sure why, but APC firmware does not appear to properly authenticate with the</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c">#   credentials that i&#39;ve set through the web UI. I&#39;ve disabled write/set via SNMP so </span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c">#   sticking w/ v2 (no auth) is fine.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">version</span><span class="p">:</span><span class="w"> </span><span class="m">2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">walk</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="c"># Don&#39;t care about network stats on this guy...</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="c"># - interfaces</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="c">##</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="c"># Do care about uptime, tho</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">sysUpTime</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="c">##</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="c"># For reasons that I don&#39;t understand, specifying the OID results in errors like this:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="c">#   level=error caller=main.go:130 msg=&#34;Error generating config netsnmp&#34; err=&#34;cannot find oid &#39;.1.3.6.1.4.1.318.1.1.12.1.15.0&#39; to walk&#34;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="c"># But the path &#39;.1.3.6.1.4.1.318.1.1.12.1.15.0&#39; maps to rPDUIdentDeviceLinetoLineVoltage.0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="c"># So specify that by name and the error goes away :/</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="c">##</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">rPDUIdentDeviceLinetoLineVoltage</span><span class="w"> </span><span class="c"># .1.3.6.1.4.1.318.1.1.12.1.15.0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">rPDUIdentDevicePowerWatts       </span><span class="w"> </span><span class="c"># .1.3.6.1.4.1.318.1.1.12.1.16.0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">rPDUIdentDevicePowerVA          </span><span class="w"> </span><span class="c"># .1.3.6.1.4.1.318.1.1.12.1.18.0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span>- <span class="l">rPDULoadStatusTable             </span><span class="w"> </span><span class="c"># .1.3.6.1.4.1.318.1.1.12.2.3.1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c">##</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c"># From `rPDULoadStatusTable`, I can get `rPDULoadStatusLoad` and `rPDULoadStatusLoadState`</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c">#    which represent the percentage capacity as a percentage and a &#34;low, nominal, warn, critical&#34; flag.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c">#</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c"># Don&#39;t need to resort to the `lookup` mechanism as the PDU has only one bank and can just extract the values</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c">#   by referring to them explicitly below. This would likely change w/ a 2U PDU</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c"># Allows for adjustment to how various SNMP endpoints are parsed (as info about a device vs a moving metric)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c"># See: https://github.com/prometheus/snmp_exporter/tree/master/generator#enumasinfo-and-enumasstateset</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="c">##</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">overrides</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="c"># Should be a percentage of load</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">rPDULoadStatusLoad</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">gauge</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="c"># In addition to a numerical load percentage, also handy to have the characterization _of_ that load, too</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="c"># In this case, the load can be characterized one of 4 ways:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="c">#   phaseLoadNormal (1),phaseLoadLow (2),phaseLoadNearOverload (3),phaseLoadOverload (4)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">rPDULoadStatusLoadState</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">EnumAsStateSet</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="c">##</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="c"># There are a few &#39;constants&#39; that come from the table i don&#39;t need to track, so we drop them :)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">rPDULoadStatusBankNumber</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">ignore</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">EnumAsInfo</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">rPDULoadStatusIndex</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">ignore</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">EnumAsInfo</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">rPDULoadStatusPhaseNumber</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">ignore</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">        </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">EnumAsInfo</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><p>The resulting <code>snmp.yml</code> is quite brief:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="c"># WARNING: This file was auto-generated using snmp_exporter generator, manual changes will be lost.</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">apcups</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">walk</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="m">1.3.6.1.4.1.318.1.1.12.2.3.1</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">get</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="m">1.3.6.1.2.1.1.3.0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="m">1.3.6.1.4.1.318.1.1.12.1.15.0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="m">1.3.6.1.4.1.318.1.1.12.1.16.0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="m">1.3.6.1.4.1.318.1.1.12.1.18.0</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">metrics</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">sysUpTime</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">oid</span><span class="p">:</span><span class="w"> </span><span class="m">1.3.6.1.2.1.1.3</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">gauge</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">help</span><span class="p">:</span><span class="w"> </span><span class="l">The time (in hundredths of a second) since the network management portion of the system was last re-initialized. - 1.3.6.1.2.1.1.3</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">rPDUIdentDeviceLinetoLineVoltage</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">oid</span><span class="p">:</span><span class="w"> </span><span class="m">1.3.6.1.4.1.318.1.1.12.1.15</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">gauge</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">help</span><span class="p">:</span><span class="w"> </span><span class="l">Getting/Setting this OID will return/set the Line to Line Voltage - 1.3.6.1.4.1.318.1.1.12.1.15</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">rPDUIdentDevicePowerWatts</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">oid</span><span class="p">:</span><span class="w"> </span><span class="m">1.3.6.1.4.1.318.1.1.12.1.16</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">gauge</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">help</span><span class="p">:</span><span class="w"> </span><span class="l">Getting this OID will return the Power in Watts. - 1.3.6.1.4.1.318.1.1.12.1.16</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">rPDUIdentDevicePowerVA</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">oid</span><span class="p">:</span><span class="w"> </span><span class="m">1.3.6.1.4.1.318.1.1.12.1.18</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">gauge</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">help</span><span class="p">:</span><span class="w"> </span><span class="l">Getting this OID will return the Power in VA. - 1.3.6.1.4.1.318.1.1.12.1.18</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">rPDULoadStatusLoad</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">oid</span><span class="p">:</span><span class="w"> </span><span class="m">1.3.6.1.4.1.318.1.1.12.2.3.1.1.2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">gauge</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">help</span><span class="p">:</span><span class="w"> </span><span class="l">Getting this OID will return the phase/bank load measured in tenths of Amps. - 1.3.6.1.4.1.318.1.1.12.2.3.1.1.2</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">indexes</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">labelname</span><span class="p">:</span><span class="w"> </span><span class="l">rPDULoadStatusIndex</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">EnumAsInfo</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">rPDULoadStatusLoadState</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">oid</span><span class="p">:</span><span class="w"> </span><span class="m">1.3.6.1.4.1.318.1.1.12.2.3.1.1.3</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">EnumAsStateSet</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">help</span><span class="p">:</span><span class="w"> </span><span class="l">Getting this OID will return the phase/bank load state - 1.3.6.1.4.1.318.1.1.12.2.3.1.1.3</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">indexes</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="nt">labelname</span><span class="p">:</span><span class="w"> </span><span class="l">rPDULoadStatusIndex</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">EnumAsInfo</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">enum_values</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">1</span><span class="p">:</span><span class="w"> </span><span class="l">phaseLoadNormal</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">2</span><span class="p">:</span><span class="w"> </span><span class="l">phaseLoadLow</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">3</span><span class="p">:</span><span class="w"> </span><span class="l">phaseLoadNearOverload</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">4</span><span class="p">:</span><span class="w"> </span><span class="l">phaseLoadOverload</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">version</span><span class="p">:</span><span class="w"> </span><span class="m">2</span><span class="w">
</span></span></span></code></pre></td></tr></table>
</div>
</div><h2 id="the-dashboard">The Dashboard</h2>
<p>Once metrics are making their way into prometheus, it&rsquo;s only a bit of work to get a dashboard up and running.</p>
<p>For sanity checking I fired up a load; a crypto-miner. See if you can spot when&hellip; :).</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Simple dashboard in grafana
            
                
                
        </p> 
    </figcaption>
    
</figure>


<p>The <code>json</code> file for the dashboard is about 750 lines long, so rather than embed it, I&rsquo;ve <a href="#files" rel="">attached</a> it as a file; the sha1 hash of <code>dashboard.json</code> is <code>400edb0c4064068f12e17c2f1f0d6862d3b8d449</code>.</p>
<h3 id="estimating-costs">estimating costs</h3>
<p>The dashboard just multiplies the average Wattage by the average cost of a kWh and then scales that to fit a 24h window.</p>
<p>The rate I pay for electricity changes based on the hour in which the power is used; about 40% of the week, my power costs a few cents per kWh more. The cost shown in the image above is a rough approximation based on my average power rate of around 12.5 cents per kWh. This rate can be adjusted with the <code>avgkWH_Cost</code> variable, if needed.</p>
<h2 id="files">Files</h2>
<ul>
    
    <li>
        

        
        

        <figure>
            <a target="_blank" href="https://karlquinsland.com/monitoring-ap7900-switched-pdu-prometheus-grafana/images/ap7900.png">
                
            </a>
            
            
        </figure>

        
    </li>
    
    <li>
        
        <a target="_blank" href="https://karlquinsland.com/monitoring-ap7900-switched-pdu-prometheus-grafana/files/dashboard.json">
            <i class="far fa-file-file-code"></i>
            files/dashboard.json:
            
            
            <br>
            <small>sha1(dashboard.json): 400edb0c4064068f12e17c2f1f0d6862d3b8d449</small>
            
        </a>
        
    </li>
    
    <li>
        

        
        

        <figure>
            <a target="_blank" href="https://karlquinsland.com/monitoring-ap7900-switched-pdu-prometheus-grafana/images/grafana.png">
                
            </a>
            
            <figcaption>
                <small>Simple dashboard in grafana</small>
            </figcaption>
            
        </figure>

        
    </li>
    
</ul>

]]></description></item><item><title>home lab: simple printable cable org</title><link>https://karlquinsland.com/home-lab-simple-printable-cable-org/</link><pubDate>Sat, 18 Jul 2020 00:00:00 +0000</pubDate><author>Author</author><guid>https://karlquinsland.com/home-lab-simple-printable-cable-org/</guid><description><![CDATA[<p>Quick / another &ldquo;i made a thing!&rdquo; post.</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Picture showing designed parts deployed as intended (please ignore the lingering dust! 💨)
            
                
                
        </p> 
    </figcaption>
    
</figure>


<p>I needed some horizontal / vertical cable rings for cat5 and power cables. I would have used the excellent <a href="https://www.thingiverse.com/thing:3315960" target="_blank" rel="noopener noreffer">1U Rackmount Cable Management Rings</a> by <a href="https://www.thingiverse.com/boulwarek/about" target="_blank" rel="noopener noreffer">boulwarek</a> except the hole spacing didn&rsquo;t work for my application. I needed cable rings for the &lsquo;front-to-back&rsquo; braces which have distinct dimensions:</p>
<ul>
<li>holes needed to be spaced <code>10.85mm</code> apart</li>
<li>distance between center of screw is <code>20.0mm</code></li>
</ul>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Screenshot from Fusion360 showing dimensions between screw holes
            
                
                
        </p> 
    </figcaption>
    
</figure>


<p>I made the rings slightly smaller as the horizontal / vertical runs I needed rings for do not carry more than a few cables.</p>
<p>A similar copy of this post is on <a href="https://www.thingiverse.com/thing:4546078" target="_blank" rel="noopener noreffer">thingiverse</a> and <a href="https://www.prusaprinters.org/prints/36851-server-rack-cable-org" target="_blank" rel="noopener noreffer">prusaprinters</a> page.</p>
<h2 id="printing">Printing</h2>
<p>Theses are &lsquo;function&rsquo; parts, so the cheapest material and fastest settings work. No support material needed and minimal bridging with the suggested print orientation shown below.</p>
<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Screenshot showing suggested print bed arrangement
            
                
                
        </p> 
    </figcaption>
    
</figure>


<h2 id="files">Files</h2>
<p>For archive / posterity, all source files are included here. All files are licensed as <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank" rel="noopener noreffer">Creative Commons Attribution-NonCommercial-ShareAlike</a> (CC BY-NC-SA).</p>
<ul>
    
    <li>
        

        
        

        <figure>
            <a target="_blank" href="https://karlquinsland.com/home-lab-simple-printable-cable-org/images/hole-dimensions.jpg">
                
            </a>
            
            <figcaption>
                <small>Screenshot from Fusion360 showing dimensions between screw holes</small>
            </figcaption>
            
        </figure>

        
    </li>
    
    <li>
        

        
        

        <figure>
            <a target="_blank" href="https://karlquinsland.com/home-lab-simple-printable-cable-org/images/horizontal-model.jpg">
                
            </a>
            
            <figcaption>
                <small>Picture showing the CAD model for horizontal variant</small>
            </figcaption>
            
        </figure>

        
    </li>
    
    <li>
        

        
        

        <figure>
            <a target="_blank" href="https://karlquinsland.com/home-lab-simple-printable-cable-org/images/installed.jpg">
                
            </a>
            
            <figcaption>
                <small>Picture showing designed parts deployed as intended (please ignore the lingering dust! 💨)</small>
            </figcaption>
            
        </figure>

        
    </li>
    
    <li>
        
        <a target="_blank" href="https://karlquinsland.com/home-lab-simple-printable-cable-org/models/combined.3mf">
            <i class="far fa-file-archive"></i>
            models/combined.3mf:
            
            <small style="font-family:'Lucida Console', monospace">3mf</small> <small>file</small>
            
            
        </a>
        
    </li>
    
    <li>
        
        <a target="_blank" href="https://karlquinsland.com/home-lab-simple-printable-cable-org/models/horizontal.f3d">
            <i class="far fa-file-"></i>
            models/horizontal.f3d:
            
            
        </a>
        
    </li>
    
    <li>
        
        <a target="_blank" href="https://karlquinsland.com/home-lab-simple-printable-cable-org/models/horizontal.stl">
            <i class="far fa-file-code"></i>
            Horizontal STL:
            
            <small style="font-family:'Lucida Console', monospace">stl</small> <small>file</small>
            
            
        </a>
        
    </li>
    
    <li>
        
        <a target="_blank" href="https://karlquinsland.com/home-lab-simple-printable-cable-org/models/vertical.f3d">
            <i class="far fa-file-"></i>
            models/vertical.f3d:
            
            
        </a>
        
    </li>
    
    <li>
        
        <a target="_blank" href="https://karlquinsland.com/home-lab-simple-printable-cable-org/models/vertical.stl">
            <i class="far fa-file-code"></i>
            Vertical STL:
            
            <small style="font-family:'Lucida Console', monospace">stl</small> <small>file</small>
            
            
        </a>
        
    </li>
    
    <li>
        

        
        

        <figure>
            <a target="_blank" href="https://karlquinsland.com/home-lab-simple-printable-cable-org/images/suggested_print_orientation.jpg">
                
            </a>
            
            <figcaption>
                <small>Screenshot showing suggested print bed arrangement</small>
            </figcaption>
            
        </figure>

        
    </li>
    
    <li>
        

        
        

        <figure>
            <a target="_blank" href="https://karlquinsland.com/home-lab-simple-printable-cable-org/images/vertical-model.jpg">
                
            </a>
            
            <figcaption>
                <small>Picture showing the CAD model for vertical variant</small>
            </figcaption>
            
        </figure>

        
    </li>
    
</ul>

]]></description></item><item><title>home lab: mini 'universal' patch panel</title><link>https://karlquinsland.com/home-lab-keystone-bracket/</link><pubDate>Sun, 05 Jul 2020 00:00:00 +0000</pubDate><author>Author</author><guid>https://karlquinsland.com/home-lab-keystone-bracket/</guid><description><![CDATA[<p>This is another brief &ldquo;i made a thing!&rdquo; posts.</p>
<h2 id="version-2">Version 2</h2>
<p><strong>Update 2020-12-12:</strong> I outgrew version 1! I needed a few more ports and didn&rsquo;t have much time&hellip; so I just scaled the part up to double the number of jacks. The links below and the thingiverse and prusaprinters links have been updated w/ the new STL files. Printing and attachment works exactly the same as with the 1x8 version. Rather than include the Fusion360 source, I have included a standard STEP file.</p>
<figure >

    
        
        

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<figure >

    
        
        

    

    <figcaption>
        
        <p>
            Yes, I do need to re-do the cable runs; they&#39;re a mess
            
                
                
        </p> 
    </figcaption>
    
</figure>


<h2 id="what">What</h2>
<p>Taking the side / rear of my rack off every time I needed to change which host(s) were connected to the monitor was starting to get old. Only recently did I realize that you can fit more than just RJ45 jacks in a <a href="https://en.wikipedia.org/wiki/Keystone_module" target="_blank" rel="noopener noreffer">Keystone Jack</a>. A few measurements, a quick search through thingiverse and some CAD time later, this is the result.</p>
<p>The model is tailored to my specific rack, but should be easily adoptable to any other dimensions. Import the Fusion360 model and then edit the first sketch in the timeline as needed and adjust the <code>pattern on line</code> step to adjust the number of keystone jacks.</p>
<p>Of course, you can always just glue the print to whichever surface you need it mounted on as there&rsquo;s plenty of broad/flat surface for adhesive if the two built-in screw holes won&rsquo;t work!</p>
<p>As is, the model has:</p>
<ul>
<li>8 jacks</li>
<li><code>178.5mm</code> from &rsquo;edge&rsquo; to &rsquo;edge&rsquo; between the two screw holes</li>
<li><code>6.5mm</code> diameter for the holes as my rack uses M6 screws.</li>
</ul>
<p>Note: After printing the model you see in the pictures below, I added a small cutout which should make it easier to depress the clip on the &lsquo;male&rsquo; end of a keystone device from the &lsquo;user facing&rsquo; side as you&rsquo;d typically find on a proper patch panel</p>
<p>All in all, I&rsquo;m quite happy with how it turned out: 8 jacks is more than enough for current and (projected!) future use. The only obvious improvement would be moving the numbers from the bottom to the top where there&rsquo;s more room. As it is now, the perimeters around the numbers look a bit weird as they merge w/ the bottom edge that are flush w/ the rack and the top edges that are flush w/ the jacks.</p>
<p>Many thanks to <a href="https://www.thingiverse.com/belfers/about" target="_blank" rel="noopener noreffer"><code>belfers</code></a> for the <a href="https://www.thingiverse.com/thing:3150524" target="_blank" rel="noopener noreffer">Keystone model</a>.</p>
<p>The details are on the <a href="https://www.thingiverse.com/thing:4536257" target="_blank" rel="noopener noreffer">thingiverse</a> and <a href="https://www.prusaprinters.org/prints/36325-8-port-keystone-patch-panel" target="_blank" rel="noopener noreffer">prusaprinters</a> page.</p>
<h2 id="printing">Printing:</h2>
<p>Any material and at least 10% infill should be fine.
No supports if you use the suggested print orientation shown in picture below.
Tolerances on the jacks are somewhat tight so printing at a more accurate setting is probably going to be a good idea.</p>
<h2 id="files">Files</h2>
<p>For archive / posterity, all source files are included here. All files are licensed as <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank" rel="noopener noreffer">Creative Commons Attribution-NonCommercial-ShareAlike</a> (CC BY-NC-SA).</p>
<ul>
    
    <li>
        

        
        

        <figure>
            <a target="_blank" href="https://karlquinsland.com/home-lab-keystone-bracket/images/rear-installed.jpg">
                
            </a>
            
            
        </figure>

        
    </li>
    
    <li>
        

        
        

        <figure>
            <a target="_blank" href="https://karlquinsland.com/home-lab-keystone-bracket/images/front-installed.jpg">
                
            </a>
            
            
        </figure>

        
    </li>
    
    <li>
        
        <a target="_blank" href="https://karlquinsland.com/home-lab-keystone-bracket/models/v1_keystone-bracket.3mf">
            <i class="far fa-file-archive"></i>
            models/v1_keystone-bracket.3mf:
            
            <small style="font-family:'Lucida Console', monospace">3mf</small> <small>file</small>
            
            
        </a>
        
    </li>
    
    <li>
        
        <a target="_blank" href="https://karlquinsland.com/home-lab-keystone-bracket/models/v1_keystone-bracket.f3z">
            <i class="far fa-file-archive"></i>
            models/v1_keystone-bracket.f3z:
            
            <small style="font-family:'Lucida Console', monospace">f3z</small> <small>file</small>
            
            
            <br>
            <small>Fusion360 Archive</small>
            
        </a>
        
    </li>
    
    <li>
        
        <a target="_blank" href="https://karlquinsland.com/home-lab-keystone-bracket/models/v1_keystone-bracket.stl">
            <i class="far fa-file-code"></i>
            models/v1_keystone-bracket.stl:
            
            <small style="font-family:'Lucida Console', monospace">stl</small> <small>file</small>
            
            
        </a>
        
    </li>
    
    <li>
        
        <a target="_blank" href="https://karlquinsland.com/home-lab-keystone-bracket/models/v2.3mf">
            <i class="far fa-file-archive"></i>
            models/v2.3mf:
            
            <small style="font-family:'Lucida Console', monospace">3mf</small> <small>file</small>
            
            
        </a>
        
    </li>
    
    <li>
        
        <a target="_blank" href="https://karlquinsland.com/home-lab-keystone-bracket/models/v2.step">
            <i class="far fa-file-archive"></i>
            models/v2.step:
            
            <small style="font-family:'Lucida Console', monospace">step</small> <small>file</small>
            
            
            <br>
            <small>STEP file</small>
            
        </a>
        
    </li>
    
    <li>
        
        <a target="_blank" href="https://karlquinsland.com/home-lab-keystone-bracket/models/v2.stl">
            <i class="far fa-file-code"></i>
            models/v2.stl:
            
            <small style="font-family:'Lucida Console', monospace">stl</small> <small>file</small>
            
            
        </a>
        
    </li>
    
    <li>
        

        
        

        <figure>
            <a target="_blank" href="https://karlquinsland.com/home-lab-keystone-bracket/images/print_orientation.jpg">
                
            </a>
            
            <figcaption>
                <small>Suggested print orientation</small>
            </figcaption>
            
        </figure>

        
    </li>
    
    <li>
        

        
        

        <figure>
            <a target="_blank" href="https://karlquinsland.com/home-lab-keystone-bracket/images/v2_installed_front.jpg">
                
            </a>
            
            
        </figure>

        
    </li>
    
    <li>
        

        
        

        <figure>
            <a target="_blank" href="https://karlquinsland.com/home-lab-keystone-bracket/images/v2_installed_rear.jpg">
                
            </a>
            
            <figcaption>
                <small>Yes, I do need to re-do the cable runs; they&#39;re a mess</small>
            </figcaption>
            
        </figure>

        
    </li>
    
</ul>

]]></description></item><item><title>home lab: consolidating multiple PSUs</title><link>https://karlquinsland.com/home-lab-consolidated-psu/</link><pubDate>Sat, 27 Jun 2020 00:00:00 +0000</pubDate><author>Author</author><guid>https://karlquinsland.com/home-lab-consolidated-psu/</guid><description><![CDATA[<p>A while back, I traded writing salt states and managing systemd <code>.service</code> files wrapping <code>podman</code> for the <a href="https://www.youtube.com/watch?v=9wvEwPLcLcA" target="_blank" rel="noopener noreffer">&lsquo;simplicity&rsquo;</a> of running kubernetes in my home lab. Jury is still out on weather or not the switch was worth it.</p>
<p>The cluster is a hodgepodge of second hand Intel NUCs and other scavenged compute hardware i&rsquo;ve collected over the past few years. Some of it runs on 12v, some of it on 19v. For each node, there&rsquo;s a dedicated switch mode power supply. Each supply takes up an outlet and brings a bit of cable mgmt related clutter. The solution is consolidation.</p>
<p>So thats how this project came to be.</p>
<h2 id="what">What</h2>
<p>A set of 3d printable parts to compactly combine two LRS-350 PSUs into a compact unit with optional voltage and current displays.</p>
<p>The details are on the <a href="https://www.thingiverse.com/thing:4504948" target="_blank" rel="noopener noreffer">thingiverse</a> and <a href="https://www.prusaprinters.org/prints/35514-dual-mean-well-lrs-350-psu" target="_blank" rel="noopener noreffer">prusaprinters</a> page.</p>
<h2 id="files">Files</h2>
<p>For archive / posterity, all source files are included here. All files are licensed as <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank" rel="noopener noreffer">Creative Commons Attribution-NonCommercial-ShareAlike</a> (CC BY-NC-SA).</p>
<ul>
    
    <li>
        

        
        

        <figure>
            <a target="_blank" href="https://karlquinsland.com/home-lab-consolidated-psu/images/built.jpg">
                
            </a>
            
            <figcaption>
                <small>Fully Assembled; ignore the messy workbench</small>
            </figcaption>
            
        </figure>

        
    </li>
    
    <li>
        

        
        

        <figure>
            <a target="_blank" href="https://karlquinsland.com/home-lab-consolidated-psu/images/cad-back.jpg">
                
            </a>
            
            <figcaption>
                <small>component view, from rear</small>
            </figcaption>
            
        </figure>

        
    </li>
    
    <li>
        

        
        

        <figure>
            <a target="_blank" href="https://karlquinsland.com/home-lab-consolidated-psu/images/cad-front.jpg">
                
            </a>
            
            <figcaption>
                <small>component view, from front</small>
            </figcaption>
            
        </figure>

        
    </li>
    
    <li>
        

        
        

        <figure>
            <a target="_blank" href="https://karlquinsland.com/home-lab-consolidated-psu/images/core.jpg">
                
            </a>
            
            <figcaption>
                <small>Print Bed arrangement, green is support structures</small>
            </figcaption>
            
        </figure>

        
    </li>
    
    <li>
        

        
        

        <figure>
            <a target="_blank" href="https://karlquinsland.com/home-lab-consolidated-psu/images/meter-panel.jpg">
                
            </a>
            
            <figcaption>
                <small>meter panel print orientation</small>
            </figcaption>
            
        </figure>

        
    </li>
    
    <li>
        
        <a target="_blank" href="https://karlquinsland.com/home-lab-consolidated-psu/models/2x-lrs-psu.f3z">
            <i class="far fa-file-archive"></i>
            Consolidated PSU CAD:
            
            <small style="font-family:'Lucida Console', monospace">f3z</small> <small>file</small>
            
            
            <br>
            <small>Fusion360 Archive</small>
            
        </a>
        
    </li>
    
    <li>
        
        <a target="_blank" href="https://karlquinsland.com/home-lab-consolidated-psu/models/box.stl">
            <i class="far fa-file-code"></i>
            Box:
            
            <small style="font-family:'Lucida Console', monospace">stl</small> <small>file</small>
            
            
        </a>
        
    </li>
    
    <li>
        
        <a target="_blank" href="https://karlquinsland.com/home-lab-consolidated-psu/models/brace.stl">
            <i class="far fa-file-code"></i>
            Brace:
            
            <small style="font-family:'Lucida Console', monospace">stl</small> <small>file</small>
            
            
        </a>
        
    </li>
    
    <li>
        
        <a target="_blank" href="https://karlquinsland.com/home-lab-consolidated-psu/models/core.3mf">
            <i class="far fa-file-archive"></i>
            Core Components:
            
            <small style="font-family:'Lucida Console', monospace">3mf</small> <small>file</small>
            
            
        </a>
        
    </li>
    
    <li>
        
        <a target="_blank" href="https://karlquinsland.com/home-lab-consolidated-psu/models/lid.stl">
            <i class="far fa-file-code"></i>
            Lid:
            
            <small style="font-family:'Lucida Console', monospace">stl</small> <small>file</small>
            
            
        </a>
        
    </li>
    
    <li>
        
        <a target="_blank" href="https://karlquinsland.com/home-lab-consolidated-psu/models/meter-panel.3mf">
            <i class="far fa-file-archive"></i>
            (Optional) Meter Panel:
            
            <small style="font-family:'Lucida Console', monospace">3mf</small> <small>file</small>
            
            
        </a>
        
    </li>
    
    <li>
        
        <a target="_blank" href="https://karlquinsland.com/home-lab-consolidated-psu/models/meter-panel.stl">
            <i class="far fa-file-code"></i>
            (Optional) Meter Panel:
            
            <small style="font-family:'Lucida Console', monospace">stl</small> <small>file</small>
            
            
        </a>
        
    </li>
    
    <li>
        

        
        

        <figure>
            <a target="_blank" href="https://karlquinsland.com/home-lab-consolidated-psu/images/meter-panel-slice.jpg">
                
            </a>
            
            <figcaption>
                <small>using slic3r too remove the second meter cutout</small>
            </figcaption>
            
        </figure>

        
    </li>
    
</ul>

]]></description></item></channel></rss>