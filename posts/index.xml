<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>All Posts - karl</title><link>https://karlquinsland.com/posts/</link><description>All Posts | karl</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 01 Oct 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://karlquinsland.com/posts/" rel="self" type="application/rss+xml"/><item><title>Using new Lets Encrypt intermediate chain with SkyHole</title><link>https://karlquinsland.com/skyhole-expired-lets-encrypt-ca/</link><pubDate>Fri, 01 Oct 2021 00:00:00 +0000</pubDate><author>Author</author><guid>https://karlquinsland.com/skyhole-expired-lets-encrypt-ca/</guid><description><![CDATA[<p>If you somehow missed it, one of the certificates used by Lets Encrypt chain of trust <a href="https://letsencrypt.org/docs/dst-root-ca-x3-expiration-september-2021/" target="_blank" rel="noopener noreffer">expired</a> this week.
As expected, things broke&hellip;. including my private, filtered DNS over TLS server - <a href="https://github.com/kquinsland/skyhole/" target="_blank" rel="noopener noreffer">SkyHole</a>. Below is a condensed form of my notes to create the exact document that I wish I had while trying to triage broken DNS on my phone.</p>
<p><strong>TL;DR:</strong> Implement solution 3 from <a href="https://www.openssl.org/blog/blog/2021/09/13/LetsEncryptRootCertExpire/" target="_blank" rel="noopener noreffer">this</a> post.</p>
<hr>
<p><strong>Note:</strong> After releasing the initial version of SkyHole, I re-factored most of the code to eliminate the dependency on Docker. This was to make the project easier to deploy on resource constrained hardware.
At the time, I was working with <a href="https://saltproject.io/" target="_blank" rel="noopener noreffer">SaltStack</a> a lot and took the opportunity to re-do the entire thing as a salt state for a bit of practice. The <em>exact</em> steps and commands shown below are unique to my particular instance. Use them as <em>guidance</em> for fixing an issue with the publicly released version of SkyHole.</p>
<h1 id="symptoms">Symptoms</h1>
<p>My current daily driver runs Android 11. When configured to use a <a href="https://android-developers.googleblog.com/2018/04/dns-over-tls-support-in-android-p.html" target="_blank" rel="noopener noreffer">private DNS server</a>, Android essentially behaves as if you&rsquo;ve turned WiFi/Cell data off if there is any issue when talking to the DoT server.
While this &lsquo;fail private&rsquo; approach is commendable, the lack of debug info in the UI is not; no details are given about the failure other than a generic &lsquo;the private dns server could not be reached&rsquo; message.</p>
<p>I have seen this behavior once before when the certificate renewal timer failed to fire off&hellip; except I implemented email based notifications after that incident and had recently received a notification from the renewal script.</p>
<p>Just to be sure, I checked the <code>notAfter</code> in each certificate and they all had plenty of life left:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">me@dot-host:/etc/coredns/tls# gawk <span class="s1">&#39;BEGIN { pipe=&#34;openssl x509 -noout -subject -dates&#34;} \
</span><span class="s1">&gt;   /^-+BEGIN CERT/,/^-+END CERT/ { print | pipe }
</span><span class="s1">&gt;   /^-+END CERT/                 { close(pipe); printf(&#34;\n&#34;)}  &#39;</span> chain.pem
<span class="nv">subject</span><span class="o">=</span><span class="nv">CN</span> <span class="o">=</span> dot.my-test-domain.tld
<span class="nv">notBefore</span><span class="o">=</span>Oct  <span class="m">1</span> 01:50:58 <span class="m">2021</span> GMT
<span class="nv">notAfter</span><span class="o">=</span>Dec <span class="m">30</span> 01:50:57 <span class="m">2021</span> GMT

<span class="nv">subject</span><span class="o">=</span><span class="nv">C</span> <span class="o">=</span> US, <span class="nv">O</span> <span class="o">=</span> Let<span class="err">&#39;</span>s Encrypt, <span class="nv">CN</span> <span class="o">=</span> R3
<span class="nv">notBefore</span><span class="o">=</span>Sep  <span class="m">4</span> 00:00:00 <span class="m">2020</span> GMT
<span class="nv">notAfter</span><span class="o">=</span>Sep <span class="m">15</span> 16:00:00 <span class="m">2025</span> GMT

<span class="nv">subject</span><span class="o">=</span><span class="nv">C</span> <span class="o">=</span> US, <span class="nv">O</span> <span class="o">=</span> Internet Security Research Group, <span class="nv">CN</span> <span class="o">=</span> ISRG Root X1
<span class="nv">notBefore</span><span class="o">=</span>Jan <span class="m">20</span> 19:14:03 <span class="m">2021</span> GMT
<span class="nv">notAfter</span><span class="o">=</span>Sep <span class="m">30</span> 18:14:03 <span class="m">2024</span> GMT
</code></pre></td></tr></table>
</div>
</div><p>Borrowed that command from <a href="https://serverfault.com/questions/541262/checking-the-issued-and-expiry-dates-for-the-certificates-involved-a-certificate" target="_blank" rel="noopener noreffer">this</a> post.</p>
<p>Looking for more information, <code>adb</code> yielded something:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">‚ùØ adb logcat <span class="p">|</span> grep resolv
09-30 21:28:12.995   <span class="m">962</span> <span class="m">15448</span> W resolv  : Validating DnsTlsServer 12.34.56.78 with mark 0xf0084
09-30 21:28:13.085   <span class="m">962</span> <span class="m">15448</span> W resolv  : SSL_connect ssl <span class="nv">error</span> <span class="o">=</span>1, mark 0xf0084: No such file or directory
09-30 21:28:13.085   <span class="m">962</span> <span class="m">15448</span> W resolv  : TLS Handshake failed
09-30 21:28:13.085   <span class="m">962</span> <span class="m">15448</span> W resolv  : query failed
09-30 21:28:13.085   <span class="m">962</span> <span class="m">15448</span> W resolv  : validateDnsTlsServer returned <span class="m">0</span> <span class="k">for</span> 12.34.56.78
</code></pre></td></tr></table>
</div>
</div><p>The <code>No such file or directory</code> message came from <a href="https://android.googlesource.com/platform/packages/modules/DnsResolver/&#43;/refs/heads/master/DnsTlsSocket.cpp" target="_blank" rel="noopener noreffer">here</a>.</p>
<p>Google uses their own fork of openSSL in Android so spent some time trying to figure out what an error code of <code>1</code> means in the openSSL project.
I <em>think</em> <code>1</code> is <a href="https://github.com/OneSignal/openssl/blob/main/include/openssl/ssl.h#L1168" target="_blank" rel="noopener noreffer"><code>SSL_ERROR_SSL</code></a> but that seems to be a relatively <a href="https://www.openssl.org/docs/man1.1.1/man3/SSL_get_error.html" target="_blank" rel="noopener noreffer">&lsquo;generic&rsquo;</a> error.
Furthermore, in context of <code>No such file or directory</code> &hellip; it makes even less sense.</p>
<p>Oh well. So much for that theory. From this point on, I&rsquo;m treating all of the TLS connection stuff as a black box.</p>
<h1 id="investigating">Investigating</h1>
<p>I was able to confirm that the TLS certificates on the skyhole instance had not expired and the intermediate chain was not using any of the depreciated certificates.
I had also not made any changes to the skyhole instance in close to a year and <code>kdig</code> didn&rsquo;t throw any warnings when querying against the DoT server.
I could see the manual query from <code>kdig</code> in the DNS query/filter logs &hellip; so it seemed like the problem was not in either the TLS portion or the DNS portion.</p>
<p>That left Android as the culprit.</p>
<p>But I was also fairly sure that Google hadn&rsquo;t changed anything on the phone w/r/t how the DoT client worked&hellip;ü§î</p>
<p>If in doubt, turn to the wires!</p>
<p>I ran <code>tcpdump</code> on the skyhole instance and did notice traffic from Android that was <em>not</em> showing up in the DNS server logs.
I compared the traffic with a working manual query from <code>kdig</code> and noticed that the traffic from the Android client stopped shortly before where the <code>kdig</code> traffic would have turned into a regular DNS query.</p>
<p>So the problem was happening during the TLS setup. Whatever Android was choking on was happening before any DNS queries were sent.</p>
<p>I quickly configured the phone to use a known good / working DNS over TLS server and it was immediately accepted. The triumphant <code>logcat</code> output confirmed that everything on the TLS layer has happy: <code> W resolv  : Validation success</code>.</p>
<p>Android worked instantly when configured to use a different server but immediately failed when used with the skyhole instance. This points to a problem on the server.</p>
<p>Nothing about the skyhole instance had changed and the certificates that it was offering up were totally valid; other clients worked w/o issue. This points to a problem on the phone.</p>
<p>Even though the certificates appear fine, the timing with the recent Lets Encrypt certificate expiration is too suspicious ü§®.</p>
<p>Looking for another data point, I moved to a different computer with a different version of openSSL installed.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">‚ùØ openssl version
LibreSSL 2.8.3

‚ùØ openssl s_client -connect dot.my-test-domain.tld:853 -servername dot.my-test-domain.tld <span class="p">|</span>
    openssl crl2pkcs7 -nocrl -certfile /dev/stdin <span class="p">|</span>
    openssl pkcs7 -print_certs -noout -text <span class="p">|</span>
    egrep <span class="s1">&#39;not(Before|After)&#39;</span>
<span class="nv">depth</span><span class="o">=</span><span class="m">1</span> <span class="nv">O</span> <span class="o">=</span> Digital Signature Trust Co., <span class="nv">CN</span> <span class="o">=</span> DST Root CA X3
verify error:num<span class="o">=</span>10:certificate has expired
<span class="nv">notAfter</span><span class="o">=</span>Sep <span class="m">30</span> 14:01:15 <span class="m">2021</span> GMT
verify <span class="k">return</span>:0
<span class="nv">depth</span><span class="o">=</span><span class="m">1</span> <span class="nv">O</span> <span class="o">=</span> Digital Signature Trust Co., <span class="nv">CN</span> <span class="o">=</span> DST Root CA X3
verify error:num<span class="o">=</span>10:certificate has expired
<span class="nv">notAfter</span><span class="o">=</span>Sep <span class="m">30</span> 14:01:15 <span class="m">2021</span> GMT
verify <span class="k">return</span>:0
<span class="nv">depth</span><span class="o">=</span><span class="m">3</span> <span class="nv">O</span> <span class="o">=</span> Digital Signature Trust Co., <span class="nv">CN</span> <span class="o">=</span> DST Root CA X3
verify error:num<span class="o">=</span>10:certificate has expired
<span class="nv">notAfter</span><span class="o">=</span>Sep <span class="m">30</span> 14:01:15 <span class="m">2021</span> GMT
verify <span class="k">return</span>:0
</code></pre></td></tr></table>
</div>
</div><p>Huh. That sure looks like a problem!</p>
<p>After a <a href="https://www.mail-archive.com/openssl-users@openssl.org/msg90068.html" target="_blank" rel="noopener noreffer">bit</a> of google, I found that the different versions of openSSL (and their forks&hellip;) behave differently when validating certificate chains:</p>
<blockquote>
<p>The currently recommended certificate chain as presented to Let‚Äôs Encrypt ACME clients when new certificates are issued contains an intermediate certificate (ISRG Root X1) that is signed by an old DST Root CA X3 certificate that expires on 2021-09-30. In some cases the OpenSSL 1.0.2 version will regard the certificates issued by the Let‚Äôs Encrypt CA as having an expired trust chain.</p>
<p>Most up-to-date CA cert trusted bundles, as provided by operating systems, contain this soon-to-be-expired certificate. The current CA cert bundles also contain an ISRG Root X1 self-signed certificate. This means that clients verifying certificate chains can find the alternative non-expired path to the ISRG Root X1 self-signed certificate in their trust store.</p>
<p>Unfortunately this does not apply to OpenSSL 1.0.2 which always prefers the untrusted chain and if that chain contains a path that leads to an expired trusted root certificate (DST Root CA X3), it will be selected for the certificate verification and the expiration will be reported.</p>
</blockquote>
<p><a href="https://www.openssl.org/blog/blog/2021/09/13/LetsEncryptRootCertExpire/" target="_blank" rel="noopener noreffer">Source</a>.</p>
<p>That would certainly explain the behavior I observed when checking the skyhole certificates on the second computer.
I don&rsquo;t know <em>exactly</em> what version of OpenSSL the BoringSSL in my phone is based off of, but, assuming that it&rsquo;s got the same bug as OpenSSL 1.0.2, that would explain everything.</p>
<p>The openSSL blog post pointed out three possible fixes; two of which are applied client side.
My phone is not rooted so I just assumed that I would have access to the portions of the file system needed for a &lsquo;client side&rsquo; fix. That left the third solution; use a different intermediate chain.</p>
<p>I was not aware that there was an alternate intermediate chain for Lets Encrypt. I didn&rsquo;t even know that was a thing let alone <em>why</em> somebody would do that.</p>
<h1 id="alternate-intermediate">Alternate Intermediate</h1>
<p>Turns out, it&rsquo;s a very clever trick meant to <a href="https://letsencrypt.org/2020/12/21/extending-android-compatibility.html" target="_blank" rel="noopener noreffer">prevent Lets Encrypt certificates from breaking on <em>older</em> versions</a>. Ironic that a &lsquo;newer&rsquo; android device got screwed in the process üò¨.</p>
<p>The two valid chains of trust for Lets Encrypt certificates look like this:</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        Image credit/source:
        <a href="https://letsencrypt.org/2020/12/21/extending-android-compatibility.html"> 
            LetsEncrypt
        </a> 
        </p> 
    </figcaption>
    
</figure>


<p>With the help of <a href="https://github.com/certbot/certbot/issues/8577" target="_blank" rel="noopener noreffer">this</a> GitHub issue, the revised CertBot <code>cli.ini</code> file becomes:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">me@dot-host:~# cat /etc/letsencrypt/cli.ini <span class="p">|</span> grep chain
preferred-chain<span class="o">=</span><span class="s1">&#39;ISRG Root X1&#39;</span>
</code></pre></td></tr></table>
</div>
</div><p>After running certbot with the new config, <code>logcat</code> shows success:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">‚ùØ adb logcat <span class="p">|</span> grep resolv
10-01 09:41:01.190   <span class="m">962</span>  <span class="m">7711</span> W resolv  : Validating DnsTlsServer 12.34.56.78 with mark 0xf0084
10-01 09:41:01.734   <span class="m">962</span>  <span class="m">7711</span> W resolv  : validateDnsTlsServer returned <span class="m">1</span> <span class="k">for</span> 12.34.56.78
10-01 09:41:01.734   <span class="m">962</span>  <span class="m">7711</span> W resolv  : Validation success
</code></pre></td></tr></table>
</div>
</div><p>Android no longer shows an unhelpful &ldquo;can&rsquo;t connect&rdquo; message and I can see DNS queries being filtered!</p>
<p>üéä</p>
]]></description></item><item><title>Adding an APC UPS to Home Assistant energy dashboard</title><link>https://karlquinsland.com/apc-ups-energy-in-homeassistant/</link><pubDate>Sun, 05 Sep 2021 00:00:00 +0000</pubDate><author>Author</author><guid>https://karlquinsland.com/apc-ups-energy-in-homeassistant/</guid><description><![CDATA[<p><strong>EDIT:</strong> (2021-09-19): After some <a href="https://old.reddit.com/r/homeassistant/comments/pi3pv2/how_to_use_an_apc_ups_as_an_energy_dashboard/hbqudh5/" target="_blank" rel="noopener noreffer">back and forth</a> with <a href="https://old.reddit.com/user/Laxarus" target="_blank" rel="noopener noreffer">/u/Laxarus</a>, there is now a simpler method! The <code>snmp</code> platform still does not support setting <code>device_class</code>, but wrapping the sensor in another template sensor is not required; just do so in your <a href="https://www.home-assistant.io/docs/configuration/customizing-devices/" target="_blank" rel="noopener noreffer"><code>customize.yaml</code></a>. I have called this out <a href="#edit-2021-09-19" rel="">below</a>.</p>
<hr>
<p>This is another quick &ldquo;here&rsquo;s how I did it, hope this help&rdquo; post.</p>
<p>In preparation for the inevitable grid brownouts that summer 2021 would bring, I installed a rather beefy UPS for my home network / lab. After some browsing, I discovered a local eWaste liquidator with a really good deal on some second-hand APC UPSs.</p>
<p>A few hundred dollars and about 150 lbs later, the UPS was installed in the server rack. Despite being a newer generation, the software on the UPS has a <em><strong>TON</strong></em> of similarities to the <a href="https://karlquinsland.com/monitoring-ap7900-switched-pdu-prometheus-grafana/" rel="">older style of PDU that I installed in my lab </a> a while back. This made it relatively straightforward to use the same
pattern to start getting UPS metrics into Grafana as well.</p>
<p>After getting the basic monitoring up and running, I started to draft this post to serve as an &lsquo;update&rsquo; to the APC9700 post. Life got in the way and the post sat in the drafts branch where it was completely forgotten about&hellip;. until <a href="https://www.home-assistant.io/blog/2021/08/04/release-20218/" target="_blank" rel="noopener noreffer">Home Assistant released their new Energy dashboard</a>. Now that HA could show the energy consumption of individual devices right next to the cumulative consumption and production data, the post was worth finishing and expanding on.</p>
<p>The configuration that I was <em>going</em> to publish is <a href="#current-and-voltage-independently" rel="">below</a> but after finding <a href="https://old.reddit.com/r/homeassistant/comments/pi3pv2/how_to_use_an_apc_ups_as_an_energy_dashboard/hbpqzr6/" target="_blank" rel="noopener noreffer">this</a> comment by <a href="https://old.reddit.com/user/Laxarus" target="_blank" rel="noopener noreffer">Laxarus</a> on <a href="https://old.reddit.com/user/Navydevildoc" target="_blank" rel="noopener noreffer">Navydevildoc</a>&rsquo;s <a href="https://old.reddit.com/r/homeassistant/comments/pi3pv2/how_to_use_an_apc_ups_as_an_energy_dashboard/" target="_blank" rel="noopener noreffer">reddit post</a>, I&rsquo;ve got a revised and simpler configuration to share!</p>
<h2 id="long-term-statistics-in-home-assistant">Long Term Statistics in Home Assistant</h2>
<p>Before diving into the configuration, a little bit of context. In preparation for the energy sub system, the Home Assistant developers have been working on a &lsquo;<a href="https://developers.home-assistant.io/docs/core/entity/sensor/#long-term-statistics" target="_blank" rel="noopener noreffer">long term statistics</a>&rsquo; (LTS) framework. The LTS framework is meant to give HA some improved speed and capabilities when dealing with a lot of data! The energy subsystem is the first &lsquo;consumer&rsquo; of the LTS framework.</p>
<p>Home Assistant will look for two &lsquo;properties&rsquo; on a given sensor to determine if that sensor will work with the LTS framework.
For a sensor/entity to &lsquo;work&rsquo; with the long term stats system it must:</p>
<ul>
<li>have a property called <code>device_class</code> with a value of <code>energy</code>, <code>gas</code>, or <code>monetary</code></li>
<li>have a property called <code>state_class</code> with a value of either <code>measurement</code> or <code>total_increasing</code></li>
</ul>
<p>In testing, I was <em>not</em> able to get a sensor with <code>state_class: measurement</code> and <code>device_class: energy</code> to &lsquo;work&rsquo; with the energy sub system. Fortunately, this does not apply with the concise configuration <a href="#a-single-oid-for-power-consumption" rel="">below</a>!</p>
<p>As the LTS framework is still new, many platforms - including the SNMP platform - do not support the required properties:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">Invalid config for [sensor.snmp]: [state_class] is an invalid option for [sensor.snmp]. Check: sensor.snmp-&gt;state_class.
Invalid config for [sensor.snmp]: [device_class] is an invalid option for [sensor.snmp]. Check: sensor.snmp-&gt;device_class.
</code></pre></td></tr></table>
</div>
</div><p>The <code>template</code> platform <em>has</em> been updated to work with the <code>device_class</code> or <code>state_class</code> properties though.
So that&rsquo;s the technique to use here; a <code>template</code> sensor with the correct <code>{device,state}_class</code> properties set will wrap the snmp sensor.</p>
<p>Hopefully a future release of HA will include <code>{device,state}_class</code> support for the <code>snmp</code> platform; the <code>template</code> sensors in the configuration snips below won&rsquo;t be needed!</p>
<h4 id="edit-2021-09-19">EDIT (2021-09-19):</h4>
<p>You don&rsquo;t need to wrap the snmp sensor in a template sensor. As of home assistant 2021.09, the <code>snmp</code> platform does not allow you to set <code>device_class: energy</code>&hellip; however, you <em>can</em> set the <code>device_class</code> attribute on the snmp sensor through <code>customize.yaml</code>:</p>
<p>Make sure your configuration file loads the customization file:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">‚ùØ cat configuration.yaml <span class="p">|</span> grep customize
  customize: !include customize.yaml
</code></pre></td></tr></table>
</div>
</div><p>If your snmp sensor was called <code>sensor.usp_energy</code>, then you would add an object called <code>sensor.ups_energy</code> like so:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">‚ùØ cat customize.yaml <span class="p">|</span> grep -a2 ups
sensor.ups_energy:
  state_class: total_increasing
  device_class: energy
</code></pre></td></tr></table>
</div>
</div><h2 id="configure-home-assistant">Configure Home Assistant</h2>
<p>I have broken my <code>configuration.yaml</code> up to make things easier to manage. Almost all entity/device/template/sensor..etc configuration is done through files placed in the <code>devices/**/*</code> directory:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell">‚ùØ cat configuration.yaml <span class="p">|</span> grep -E <span class="s1">&#39;devices/sensor|template/&#39;</span>
sensor: !include_dir_merge_list devices/sensor/
template: !include_dir_merge_list devices/template/
</code></pre></td></tr></table>
</div>
</div><h3 id="a-single-oid-for-power-consumption">A single OID for power consumption</h3>
<p>Thanks again to <a href="https://old.reddit.com/user/Laxarus" target="_blank" rel="noopener noreffer">Laxarus</a> for the <a href="https://old.reddit.com/r/homeassistant/comments/pi3pv2/how_to_use_an_apc_ups_as_an_energy_dashboard/hbpqzr6/" target="_blank" rel="noopener noreffer">tip</a> about the <code>upsHighPrecOutputEnergyUsage</code> OID!</p>
<p>First, create the &lsquo;raw&rsquo; sensor using the <code>snmp</code> platform:</p>
<p><code>devices/sensor/snmp.yaml</code>:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml">- <span class="nt">platform</span><span class="p">:</span><span class="w"> </span><span class="l">snmp</span><span class="w">
</span><span class="w">  </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;UPS Energy (raw)&#34;</span><span class="w">
</span><span class="w">  </span><span class="nt">host</span><span class="p">:</span><span class="w"> </span><span class="m">192.168.1.1</span><span class="w">
</span><span class="w">  </span><span class="c"># The current in tenths of amperes drawn by the load on the UPS.</span><span class="w">
</span><span class="w">  </span><span class="c"># Contained in Module(s): PowerNet-MIB</span><span class="w">
</span><span class="w">  </span><span class="c">##</span><span class="w">
</span><span class="w">  </span><span class="nt">baseoid</span><span class="p">:</span><span class="w"> </span><span class="l">.1.3.6.1.4.1.318.1.1.1.4.3.6.0</span><span class="w">
</span><span class="w">
</span><span class="w">  </span><span class="c"># Determines whether the sensor should start and keep working even if the SNMP host is unreachable or not responding.</span><span class="w">
</span><span class="w">  </span><span class="c"># This allows the sensor to be initialized properly even if, for example, your printer is not on when you start Home Assistant.</span><span class="w">
</span><span class="w">  </span><span class="nt">accept_errors</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span><span class="w">
</span><span class="w">  </span><span class="c"># UPS reports in tens of kWh so we&#39;ll need to divide by 10 to get kWh; HA only accepts kWh or Wh for sensors</span><span class="w">
</span><span class="w">  </span><span class="c">#   that will &#39;work&#39; on the energy dashboard</span><span class="w">
</span><span class="w">  </span><span class="nt">unit_of_measurement</span><span class="p">:</span><span class="w"> </span><span class="l">kWh</span><span class="w">
</span><span class="w">  </span><span class="nt">value_template</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ ((value | int) / 10) | float}}&#34;</span><span class="w">
</span></code></pre></td></tr></table>
</div>
</div><p>Then, wrap the <code>snmp</code> sensor with the necessary properties:</p>
<p><code>devices/template/ups_energy.yaml</code>:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml">- <span class="nt">sensor</span><span class="p">:</span><span class="w">
</span><span class="w">    </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;UPS Energy&#34;</span><span class="w">
</span><span class="w">      </span><span class="c"># Unique ID is required for mgmt through the web UI</span><span class="w">
</span><span class="w">      </span><span class="nt">unique_id</span><span class="p">:</span><span class="w"> </span><span class="l">tmpl-ups-energy</span><span class="w">
</span><span class="w">      </span><span class="nt">icon</span><span class="p">:</span><span class="w"> </span><span class="l">mdi:lightning-bolt</span><span class="w">
</span><span class="w">      </span><span class="c"># Required for Energy dashboard</span><span class="w">
</span><span class="w">      </span><span class="nt">state_class</span><span class="p">:</span><span class="w"> </span><span class="l">total_increasing</span><span class="w">
</span><span class="w">      </span><span class="nt">device_class</span><span class="p">:</span><span class="w"> </span><span class="l">energy</span><span class="w">
</span><span class="w">      </span><span class="nt">unit_of_measurement</span><span class="p">:</span><span class="w"> </span><span class="l">kWh</span><span class="w">
</span><span class="w">      </span><span class="nt">state</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ (states(&#39;sensor.ups_energy_raw&#39;) | float) }}&#34;</span><span class="w">
</span></code></pre></td></tr></table>
</div>
</div><p>Restart Home Assistant and you should now be able to add <code>sensor.ups_energy</code> to the list of individual devices on your Energy Dashboard :D.</p>
<h3 id="current-and-voltage-independently">Current and Voltage independently</h3>
<p>After sorting through the <em>massive</em> MIB file that APC publishes; I only found ways to measure the voltage and current via SNMP. I assumed that APC meant for you to calculate the power use on your own from the voltage and current.</p>
<p>As it turns out, APC has a <code>upsHighPrecOutputEnergyUsage</code> field which reports: <code>The output energy usage of the UPS in hundredths of kWh.</code> If your APC device publishes a value on the OID <code>.1.3.6.1.4.1.318.1.1.1.4.3.6.0</code> then you can skip the configuration below; use the more concise configuration <a href="#a-single-oid-for-power-consumption" rel="">above</a>. If your devices <em><strong>does not</strong></em> publish the cumulative energy consumption, it can still be calculated manually.</p>
<p>The manual approach below is a lot like the concise approach above; uses two <code>snmp</code> sensors to collect the voltage and current from the UPS and then wrap everything in a LTS-compatible <code>template</code> sensor to get the data to show up on the energy dashboard.</p>
<p><code>devices/sensor/snmp.yaml</code>:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="c"># Unfortunately, there is no direct &#39;watt&#39; field. We need to calculate this on our own</span><span class="w">
</span><span class="w"></span><span class="c"># P = IV so if we can get the current and voltage, we can figure out the power</span><span class="w">
</span><span class="w"></span><span class="c">##</span><span class="w">
</span><span class="w"></span>- <span class="nt">platform</span><span class="p">:</span><span class="w"> </span><span class="l">snmp</span><span class="w">
</span><span class="w">  </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;UPS Output Current&#34;</span><span class="w">
</span><span class="w">  </span><span class="nt">host</span><span class="p">:</span><span class="w"> </span><span class="m">192.168.1.1</span><span class="w">
</span><span class="w">  </span><span class="c"># The current in tenths of amperes drawn by the load on the UPS.</span><span class="w">
</span><span class="w">  </span><span class="c"># Contained in Module(s): PowerNet-MIB</span><span class="w">
</span><span class="w">  </span><span class="c">##</span><span class="w">
</span><span class="w">  </span><span class="nt">baseoid</span><span class="p">:</span><span class="w"> </span><span class="l">.1.3.6.1.4.1.318.1.1.1.4.3.4.0</span><span class="w">
</span><span class="w">
</span><span class="w">  </span><span class="c"># Determines whether the sensor should start and keep working even if the SNMP host is unreachable or not responding.</span><span class="w">
</span><span class="w">  </span><span class="c"># This allows the sensor to be initialized properly even if, for example, your printer is not on when you start Home Assistant.</span><span class="w">
</span><span class="w">  </span><span class="nt">accept_errors</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span><span class="w">  </span><span class="c"># For reasons that I don&#39;t understand... HA does not like it when i specify &#39;device_class&#39; :/</span><span class="w">
</span><span class="w">  </span><span class="c">#device_class: current</span><span class="w">
</span><span class="w">  </span><span class="nt">unit_of_measurement</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;A&#34;</span><span class="w">
</span><span class="w">  </span><span class="c"># Because the number is in 10ths of amps, we need to shift the decimal by 1 place</span><span class="w">
</span><span class="w">  </span><span class="c">#   43 becomes 4.3</span><span class="w">
</span><span class="w">  </span><span class="c">##</span><span class="w">
</span><span class="w">  </span><span class="nt">value_template</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{((value | int) / 10) | float}}&#34;</span><span class="w">
</span><span class="w">
</span><span class="w"></span>- <span class="nt">platform</span><span class="p">:</span><span class="w"> </span><span class="l">snmp</span><span class="w">
</span><span class="w">  </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;UPS Output Voltage&#34;</span><span class="w">
</span><span class="w">  </span><span class="nt">host</span><span class="p">:</span><span class="w"> </span><span class="m">192.168.1.1</span><span class="w">
</span><span class="w">  </span><span class="c">#The output voltage of the UPS system in tenths of VAC.</span><span class="w">
</span><span class="w">  </span><span class="c"># Contained in Module(s): PowerNet-MIB</span><span class="w">
</span><span class="w">  </span><span class="c">##</span><span class="w">
</span><span class="w">  </span><span class="nt">baseoid</span><span class="p">:</span><span class="w"> </span><span class="l">.1.3.6.1.4.1.318.1.1.1.4.3.1.0</span><span class="w">
</span><span class="w">
</span><span class="w">  </span><span class="c"># Determines whether the sensor should start and keep working even if the SNMP host is unreachable or not responding.</span><span class="w">
</span><span class="w">  </span><span class="c"># This allows the sensor to be initialized properly even if, for example, your printer is not on when you start Home Assistant.</span><span class="w">
</span><span class="w">  </span><span class="nt">accept_errors</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span><span class="w">  </span><span class="nt">unit_of_measurement</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;V&#34;</span><span class="w">
</span><span class="w">  </span><span class="c"># Because the number is in 10ths of volts, we need to shift the decimal by 1 place</span><span class="w">
</span><span class="w">  </span><span class="c">#   1211 becomes 121.1</span><span class="w">
</span><span class="w">  </span><span class="c">##</span><span class="w">
</span><span class="w">  </span><span class="nt">value_template</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{((value | int) / 10) | float}}&#34;</span><span class="w">
</span><span class="w">
</span></code></pre></td></tr></table>
</div>
</div><p><code>devices/template/ups_energy.yaml</code>:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="c"># The docs around the long term stats support for a sensor are not super clear and seem to be a bit contradictory.</span><span class="w">
</span><span class="w"></span><span class="c"># Both the power and current sensors are &#39;point in time&#39; sensors and DO NOT represent an &#39;always increasing&#39; value.</span><span class="w">
</span><span class="w"></span><span class="c"># The docs seem to imply that HA will do the integration for you if the sensor has `state_class` set to `measurement` or</span><span class="w">
</span><span class="w"></span><span class="c">#   `total_increasing`. But elsewhere in the docs, you have this:</span><span class="w">
</span><span class="w"></span><span class="c">#         Home Assistant tracks the min, max and mean value during the statistics period.</span><span class="w">
</span><span class="w"></span><span class="c">#         The state_class property must be set to measurement, and the device_class must not be either of `energy`, `gas`, or `monetary`.</span><span class="w">
</span><span class="w"></span><span class="c">#</span><span class="w">
</span><span class="w"></span><span class="c"># In testing, I was only able to get sensors that had `total_increasing` and `energy` set to show up / work with the energy dashboard. It looks like a `measurement` sensor _could_ be used... but only if the `last_reset` property can be set to 0... and currently this can&#39;t be done via YAML.</span><span class="w">
</span><span class="w"></span><span class="c">#</span><span class="w">
</span><span class="w"></span><span class="c"># So we lie about the sensor and tell HA that it&#39;s a `total_increasing` sensor and we just hope that the value never drops more than 10% which appears to be the signal to HA that the meter has been reset :/</span><span class="w">
</span><span class="w"></span><span class="c">#</span><span class="w">
</span><span class="w"></span><span class="c"># https://developers.home-assistant.io/docs/core/entity/sensor/#long-term-statistics</span><span class="w">
</span><span class="w"></span><span class="c"># https://www.home-assistant.io/integrations/sensor/</span><span class="w">
</span><span class="w"></span><span class="c">##</span><span class="w">
</span><span class="w"></span>- <span class="nt">sensor</span><span class="p">:</span><span class="w">
</span><span class="w">    </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;UPS Power&#34;</span><span class="w">
</span><span class="w">      </span><span class="c"># Unique ID is required for mgmt through the web UI</span><span class="w">
</span><span class="w">      </span><span class="nt">unique_id</span><span class="p">:</span><span class="w"> </span><span class="l">tmpl-UPS-power-use</span><span class="w">
</span><span class="w">      </span><span class="nt">icon</span><span class="p">:</span><span class="w"> </span><span class="l">mdi:lightning-bolt</span><span class="w">
</span><span class="w">
</span><span class="w">      </span><span class="c"># This sensor records the instantaneous power load on the UPS... it is a measurement at that point in time</span><span class="w">
</span><span class="w">      </span><span class="nt">state_class</span><span class="p">:</span><span class="w"> </span><span class="l">measurement</span><span class="w">
</span><span class="w">      </span><span class="nt">device_class</span><span class="p">:</span><span class="w"> </span><span class="l">power</span><span class="w">
</span><span class="w">      </span><span class="nt">unit_of_measurement</span><span class="p">:</span><span class="w"> </span><span class="l">W</span><span class="w">
</span><span class="w">      </span><span class="nt">state</span><span class="p">:</span><span class="w"> </span><span class="p">&gt;</span><span class="sd">
</span><span class="sd">        {% set current = states(&#39;sensor.UPS_output_current&#39;) | float %}
</span><span class="sd">        {% set voltage = states(&#39;sensor.UPS_output_voltage&#39;) | float %}
</span><span class="sd">        {{ (current * voltage) | round (2) }}</span><span class="w">        
</span><span class="w">
</span><span class="w"></span>- <span class="nt">sensor</span><span class="p">:</span><span class="w">
</span><span class="w">    </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;UPS Energy&#34;</span><span class="w">
</span><span class="w">      </span><span class="c"># Unique ID is required for mgmt through the web UI</span><span class="w">
</span><span class="w">      </span><span class="nt">unique_id</span><span class="p">:</span><span class="w"> </span><span class="l">tmpl-UPS-energy</span><span class="w">
</span><span class="w">      </span><span class="nt">icon</span><span class="p">:</span><span class="w"> </span><span class="l">mdi:lightning-bolt</span><span class="w">
</span><span class="w">      </span><span class="c"># Lie to HA about the type of sensor so we get values in the dashboard.</span><span class="w">
</span><span class="w">      </span><span class="nt">state_class</span><span class="p">:</span><span class="w"> </span><span class="l">total_increasing</span><span class="w">
</span><span class="w">      </span><span class="nt">device_class</span><span class="p">:</span><span class="w"> </span><span class="l">energy</span><span class="w">
</span><span class="w">      </span><span class="c"># Since we are pretending to integrate over time, we are in Wh now.</span><span class="w">
</span><span class="w">      </span><span class="c"># Good thing, too... because the energy dashboard WILL NOT use any sensor that does not report in kWh or Wh</span><span class="w">
</span><span class="w">      </span><span class="nt">unit_of_measurement</span><span class="p">:</span><span class="w"> </span><span class="l">Wh</span><span class="w">
</span><span class="w">      </span><span class="nt">state</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{ (states(&#39;sensor.UPS_power&#39;) | float) }}&#34;</span><span class="w">
</span><span class="w">      </span><span class="c"># or, for kWh</span><span class="w">
</span><span class="w">      </span><span class="c">#state: &#34;{{ (states(&#39;sensor.UPS_power&#39;) | float)/1000 }}&#34;</span><span class="w">
</span><span class="w">
</span></code></pre></td></tr></table>
</div>
</div>]]></description></item><item><title>Fixing Home Assistant discovery with Tasmota on the Treatlife DS03</title><link>https://karlquinsland.com/treatlife-ds03-tasmota-autoconfig-with-homeassistant/</link><pubDate>Wed, 12 May 2021 00:00:00 +0000</pubDate><author>Author</author><guid>https://karlquinsland.com/treatlife-ds03-tasmota-autoconfig-with-homeassistant/</guid><description><![CDATA[<p><strong>UPDATE:</strong> (2021-10-22): Tasmota 9.5.0 has been superseded by the new <a href="https://github.com/arendst/Tasmota/releases/tag/v10.0.0" target="_blank" rel="noopener noreffer">Tasmota 10.0.0 release</a>. This release works perfectly with the rules/automation outlined below; you no longer need to avoid the problematic 9.5 release with the DS03. I am extremely grateful to every one of the people that contributes to the Tasmota project to keep it improving!</p>
<p><del><strong>UPDATE:</strong> (2021-09-19): Multiple have gotten in touch with me seeking some support with this post. At present, there is a <a href="https://github.com/arendst/Tasmota/issues/12684#event-5035253885" target="_blank" rel="noopener noreffer">bug</a> with the Tasmota 9.5.0 release which breaks the automation outlined below. If you are having trouble getting the steps below to work <strong><em>either use Tasmota 9.4 or the latest development release of tasmota 9.5 if you&rsquo;re going to continue on with this post!</em></strong></del></p>
<hr>
<p>The Treatlife DS03 is one of only a few Tasmota compatible ceiling fan controllers available in the US. It&rsquo;s internal architecture splits the task of dimming the lights and switching the fan speed electronics from communicating over the network.</p>
<p>A very resource constrained ESP8266 module handles the network comms while a dedicated microcontroller running it&rsquo;s own software manages the user-facing buttons/indicator-lights as well as dimming the light and adjusting the fan speed. The two components communicate over a simple UART.</p>
<p>This is a totally reasonable way to build such a device, but for reasons that I don&rsquo;t fully understand, Tasmota does not publish a completely functional <a href="https://www.home-assistant.io/docs/mqtt/discovery/" target="_blank" rel="noopener noreffer">auto-configuration</a> payload for Home Assistant.</p>
<p>Home Assistant automatically discovers the full light/dimmer capabilities of the DS03, but for some reason does not see that the DS03 is capable of running a fan at 4 different speeds; Home Assistant only allows for turning the fan on/off.</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        The default auto-configuration leads Home Assistant to believe the fan can only be switched on/off.
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>The <a href="https://templates.blakadder.com/treatlife_DS03.html" target="_blank" rel="noopener noreffer">existing</a> guides on <a href="https://www.digiblur.com/2020/07/the-tasmota-fan-controller-ive-been.html" target="_blank" rel="noopener noreffer">how to flash the device</a> with Tasmota and integrate it with Home Assistant all work around this limitation by <em><em>manually</em></em> configuring Home Assistant to see the device as a multi-speed fan ü§¶.</p>
<p>I&rsquo;m not a huge fan of doing things manually, especially when there&rsquo;s a well documented and robust protocol designed to make manual configuration unnecessary! Why ignore the almost completely working auto-configuration in favor of manual configuration? Why not just fix the auto-config payload so Home Assistant exposes the full functionality of the device?</p>
<p>Both of the above guides were written long before <a href="https://www.home-assistant.io/blog/2021/03/03/release-20213/#fan-speeds-100" target="_blank" rel="noopener noreffer">Home Assistant gained support</a> for fans with more than 3 speeds so even if I were to configure Home Assistant with a copy their example YAML, I&rsquo;d <em>still</em> be missing the ability to control the 4th speed!</p>
<h2 id="how">How</h2>
<p>In short, Tasmota supports some basic scripting, called <a href="https://tasmota.github.io/docs/Rules/" target="_blank" rel="noopener noreffer">rules</a>. They work exactly as you&rsquo;re thinking: On <code>$someEvent</code> do <a href="https://tasmota.github.io/docs/Commands/" target="_blank" rel="noopener noreffer"><code>$someAction</code></a>. One of the actions allows the Tasmota device to publish a message to a MQTT topic. I&rsquo;m going to have the DS03 broadcast a <em>proper</em> auto-configuration message to Home Assistant.</p>
<p>The technique is basically the same one outlined in <a href="https://blakadder.com/pir-in-tasmota-integration/" target="_blank" rel="noopener noreffer">this</a> article, but I&rsquo;m posting this to document a few of the subtle differences in my approach.</p>
<p>I&rsquo;ll assume that you&rsquo;ve successfully flashed your DS03 with Tasmota and have already configured the module and issued the necessary <code>ledtable</code> commands. You will also need the native <a href="https://www.home-assistant.io/integrations/tasmota/" target="_blank" rel="noopener noreffer">Tasmota</a> integration installed.</p>
<p>If you&rsquo;re following either the blakadder or digiblur guides linked above, stop at the step where you&rsquo;re meant to configure <code>rule1</code>.</p>
<p>Issue a slightly modified rule:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">Rule1 on TuyaReceived#Data=55AA03070005030400010016 do publish2 stat/%topic%/speed 25 endon
    on TuyaReceived#Data=55AA03070005030400010117 do publish2 stat/%topic%/speed 50 endon
    on TuyaReceived#Data=55AA03070005030400010218 do publish2 stat/%topic%/speed 75 endon
    on TuyaReceived#Data=55AA03070005030400010319 do publish2 stat/%topic%/speed 100 endon
</code></pre></td></tr></table>
</div>
</div><p>This tells Tasmota to publish an integer speed (25,50,75,100) when it receives a specific packet from the dedicated MCU over th UART.</p>
<p>Then, issue a second rule to actually publish the configuration data:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">rule2 on SetOption19#Data=OFF do publish2 homeassistant/fan/%macaddr%/config {&#34;uniq_id&#34;:&#34;AABBCC&#34;,&#34;~&#34;:&#34;%topic%/POWER1&#34;,&#34;cmd_t&#34;:&#34;cmnd/~&#34;,&#34;pl_off&#34;:&#34;OFF&#34;,&#34;pl_on&#34;:&#34;ON&#34;,&#34;stat_t&#34;:&#34;stat/~&#34;,&#34;avty_t&#34;:&#34;tele/%topic%/LWT&#34;,&#34;pl_avail&#34;:&#34;Online&#34;,&#34;pl_not_avail&#34;:&#34;Offline&#34;,&#34;pct_cmd_t&#34;:&#34;cmnd/%topic%/tuyasend4&#34;,&#34;pct_cmd_tpl&#34;:&#34;{%set v=value|int%}{%if v&lt;=25%}3,0{%elif v&lt;=50%}3,1{%elif v&lt;=75%}3,2{%elif v&lt;=100%}3,3{%endif%}&#34;,&#34;pct_stat_t&#34;:&#34;stat/%topic%/speed&#34;,&#34;dev&#34;:{&#34;cns&#34;:[[&#34;mac&#34;,&#34;%macaddr%&#34;]]}} endon
</code></pre></td></tr></table>
</div>
</div><p><strong>Note:</strong> You&rsquo;ll probably want to modify the above payload so the occurrences of the placeholder string <code>AABBCC</code> are replaced with the last 6 characters of your own device&rsquo;s MAC address!</p>
<p>For readability, here&rsquo;s the unminified JSON:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="p">{</span>
  <span class="nt">&#34;uniq_id&#34;</span><span class="p">:</span> <span class="s2">&#34;AABBCC&#34;</span><span class="p">,</span>
  <span class="nt">&#34;~&#34;</span><span class="p">:</span><span class="s2">&#34;%topic%/POWER1&#34;</span><span class="p">,</span>
  <span class="nt">&#34;cmd_t&#34;</span><span class="p">:</span> <span class="s2">&#34;cmnd/~&#34;</span><span class="p">,</span>
  <span class="nt">&#34;pl_off&#34;</span><span class="p">:</span> <span class="s2">&#34;OFF&#34;</span><span class="p">,</span>
  <span class="nt">&#34;pl_on&#34;</span><span class="p">:</span> <span class="s2">&#34;ON&#34;</span><span class="p">,</span>
  <span class="nt">&#34;stat_t&#34;</span><span class="p">:</span> <span class="s2">&#34;stat/~&#34;</span><span class="p">,</span>
  <span class="nt">&#34;avty_t&#34;</span><span class="p">:</span> <span class="s2">&#34;tele/%topic%/LWT&#34;</span><span class="p">,</span>
  <span class="nt">&#34;pl_avail&#34;</span><span class="p">:</span> <span class="s2">&#34;Online&#34;</span><span class="p">,</span>
  <span class="nt">&#34;pl_not_avail&#34;</span><span class="p">:</span> <span class="s2">&#34;Offline&#34;</span><span class="p">,</span>
  <span class="nt">&#34;pct_cmd_t&#34;</span><span class="p">:</span> <span class="s2">&#34;cmnd/%topic%/tuyasend4&#34;</span><span class="p">,</span>
  <span class="nt">&#34;pct_cmd_tpl&#34;</span><span class="p">:</span> <span class="s2">&#34;{%set v=value|int%}{%if v&lt;=25%}3,0{%elif v&lt;=50%}3,1{%elif v&lt;=75%}3,2{%elif v&lt;=100%}3,3{%endif%}&#34;</span><span class="p">,</span>
  <span class="nt">&#34;pct_stat_t&#34;</span><span class="p">:</span> <span class="s2">&#34;stat/%topic%/speed&#34;</span><span class="p">,</span>
  <span class="nt">&#34;dev&#34;</span><span class="p">:</span> <span class="p">{</span>
    <span class="nt">&#34;cns&#34;</span><span class="p">:</span> <span class="p">[</span>
      <span class="p">[</span>
        <span class="s2">&#34;mac&#34;</span><span class="p">,</span>
        <span class="s2">&#34;%macaddr%&#34;</span>
      <span class="p">]</span>
    <span class="p">]</span>
  <span class="p">}</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p><strong>Note:</strong> The <code>dev</code> portion of the payload is the <a href="https://www.home-assistant.io/integrations/fan.mqtt/#device" target="_blank" rel="noopener noreffer">magic that convinces Home Assistant to combine the multiple entities under once device</a>. Without that portion of the document, you will still have a properly configured DS03, but it will exist as an &lsquo;orphaned&rsquo; entity that belongs to no device!</p>
<p>All that&rsquo;s left is to enable <code>rule2</code> and then trigger it:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">rule2 1
so19 0
</code></pre></td></tr></table>
</div>
</div><p>Altogether, It&rsquo;ll look something like this:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">18:23:54.140 CMD: Rule1 on TuyaReceived#Data=55AA03070005030400010016 do publish2 stat/%topic%/speed 25 endon on TuyaReceived#Data=55AA03070005030400010117 do publish2 stat/%topic%/speed 50 endon on TuyaReceived#Data=55AA03070005030400010218 do publish2 stat/%topic%/speed 75 endon on TuyaReceived#Data=55AA03070005030400010319 do publish2 stat/%topic%/speed 100 endon
18:23:54.149 RUL: Stored uncompressed, would compress from 344 to 98 (-72%)
18:23:54.155 MQT: stat/living_room_ceiling_fan/RESULT = {&#34;Rule1&#34;:{&#34;State&#34;:&#34;ON&#34;,&#34;Once&#34;:&#34;OFF&#34;,&#34;StopOnError&#34;:&#34;OFF&#34;,&#34;Length&#34;:344,&#34;Free&#34;:167,&#34;Rules&#34;:&#34;on TuyaReceived#Data=55AA03070005030400010016 do publish2 stat/%topic%/speed 25 endon on TuyaReceived#Data=55AA03070005030400010117 do publish2 stat/%topic%/speed 50 endon on TuyaReceived#Data=55AA03070005030400010218 do publish2 stat/%topic%/speed 75 endon on TuyaReceived#Data=55AA03070005030400010319 do publish2 stat/%topic%/speed 100 endon&#34;}}

18:24:05.061 CMD: rule2 on SetOption19#Data=OFF do publish2 homeassistant/fan/%macaddr%/config {&#34;uniq_id&#34;:&#34;AABBCC&#34;,&#34;~&#34;:&#34;%topic%/POWER1&#34;,&#34;cmd_t&#34;:&#34;cmnd/~&#34;,&#34;pl_off&#34;:&#34;OFF&#34;,&#34;pl_on&#34;:&#34;ON&#34;,&#34;stat_t&#34;:&#34;stat/~&#34;,&#34;avty_t&#34;:&#34;tele/%topic%/LWT&#34;,&#34;pl_avail&#34;:&#34;Online&#34;,&#34;pl_not_avail&#34;:&#34;Offline&#34;,&#34;pct_cmd_t&#34;:&#34;cmnd/%topic%/tuyasend4&#34;,&#34;pct_cmd_tpl&#34;:&#34;{%set v=value|int%}{%if v&lt;=25%}3,0{%elif v&lt;=50%}3,1{%elif v&lt;=75%}3,2{%elif v&lt;=100%}3,3{%endif%}&#34;,&#34;pct_stat_t&#34;:&#34;stat/%topic%/speed&#34;,&#34;dev&#34;:{&#34;cns&#34;:[[&#34;mac&#34;,&#34;%macaddr%&#34;]]}} endon
18:24:05.093 RUL: Stored uncompressed, would compress from 473 to 351 (-26%)
18:24:05.100 MQT: stat/living_room_ceiling_fan/RESULT = {&#34;Rule2&#34;:{&#34;State&#34;:&#34;OFF&#34;,&#34;Once&#34;:&#34;OFF&#34;,&#34;StopOnError&#34;:&#34;OFF&#34;,&#34;Length&#34;:473,&#34;Free&#34;:38,&#34;Rules&#34;:&#34;on SetOption19#Data=OFF do publish2 homeassistant/fan/%macaddr%/config {\&#34;uniq_id\&#34;:\&#34;AABBCC\&#34;,\&#34;~\&#34;:\&#34;%topic%/POWER1\&#34;,\&#34;cmd_t\&#34;:\&#34;cmnd/~\&#34;,\&#34;pl_off\&#34;:\&#34;OFF\&#34;,\&#34;pl_on\&#34;:\&#34;ON\&#34;,\&#34;stat_t\&#34;:\&#34;stat/~\&#34;,\&#34;avty_t\&#34;:\&#34;tele/%topic%/LWT\&#34;,\&#34;pl_avail\&#34;:\&#34;Online\&#34;,\&#34;pl_not_avail\&#34;:\&#34;Offline\&#34;,\&#34;pct_cmd_t\&#34;:\&#34;cmnd/%topic%/tuyasend4\&#34;,\&#34;pct_cmd_tpl\&#34;:\&#34;{%set v=value|int%}{%if v&lt;=25%}3,0{%elif v&lt;=50%}3,1{%elif v&lt;=75%}3,2{%elif v&lt;=100%}3,3{%endif%}\&#34;,\&#34;pct_stat_t\&#34;:\&#34;stat/%topic%/speed\&#34;,\&#34;dev\&#34;:{\&#34;cns\&#34;:[[\&#34;mac\&#34;,\&#34;%macaddr%\&#34;]]}} endon&#34;}}
18:24:07.494 CMD: rule2 1
18:24:07.503 MQT: stat/living_room_ceiling_fan/RESULT = {&#34;Rule2&#34;:{&#34;State&#34;:&#34;ON&#34;,&#34;Once&#34;:&#34;OFF&#34;,&#34;StopOnError&#34;:&#34;OFF&#34;,&#34;Length&#34;:473,&#34;Free&#34;:38,&#34;Rules&#34;:&#34;on SetOption19#Data=OFF do publish2 homeassistant/fan/%macaddr%/config {\&#34;uniq_id\&#34;:\&#34;AABBCC\&#34;,\&#34;~\&#34;:\&#34;%topic%/POWER1\&#34;,\&#34;cmd_t\&#34;:\&#34;cmnd/~\&#34;,\&#34;pl_off\&#34;:\&#34;OFF\&#34;,\&#34;pl_on\&#34;:\&#34;ON\&#34;,\&#34;stat_t\&#34;:\&#34;stat/~\&#34;,\&#34;avty_t\&#34;:\&#34;tele/%topic%/LWT\&#34;,\&#34;pl_avail\&#34;:\&#34;Online\&#34;,\&#34;pl_not_avail\&#34;:\&#34;Offline\&#34;,\&#34;pct_cmd_t\&#34;:\&#34;cmnd/%topic%/tuyasend4\&#34;,\&#34;pct_cmd_tpl\&#34;:\&#34;{%set v=value|int%}{%if v&lt;=25%}3,0{%elif v&lt;=50%}3,1{%elif v&lt;=75%}3,2{%elif v&lt;=100%}3,3{%endif%}\&#34;,\&#34;pct_stat_t\&#34;:\&#34;stat/%topic%/speed\&#34;,\&#34;dev\&#34;:{\&#34;cns\&#34;:[[\&#34;mac\&#34;,\&#34;%macaddr%\&#34;]]}} endon&#34;}}

18:24:10.362 CMD: so19 0
18:24:10.369 MQT: stat/living_room_ceiling_fan/RESULT = {&#34;SetOption19&#34;:&#34;OFF&#34;}
18:24:10.414 RUL: SETOPTION19#DATA=OFF performs &#34;publish2 homeassistant/fan/DDEEFFAABBCC/config {&#34;uniq_id&#34;:&#34;AABBCC&#34;,&#34;~&#34;:&#34;living_room_ceiling_...
18:24:10.421 MQT: home Assistant/fan/DDEEFFAABBCC/config = {&#34;uniq_id&#34;:&#34;AABBCC&#34;,&#34;~&#34;:&#34;living_room_ceiling_fan/POWER1&#34;,&#34;cmd_t&#34;:&#34;cmnd/~&#34;,&#34;pl_off&#34;:&#34;OFF&#34;,&#34;pl_on&#34;:&#34;ON&#34;,&#34;stat_t&#34;:&#34;stat/~&#34;,&#34;avty_t&#34;:&#34;tele/living_room_ceiling_fan/LWT&#34;,&#34;pl_avail&#34;:&#34;Online&#34;,&#34;pl_not_avail&#34;:&#34;Offline&#34;,&#34;pct_cmd_t&#34;:&#34;cmnd/living_room_ceiling_fan/tuyasend4&#34;,&#34;pct_cmd_tpl&#34;:&#34;{%set v=value|int%}{%if v&lt;=25%}3,0{%elif v&lt;=50%}3,1{%elif v&lt;=75%}3,2{%elif v&lt;=100%}3,3{%endif%}&#34;,&#34;pct_stat_t&#34;:&#34;stat/living_room_ceiling_fan/speed&#34;,&#34;dev&#34;:{&#34;cns&#34;:[[&#34;mac&#34;,&#34;DDEEFFAABBCC&#34;]]}} (retained)
18:24:10.509 LOG: Home Assistant MQTT Discovery disabled.
</code></pre></td></tr></table>
</div>
</div><p>If everything worked correctly, Home Assistant should now show a single device in the <a href="https://developers.home-assistant.io/docs/device_registry_index/" target="_blank" rel="noopener noreffer">device registry</a> with a dimmable light entity and a variable-speed fan entity!</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        The DS03 device entity after the variable speed configuration document is received by Home Assistant.
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p><strong>Note:</strong> Depending on weather or not Home Assistant has previously &lsquo;seen&rsquo; your DS03 via the native native <a href="https://www.home-assistant.io/integrations/tasmota/" target="_blank" rel="noopener noreffer">Tasmota</a> integration, you may see <em>three</em> entities on the device page; the light/dimmer, the switch/fan and the variable speed fan. Just disable the &lsquo;basic&rsquo; fan switch entity that Tasmota publishes as discussed below.</p>
<h4 id="updating-a-ds03-thats-already-integrated-with-home-assistant">Updating a DS03 that&rsquo;s already integrated with Home Assistant</h4>
<p>If you&rsquo;ve already got a DS03 that&rsquo;s integrated with Home Assistant, you can still get the device to properly auto-configure. Just remove the YAML configuration for both the light and fan entities.</p>
<p>You will likely need to restart HA to make sure all traces of the manual configurations are removed from the <a href="https://developers.home-assistant.io/docs/entity_registry_index/" target="_blank" rel="noopener noreffer">entity registry</a>.</p>
<p>Once Home Assistant has forgotten all about the manual entities and the native <a href="https://www.home-assistant.io/integrations/tasmota/" target="_blank" rel="noopener noreffer">Tasmota</a> integration in installed, all of the MQTT-connected Tasmota devices <em>should</em> get picked up and configured in Home Assistant. At this point, you should have the single device with two entities; dimmable light and binary-switch fan as shown in the first picture on this post.</p>
<p>If your DS03 was already configured with Home Assistant via the Tasmota integration, just disable the simple switch entity that Tasmota configures Home Assistant with:</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        Toggle &#39;Enable entity&#39; off to hide the basic binary switch that Tasmota configured Home Assistant with.
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>After disabling the switch/fan entity, trigger <code>rule2</code> again and refresh the device entity page in Home Assistant to confirm that the device now has a <code>MQTT Fan</code> entity if it wasn&rsquo;t there already.</p>
<p>Enjoy :)</p>
<h4 id="why-use-setoption19off-as-the-trigger">Why use <code>SetOption19:OFF</code> as the trigger?</h4>
<p>I run my MQTT broker on Kubernetes and do not have any persistance configured for that pod. This means that regardless of what retention settings a message was published with, every message on every topic is wiped out whenever the MQTT broker pod is rescheduled. As a result almost every device that Home Assistant monitors or controls via MQTT drifts into an <code>Unavailable</code> state whenever I do any maintenance on my K8s cluster.</p>
<p>I&rsquo;m not the <a href="https://community.home-assistant.io/t/tasmota-going-offline-at-random-times/116299" target="_blank" rel="noopener noreffer">only one</a> with <a href="https://community.home-assistant.io/t/sonoff-tasmota-started-regularly-showing-unavailable-on-home-assistant/90157/83" target="_blank" rel="noopener noreffer">this issue</a>, even if the cause is different.</p>
<p>To get around this, I have a small automation that pokes the Tasmota devices every hour and when Home Assistant starts up. Since the Home Assistant pod takes longer than the MQTT pod to initialize, having HA poke the devices on startup minimizes the time a given entity is <code>Unavailable</code> in HA.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="nt">alias</span><span class="p">:</span><span class="w"> </span><span class="l">Tasmotas Announce</span><span class="w">
</span><span class="w"></span><span class="nt">description</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;Prevents devices from going Unavailable&#39;</span><span class="w">
</span><span class="w"></span><span class="nt">trigger</span><span class="p">:</span><span class="w">
</span><span class="w">  </span>- <span class="nt">platform</span><span class="p">:</span><span class="w"> </span><span class="l">home Assistant</span><span class="w">
</span><span class="w">    </span><span class="nt">event</span><span class="p">:</span><span class="w"> </span><span class="l">start</span><span class="w">
</span><span class="w">  </span>- <span class="nt">platform</span><span class="p">:</span><span class="w"> </span><span class="l">time_pattern</span><span class="w">
</span><span class="w">    </span><span class="nt">hours</span><span class="p">:</span><span class="w"> </span><span class="l">/1</span><span class="w">
</span><span class="w"></span><span class="nt">condition</span><span class="p">:</span><span class="w"> </span><span class="p">[]</span><span class="w">
</span><span class="w"></span><span class="nt">action</span><span class="p">:</span><span class="w">
</span><span class="w">  </span><span class="c"># For reasons that I don&#39;t understand, different tasmota devices seem to </span><span class="w">
</span><span class="w">  </span><span class="c">#     subscribe to a different group topic. cmnd/tas vs tas/cmnd</span><span class="w">
</span><span class="w">  </span><span class="c">##</span><span class="w">
</span><span class="w">  </span>- <span class="nt">service</span><span class="p">:</span><span class="w"> </span><span class="l">mqtt.publish</span><span class="w">
</span><span class="w">    </span><span class="nt">data</span><span class="p">:</span><span class="w">
</span><span class="w">      </span><span class="nt">topic</span><span class="p">:</span><span class="w"> </span><span class="l">cmnd/tasmotas/SetOption19</span><span class="w">
</span><span class="w">      </span><span class="nt">payload</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;0&#39;</span><span class="w">
</span><span class="w">  </span>- <span class="nt">service</span><span class="p">:</span><span class="w"> </span><span class="l">mqtt.publish</span><span class="w">
</span><span class="w">    </span><span class="nt">data</span><span class="p">:</span><span class="w">
</span><span class="w">      </span><span class="nt">topic</span><span class="p">:</span><span class="w"> </span><span class="l">tasmotas/cmnd/SetOption19</span><span class="w">
</span><span class="w">      </span><span class="nt">payload</span><span class="p">:</span><span class="w"> </span><span class="s1">&#39;0&#39;</span><span class="w">
</span><span class="w"></span><span class="nt">mode</span><span class="p">:</span><span class="w"> </span><span class="l">single</span><span class="w">
</span></code></pre></td></tr></table>
</div>
</div><p>You could probably work around this whole thing by changing the trigger for <code>rule2</code> to something like <code>on Mqtt#Connected publish2</code>. Or storing the configuration payload as a <a href="https://tasmota.github.io/docs/Rules/#rule-variables" target="_blank" rel="noopener noreffer">variable</a> so you could write multiple triggers for the same <code>publish2 %mem1%</code> action ü§î.</p>
<h3 id="side-note-rules-crash">Side note: Rules Crash!</h3>
<p>While developing the configuration payload, I was able to reliably crash the ESP8266 module causing Tasmota to reboot. The crash / reboot symptoms are pretty similar to those outlined <a href="https://tasmota.github.io/docs/Troubleshooting/#running-out-of-ram" target="_blank" rel="noopener noreffer">here</a> so I assume that even though the rules &ldquo;fit&rdquo;, something about how the rule was parsed or the actions the rule drove caused the ESP to run out of RAM.</p>
<p>When I say &ldquo;fit&rdquo; I mean that I&rsquo;d see lines like this in the console after configuring a test payload for <code>rule2</code>:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">MQT: stat/living_room_ceiling_fan/RESULT = {&#34;Rule2&#34;:{&#34;State&#34;:&#34;ON&#34;,...&#34;Free&#34;:9,&#34;Rules&#34;:&#34;on ... endon&#34;}}
</code></pre></td></tr></table>
</div>
</div><p>I could technically make the rule <code>9</code> characters longer and it&rsquo;d still fit&hellip; right?</p>
<p>Not quite. Looking at the result from issuing the <code>Rule1</code> command, it was clear that while <code>rule2</code> would have an absolute maximum length of 511 characters (<code>&quot;Length&quot;:344,&quot;Free&quot;:167</code>; 344+167=511) there was also a less well defined soft limit on rule length.</p>
<p>For some versions of my <code>rule2</code> payload, I was able to solve the crashing just by switching to the &lsquo;lite&rsquo; version of Tasmota. While the &lsquo;lite&rsquo; version of Tasmota does work with Tuya MCU (<code>USE_TUYA_MCU</code>), it <a href="https://github.com/arendst/Tasmota/blob/v9.4.0/BUILDS.md" target="_blank" rel="noopener noreffer">does <em>not</em> support</a> Home Assistant configuration (<code>USE_HOME_ASSISTANT</code>)!</p>
<p>After flashing back to the &lsquo;regular&rsquo; Tasmota build, I set out trying to compress the <code>rule2</code> payload as much as possible so that it would still work <em>and</em> not reliably crash the ESP8266 on the DS03.</p>
<p>After testing several things, I managed to get a working <code>rule2</code> that didn&rsquo;t reliably crash when triggered.</p>
]]></description></item><item><title>PoE powered Stack Light</title><link>https://karlquinsland.com/poe-stack-light/</link><pubDate>Sun, 28 Feb 2021 00:00:00 +0000</pubDate><author>Author</author><guid>https://karlquinsland.com/poe-stack-light/</guid><description><![CDATA[<figure >

    
        
    

    

    <figcaption>
        
        <p>
        The lights are much brighter than they appear in this picture; had to intentionally darken the image to prevent camera from blowing out the colors.
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p><a href="https://en.wikipedia.org/wiki/Stack_light" target="_blank" rel="noopener noreffer">Stack/signal lights</a> are <em>everywhere</em> in industrial applications for good reason: they&rsquo;re a compact and relatively information-dense indicator system. They always seemed like the kind of indicator that only people with expensive machines needed. Until I found that they can be had for just under $6/light from Ali Express, that is.</p>
<p>I don&rsquo;t have any giant industrial machines to attach one to, but I do have a non-trivial number of containers/servers/networked-devices running and they all emit various notifications, usually through email. Who wouldn&rsquo;t mind a novel way to move those notifications beyond email/push notifications into the physical world ü§î?</p>
<ul>
<li>üü¢ =&gt; Everything is nominal</li>
<li>üü† =&gt; Check your email; a <code>WARN</code> level event has occurred</li>
<li>üî¥ =&gt; A <code>WARN</code> or <code>ERROR</code> level condition has occurred; something (ISP down?) is preventing delivery of notifications so check the logs/dashboards directly</li>
<li>üîµ =&gt; A new <code>INFO</code> level message available in Home Assistant</li>
<li>‚ö™ =&gt; Not sure; either a &ldquo;A HIGH priority task is past due&rdquo; or a &lsquo;modifier&rsquo; for above status</li>
</ul>
<p>While waiting for the light to arrive from China, I started to design something to drive it.
It was immediately obvious that an ESP32 module would be <strong>ideal</strong> to run the show, and just for the fun of it, I decided to make the entire thing (optionally) controlled and powered over Ethernet.</p>
<h2 id="home-assistant">Home Assistant</h2>
<p>It wouldn&rsquo;t be an ESP32 powered project w/o the the <em>fantastic</em> <a href="https://esphome.io/" target="_blank" rel="noopener noreffer">ESPHome</a> framework! With ESPHome comes trivial Home Assistant integration; each individual light / channel on the stack light is automatically configured via MQTT a a light:</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        Stack light is controlled via MQTT making it easy to control from Home Assistant or any other program that can speak MQTT.
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>A slightly modified version of the ESPHome config that I use to build the firmware for the light is attached at the end of this post.</p>
<p>Unfortunately, the one Home Assistant integration that I had in mind is currently not feasible!
I wanted to light the blue light when there is any new/unread Home Assistant <a href="https://www.home-assistant.io/integrations/persistent_notification/" target="_blank" rel="noopener noreffer">persistent notifications</a>;
a real life &ldquo;unread&rdquo; badge of sorts.</p>
<p>There is no way to get the list / count of active notifications unless you&rsquo;re a <a href="https://github.com/home-assistant/core/blob/41b45c7f78f9937520b38126cedf228da7507d7d/homeassistant/components/persistent_notification/__init__.py#L203" target="_blank" rel="noopener noreffer">websocket client</a>, however.</p>
<p>Using the <a href="https://github.com/home-assistant/core/blob/41b45c7f78f9937520b38126cedf228da7507d7d/homeassistant/components/persistent_notification/__init__.py#L30" target="_blank" rel="noopener noreffer"><code>persistent_notifications_updated</code></a> event as a trigger won&rsquo;t work because the event payload lacks useful data; I can&rsquo;t figure out the number of notifications or their state&hellip; just that either notification has been created or dismissed.
If I wanted the blue light on any time a notification was either created or destroyed, I could use this trigger. But the light is no longer a useful indicator; it would be on the first time a notification was created or destroyed and then it would never be off.</p>
<p>Manually trying to <a href="https://community.home-assistant.io/t/dismiss-of-a-persistent-notification-as-trigger-for-automations/135621/5" target="_blank" rel="noopener noreffer">keep track of the number of notification created/dismissed actions</a> just feels like a hacky workaround that could easily get out of sync, too.</p>
<p>Oh well üòî.</p>
<h2 id="bom">BOM</h2>
<p>I&rsquo;ll cover the individual 3D printed and electronic components below. Beyond them, you&rsquo;ll need some additional hardware:</p>
<ul>
<li>4x <a href="https://www.mcmaster.com/catalog/91290A113" target="_blank" rel="noopener noreffer">m3x8mm</a> screws</li>
<li>4x <a href="https://www.mcmaster.com/catalog/91274A115" target="_blank" rel="noopener noreffer">m4x8mm</a> screws</li>
<li>4x <a href="https://www.mcmaster.com/catalog/91274A117" target="_blank" rel="noopener noreffer">m4x10mm</a> screws</li>
<li>6x <a href="https://www.kjmagnetics.com/proddetail.asp?prod=BC41" target="_blank" rel="noopener noreffer">Neodymium magnets</a> sized 20mm x 6mm x 2mm. These are optional and are leftover magnets from this <a href="https://www.google.com/search?client=firefox-b-1-d&amp;q=prusa&#43;mk3&#43;enclosure&#43;2" target="_blank" rel="noopener noreffer">build</a></li>
<li>10mm diameter <a href="https://www.amazon.com/s?k=10mm&#43;cabinet&#43;door&#43;pad" target="_blank" rel="noopener noreffer">anti-slip pads</a>. Thees are optional but will keep the base from sliding around.</li>
</ul>
<p>I&rsquo;ve linked to the screws that I used, but any similar ones should work. Strong glue could also work, but is not recommended.</p>
<p>The m3 screws are for attaching the PCB to the printed part (in yellow, below)
The shorter m4 screws are for attaching the base (yellow) to the lid (dark blue) and the longer screws are for attaching the stack light to the lid.</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        About to start melting threads into the 3D printed parts.
        
            
        
        </p> 
    </figcaption>
    
</figure>


<h4 id="stack-light">Stack light</h4>
<p>Looking quickly through Ali Express, it seems that the lights come in a few different styles, but all appear to be modular in construction.
Regardless of lamp style, they all appear to come in 2-5 lamp variants and some have configuration switches that allow for customizing the behavior per lamp.</p>
<p>The ESPHome code and PCB are designed to accommodate up to 6 colors but will work with less.</p>
<p>No matter which style and colors you select, make sure you get one with a <strong>positive <a href="https://en.wikipedia.org/wiki/Anode" target="_blank" rel="noopener noreffer">anode</a></strong> rated for <strong>12V DC</strong>.</p>
<p>The exact lamp that I used is <a href="https://www.aliexpress.com/item/1005001391165850.html" target="_blank" rel="noopener noreffer">here</a>.</p>
<h4 id="esp32-module">ESP32 Module</h4>
<p>I chose to use the <a href="https://www.aliexpress.com/item/1005001739834076.html" target="_blank" rel="noopener noreffer">WirelessTag WT32-eth01</a> module for the onboard Ethernet circuitry at a relatively cheap price: about $10/module. Bonus: it&rsquo;s got a breadboard friendly footprint <em>and</em> castellated pads!</p>
<p>You do not need to use Ethernet for control <em>or</em> power; the ESPHome configuration below can be easily modified to use the WiFi.</p>
<p>In any case, you will need a dedicated UART programmer for the module as there is no built-in USB port on the WT32-eth01.</p>
<h4 id="pcb">PCB</h4>
<p>Nothing much to see here; just a simple board to consolidate connections for what would otherwise be a mess of wires.</p>
<p>Since I was already using Ethernet for the data, may as well use it for the power, too.
Designing my own PoE circuitry was not in scope for this project, so I went with another off-the-shelf <a href="https://www.aliexpress.com/item/32620368747.html" target="_blank" rel="noopener noreffer">module</a>. I ordered the <code>12V2A-Full 24W</code> version, but the others are likely to also have an identical internal PCB layout which should fit in the 3D printed parts. Make sure to get one that supplies the 12V that the stack light will need!</p>
<p>The PCB does not care <em>where</em> the 12V DC supply comes from.
It wouldn&rsquo;t be difficult to modify the enclosure to accommodate a <a href="https://www.aliexpress.com/item/1005001668143510.html" target="_blank" rel="noopener noreffer">USB-C Power Delivery module</a> or even just a standard barrel jack / LED power supply.</p>
<p>Like the PoE module, I use an off the shelf DC to DC converter <a href="https://www.aliexpress.com/item/32833398811.html" target="_blank" rel="noopener noreffer">module</a> to step the 12V down from the PoE dongle to 5V which the ESP32 module requires. That link is to a whole-sale lot of 10 converters. You can order the same module in quantities of one from similar listings. I buy them in bulk because it&rsquo;s more expensive to design and solder my own on each board that I build&hellip;</p>
<p>My testing isn&rsquo;t super through, but I see the total power draw (measured from the PoE supplying equipment) reaching about 4.5W when all lights are on and about 2W at at idle.</p>
<p>The ESP32 just drives some <a href="https://lcsc.com/product-detail/MOSFET_Diodes-Incorporated-DMN1019USN-7_C145103.html" target="_blank" rel="noopener noreffer">N-Channel MOSFETS</a> to switch the individual lights on/off.
They&rsquo;re the only surface mount (SOT-23-4) component; everything else can be done with through hole components. The board is designed for up to 6 colors/lights, but populate only as many MOSFETS as you need.</p>
<p>All of the screw terminals are optional; I had several spares left over from a different project, but soldering wires directly to the PCB would work as well.</p>
<p>The 6 pin screw terminal is LCSC part <a href="https://lcsc.com/product-detail/Screw-terminal_JILN-JL301-50007U02_C409139.html" target="_blank" rel="noopener noreffer"><code>C409139</code></a></p>
<p>The 2 pin screw terminal is LCSC part <a href="https://lcsc.com/product-detail/Screw-terminal_Ningbo-Kangnex-Elec-WJ129V-5-0-2P_C8463.html" target="_blank" rel="noopener noreffer"><code>C8463</code></a></p>
<p>The source and gerber files from EasyEDA are below. Upload them to your favorite PCB prototyping service or try your hand at making your own.</p>
<h4 id="printed-parts">Printed parts</h4>
<p>There are two parts: a <code>lid</code> and a <code>plate</code>. The electronics are attached to the plate and the stack light is attached to the lid. In the photos associated with this post, the <code>lid</code> is dark blue and the <code>plate</code> is yellow.</p>
<p>The plate has features for several attachment methods:</p>
<ul>
<li>magnets; meant for horizontal surfaces</li>
<li>3M command strip; probably wont be enough to do wall/ceilings, but should work in lieu of magnets on horizontal surfaces</li>
<li>4 circular indents (<code>10mm</code> diameter) included for anti-slip pads</li>
<li>drywall screw/slot mounting for walls/ceilings</li>
</ul>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        I wasn&#39;t sure where I&#39;d want to install this, so there are a few options for attaching the base to surfaces.
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>Pause the print job at the correct layer if you intend to embed magnets:</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        Insert your magnets before the layer covering thee 6 cavities is printed.
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>Both the <code>lid</code> and <code>base</code> are easy to print; material and color are up to you, as is layer height and quality settings. The <code>stl</code> and <code>step</code> files for both are at the end of this post.
Should you want to make your own enclosure from scratch, I have also included the <code>step</code> files for the PoE dongle and PCB below.</p>
<h2 id="assemble">Assemble</h2>
<p>Assembly is relatively straightforward; its mostly integrating a few components into a simple 3d printed enclosure.</p>
<h3 id="pcb-1">PCB</h3>
<p>Solder the electronic components to the PCB. If omitting screw terminals for the stack light wires, do not solder them to the PCB yet!</p>
<p>I created the castellated pad footprint for the ESP32 module by hand and, in the version of the PCB pictured, didn&rsquo;t get the pads as close as they should be so there are some ugly solder blobs to compensate. The pads are correctly placed on the most recent PCB revision.</p>
<p>I have included two programming headers on the PCB to flash your firmware; one at <code>2.54mm</code> pitch and the other at <code>1.0mm</code> pitch, the latter of which is intended for use with <a href="https://www.aliexpress.com/item/4001122992446.html" target="_blank" rel="noopener noreffer">this</a> programmer.</p>
<p>There is a solder bridge labeled <code>EXT 3v3</code>; short this out if you intend to use the programmer to power the ESP32 module. Leave it alone if you plan to use external DC to power the device during programming.</p>
<p>I suggest programming the module <em>now</em> to verify that you&rsquo;ve built the PCB correctly and that your stack light works as expected.
Once you&rsquo;ve confirmed the electronics and software all work together, proceed to final assembly.</p>
<h2 id="everything-else">Everything else</h2>
<p>The various holes designed to receive screw threads are intentionally undersized. If you&rsquo;re not using self-tapping screws, you&rsquo;ll find it MUCH EASER to insert a <em>hot</em> screw for the first time.</p>
<p>With the screw on the end of the driver, hold the tip of the screw/threads under a flame for 5-10 seconds and then quickly rotate the screw into the plastic using a bit of extra &lsquo;pushing&rsquo; force.
Once the screw is fully inserted, allow it to fully cool (~5min) so the softened plastic has a chance to solidify around the screw threads.</p>
<p>The screws that hold the base plate to the body of the enclosure are meant to sit flush. Ensure that you screw them in fully before the plastic cools!</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        If the screws protrude even a fraction of a millimeter, the light can wobble and the magnetic attachment is weakened.
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>While waiting for the screws to cool, cut the Ethernet and power leads from the PoE dongle down to size. Desolder the leads from the dongle, trim to be as short as possible and re-solder.</p>
<p>The less &lsquo;slack&rsquo; cable in the enclosure, the easier it will be to finish assembly!</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        I cut a few inches off the Ethernet cable and power leads so everything fits in the enclosure better.
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>After the screws have cooled, ensure that the PCB sits flush against the mounts.</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        PCB should be flush against the mounting posts.
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>With all wires connected, lift the PoE dongle off of the base plate slightly and align the RJ45 jack with the square hole in the enclosure.</p>
<p>Make sure the side of the base plate opposite the side with the RJ45 jack is securely mounts into the body of the enclosure!</p>
<p>Gently press the remaining side of the base plate into the enclosure. As the base plate gets closer to flush with the body, the RJ45 jack should slowly come into alignment with the wall.</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        Use the plate as a lever to carefully push, then hold, the PoE dongle in place.
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>When the base blate is completely installed into the body, the RJ45 jack should be flush with the external wall of the enclosure.</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        RJ45 jack should be flush to the outer wall of the enclosure.
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>Attach the base plate to the enclosure body with the 4 screws, attach silicon feet or a 3M command strip and then you&rsquo;re done!</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        Translucent white lenses for much less ambiguity than the stack lights with colored lenses.
        
            
        
        </p> 
    </figcaption>
    
</figure>


<h2 id="files">Files</h2>
<p>All files below are licensed under the <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank" rel="noopener noreffer">Attribution-NonCommercial-ShareAlike 4.0 International (CC BY-NC-SA 4.0)</a> license unless otherwise explicitly noted.</p>
<p><strong>None of the files below may be used for commercial purposes</strong></p>
<ul>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/poe-stack-light/images/complete/01_all_off.jpg">
                    
                </a>
                
                <figcaption>
                    <small>Translucent white lenses for much less ambiguity than the stack lights with colored lenses.</small>
                </figcaption>
                
            </figure>

        
    </li>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/poe-stack-light/images/assemble/base_mounting_options.png">
                    
                </a>
                
                <figcaption>
                    <small>I wasn&#39;t sure where I&#39;d want to install this, so there are a few options for attaching the base to surfaces.</small>
                </figcaption>
                
            </figure>

        
    </li>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/poe-stack-light/images/assemble/04_close.jpg">
                    
                </a>
                
                <figcaption>
                    <small>Use the plate as a lever to carefully push, then hold, the PoE dongle in place.</small>
                </figcaption>
                
            </figure>

        
    </li>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/poe-stack-light/images/complete/02_all_on.jpg">
                    
                </a>
                
                <figcaption>
                    <small>The lights are much brighter than they appear in this picture; had to intentionally darken the image to prevent camera from blowing out the colors.</small>
                </figcaption>
                
            </figure>

        
    </li>
    
    <li>
        
            <a target="_blank" href="https://karlquinsland.com/poe-stack-light/files/easy_eda_gerber.zip">
                <i class="far fa-file-"></i>
                files/easy_eda_gerber.zip:
                
                
                <br>
                <small>sha1: d7686b0ad88a1686a5a11cb009632b53ca474c75</small>
                
            </a>
        
    </li>
    
    <li>
        
            <a target="_blank" href="https://karlquinsland.com/poe-stack-light/files/easy_eda_source.zip">
                <i class="far fa-file-"></i>
                files/easy_eda_source.zip:
                
                
                <br>
                <small>sha1: e05a00cdca9af94dd0e8d1d8f3aa998b75c14a08</small>
                
            </a>
        
    </li>
    
    <li>
        
            <a target="_blank" href="https://karlquinsland.com/poe-stack-light/files/enclosure-lid-m1v2.stl">
                <i class="far fa-file-code"></i>
                files/enclosure-lid-m1v2.stl:
                
                <small style="font-family:'Lucida Console', monospace">stl</small> <small>file</small>
                
                
                <br>
                <small>sha1: 3870a674d9cf08bf26e3607e42ee766e9816ac6c</small>
                
            </a>
        
    </li>
    
    <li>
        
            <a target="_blank" href="https://karlquinsland.com/poe-stack-light/files/enclosure-plate-m1v2.stl">
                <i class="far fa-file-code"></i>
                files/enclosure-plate-m1v2.stl:
                
                <small style="font-family:'Lucida Console', monospace">stl</small> <small>file</small>
                
                
                <br>
                <small>sha1: 8f90b54be2a798cf87bc6ca4fc118b82669e0668</small>
                
            </a>
        
    </li>
    
    <li>
        
            <a target="_blank" href="https://karlquinsland.com/poe-stack-light/files/esphome_confg.yaml">
                <i class="far fa-file-code"></i>
                files/esphome_confg.yaml:
                
                <small style="font-family:'Lucida Console', monospace">yaml</small> <small>file</small>
                
                
                <br>
                <small>sha1: aa0076b7bee08f09568536463c8794f15a2f59b2</small>
                
            </a>
        
    </li>
    
    <li>
        
            <a target="_blank" href="https://karlquinsland.com/poe-stack-light/files/pcb.step">
                <i class="far fa-file-code"></i>
                files/pcb.step:
                
                <small style="font-family:'Lucida Console', monospace">step</small> <small>file</small>
                
                
                <br>
                <small>sha1: e212f3cd3d90a639e6518b7d11bc5cc20df09b67</small>
                
            </a>
        
    </li>
    
    <li>
        
            <a target="_blank" href="https://karlquinsland.com/poe-stack-light/files/poe-dongle.step">
                <i class="far fa-file-code"></i>
                files/poe-dongle.step:
                
                <small style="font-family:'Lucida Console', monospace">step</small> <small>file</small>
                
                
                <br>
                <small>sha1: a698c249d89f2ab2c981427df49620cb09ce5f66</small>
                
            </a>
        
    </li>
    
    <li>
        
            <a target="_blank" href="https://karlquinsland.com/poe-stack-light/files/stack-light-base.step">
                <i class="far fa-file-code"></i>
                files/stack-light-base.step:
                
                <small style="font-family:'Lucida Console', monospace">step</small> <small>file</small>
                
                
                <br>
                <small>sha1: 3c3d0d6162a985b4f09d0f9a58fdacb3f08beb78</small>
                
            </a>
        
    </li>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/poe-stack-light/images/assemble/00_flush_screws.jpg">
                    
                </a>
                
                <figcaption>
                    <small>If the screws protrude even a fraction of a millimeter, the light can wobble and the magnetic attachment is weakened.</small>
                </figcaption>
                
            </figure>

        
    </li>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/poe-stack-light/images/home-assistant.png">
                    
                </a>
                
                <figcaption>
                    <small>Stack light is controlled via MQTT making it easy to control from Home Assistant or any other program that can speak MQTT.</small>
                </figcaption>
                
            </figure>

        
    </li>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/poe-stack-light/images/assemble/02_pcb_attached.jpg">
                    
                </a>
                
                <figcaption>
                    <small>PCB should be flush against the mounting posts.</small>
                </figcaption>
                
            </figure>

        
    </li>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/poe-stack-light/images/complete/00_plugged_in.jpg">
                    
                </a>
                
                <figcaption>
                    <small>RJ45 jack should be flush to the outer wall of the enclosure.</small>
                </figcaption>
                
            </figure>

        
    </li>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/poe-stack-light/images/assemble/01_prep.jpg">
                    
                </a>
                
                <figcaption>
                    <small>About to start melting threads into the 3D printed parts.</small>
                </figcaption>
                
            </figure>

        
    </li>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/poe-stack-light/images/slicer.png">
                    
                </a>
                
                <figcaption>
                    <small>Insert your magnets before the layer covering thee 6 cavities is printed.</small>
                </figcaption>
                
            </figure>

        
    </li>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/poe-stack-light/images/assemble/03_wire.jpg">
                    
                </a>
                
                <figcaption>
                    <small>I cut a few inches off the Ethernet cable and power leads so everything fits in the enclosure better.</small>
                </figcaption>
                
            </figure>

        
    </li>
    
</ul>

]]></description></item><item><title>Unbrick a rievtech PLC after failed firmware upgrade</title><link>https://karlquinsland.com/unbrick-rievtech-plc-failed-firmware-update/</link><pubDate>Wed, 13 Jan 2021 00:00:00 +0000</pubDate><author>Author</author><guid>https://karlquinsland.com/unbrick-rievtech-plc-failed-firmware-update/</guid><description><![CDATA[<p>This is &ldquo;reference&rdquo; post for anybody else that happens to have this same very specific problem.</p>
<p>I was looking for a way to incorporate some of the <em>many</em> cheap / industrial grade sensors from AliExpress with Home Assistant.
Long story short: almost everything electronic in the industrial space uses <a href="https://modbus.org/" target="_blank" rel="noopener noreffer">Modbus</a> to communicate, typically with a <a href="https://en.wikipedia.org/wiki/Programmable_logic_controller" target="_blank" rel="noopener noreffer">PLC</a>. While Home Assistant <a href="https://www.home-assistant.io/integrations/modbus/" target="_blank" rel="noopener noreffer">does have support</a> for the Modbus protocol, but wanted to use a PLC that could manage the sensors directly and expose the values over the network in a more standard format; MQTT.</p>
<p>Turns out, quite a few PLCs come with network interfaces and can speak MQTT now!</p>
<p>So I picked up a <a href="https://www.rievtech.com/PR-18DC-DAI-R-N-pd72286477.html" target="_blank" rel="noopener noreffer"><code>PR-18DC-DAI-R-N</code></a> PLC from the &lsquo;budget friendly&rsquo; supplier rievtech. The PLC was put into service in 2018 and never updated; the firmware version it was running was almost certainly below <code>150</code> but I didn&rsquo;t record the specific version.</p>
<figure >

    
        
    

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>Hoping to squash a small bug, I chose to upgrade the firmware to version <code>152</code> which was released at the end of 2020 and somehow managed to brick the device ü§¶.</p>
<p>I am <em>speculating</em> but it looks like something significant changed around firmware version <code>150</code>. If you try to update a device from a version prior to <code>150</code> - like I did - something in memory is not properly migrated to the format required by versions after <code>150</code> and this causes the update process to fail before completion:</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        SO close!
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>That failure message came from the <a href="https://www.rievtech.com/phoenix/admin/download?fileId=jGUKpAvYWcQE&amp;dp=GvUApKfKKUAU" target="_blank" rel="noopener noreffer">Update_Net_V152_20201205.zip</a> file which is meant for the ethernet equipped PLCs in the <code>PR</code> line. The failure apparently soft bricks the PLC.</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        Blank white screen. Non responsive buttons, Occasional blinking Ethernet lights. Fun! üôÉ
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>The PLC seemed &lsquo;alive&rsquo; as I could still see <code>arp</code> packets coming from it&rsquo;s ethernet port on boot and the web server seemed to accept my connection but never return any data. Even after restarting the PLC, the firmware updater was able to open a new connection and flash the firmware&hellip; always failing at the same spot: 99.17%.</p>
<p>Clearly <em>something</em> is alive and well inside the PLC&hellip; If I can connect to whatever <em>is</em> running and convince that process to update the flash then I have a good shot to do &lsquo;solderless&rsquo; recovery. Absolute worst case, I buy another one and clone the flash memory from the working one onto the bricked one.</p>
<h2 id="recovery-process">Recovery process</h2>
<p>Turns out, their support team has a file ready to go for this exact problem! I guess I&rsquo;m not the first person. Really wish they&rsquo;d publish this file and/or procedure on their website. I could have recovered from my failure in minutes with a quick google search and saved myself a few hours of trouble shooting before drafting a support ticket&hellip; not to mention the days of waiting for a reply. Oh well. That&rsquo;s why <em>I&rsquo;m</em> documenting it.</p>
<p>I was given a 2.6MB file named <code>UpdateFail_PR-18DC-DAI-R-N_V150.zip</code>. After extracting, it looks a lot like their <em>regular</em> firmware update archives, just much smaller. I suspect that the archive is much smaller because it&rsquo;s only got flash images for a few affected models/devices. In any event, the archive comes with a <code>doc</code> file that I couldn&rsquo;t open and was able to eventually convert it to a <code>pdf</code> which is also attached to this post.</p>
<p>In short:</p>
<ul>
<li>Connect the PLC using their <a href="https://www.rievtech.com/USB-Cable-pd67130.html" target="_blank" rel="noopener noreffer">programming cable</a></li>
<li>Open the COM port and &lsquo;prepare&rsquo; the device. This takes only a few seconds</li>
<li>Click the update button. In my case, I got a failure telling me to `Please power off the PLC first, and then power on again!&quot;</li>
<li>Power cycle the PLC, keeping the update program and COM port open</li>
<li>Click <code>Start</code>. The process of flashing version <code>150</code> started and took several minutes to finish</li>
</ul>
<p>This left me with a <em>completely working</em> PLC ü•≥! I was able to access the web interface and use the LCD screen. I was <em>then</em> able to use the network update tool to the firmware version released recently; version <code>152</code>.</p>
<p>So there you go. If a failed network update leaves your <code>PR</code> series PLC in a mostly-not-working state, there is hope!</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        Able to flash Version 152 w/o issue!
        
            
        
        </p> 
    </figcaption>
    
</figure>


<h2 id="files">Files</h2>
<ul>
    
    <li>
        
            <a target="_blank" href="https://karlquinsland.com/unbrick-rievtech-plc-failed-firmware-update/files/How%20to%20update%20the%20hardware.doc.pdf">
                <i class="far fa-file-doc"></i>
                files/How to update the hardware.doc.pdf:
                
                <small style="font-family:'Lucida Console', monospace">pdf</small> <small>file</small>
                
                
                <br>
                <small>sha1(How to update the hardware.doc.pdf): 0b451b11938b58c384465f5bf350b2f133848649</small>
                
            </a>
        
    </li>
    
    <li>
        
            <a target="_blank" href="https://karlquinsland.com/unbrick-rievtech-plc-failed-firmware-update/files/UpdateFail_PR-18DC-DAI-R-N_V150.zip">
                <i class="far fa-file-archive"></i>
                files/UpdateFail_PR-18DC-DAI-R-N_V150.zip:
                
                <small style="font-family:'Lucida Console', monospace">zip</small> <small>file</small>
                
                
                <br>
                <small>sha1(UpdateFail_PR-18DC-DAI-R-N_V150.zip): 60c306b521cdb15589b0e36dc73df484c2117539</small>
                
            </a>
        
    </li>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/unbrick-rievtech-plc-failed-firmware-update/images/plc-01.jpg">
                    
                </a>
                
                <figcaption>
                    <small>Blank white screen. Non responsive buttons, Occasional blinking Ethernet lights. Fun! üôÉ</small>
                </figcaption>
                
            </figure>

        
    </li>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/unbrick-rievtech-plc-failed-firmware-update/images/plc-00.jpg">
                    
                </a>
                
                
            </figure>

        
    </li>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/unbrick-rievtech-plc-failed-firmware-update/images/recovery-01.png">
                    
                </a>
                
                <figcaption>
                    <small>Able to flash Version 152 w/o issue!</small>
                </figcaption>
                
            </figure>

        
    </li>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/unbrick-rievtech-plc-failed-firmware-update/images/update-01.png">
                    
                </a>
                
                <figcaption>
                    <small>SO close!</small>
                </figcaption>
                
            </figure>

        
    </li>
    
</ul>

]]></description></item><item><title>Monitoring APC AP7900 switched PDU with Prometheus and Grafana</title><link>https://karlquinsland.com/monitoring-ap7900-switched-pdu-prometheus-grafana/</link><pubDate>Sun, 27 Dec 2020 00:00:00 +0000</pubDate><author>Author</author><guid>https://karlquinsland.com/monitoring-ap7900-switched-pdu-prometheus-grafana/</guid><description><![CDATA[<p>The APC AP7900 is a 1U single phase PDU with 8 switchable outlets and a network interface. It&rsquo;s been EoL&rsquo;d and can be had for less than 20% of it&rsquo;s original price on <a href="https://www.ebay.com/sch/i.html?_nkw=AP7900" target="_blank" rel="noopener noreffer">eBay</a>. The network interface is so underpowered tha it can&rsquo;t <a href="http://origin-faq.pro-face.com/resources/sites/PROFACE/content/live/FAQS/300000/FA300635/en_US/APC%20AP7000%20Series%20End%20of%20Life%20Notice.pdf" target="_blank" rel="noopener noreffer">support any modern cryptographic ciphers</a>.</p>
<p>So with that, here&rsquo;s a revised copy of my notes from the process of getting the device reset, updated and monitored.</p>
<h2 id="the-hardware">The Hardware</h2>
<figure >

    
        
    

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>Unfortunately, there&rsquo;s no &ldquo;reset everything to defaults&rdquo; button or button sequence on the PDU. The unit I purchased had been configured with a manual IP assignment so it wasn&rsquo;t as straightforward as using an unfolded paperclip to press the reboot button at boot and wait for a successful DHCP negotiation. This process has been <a href="https://dan.langille.org/2015/01/13/apc-pdu-ap7900-resetting-the-password/" target="_blank" rel="noopener noreffer">covered before</a>, so I&rsquo;ll omit it here. In short: connect to the local mgmt interface via the <a href="https://pinoutguide.com/UPS/apc_smart_cable_pinout.shtml" target="_blank" rel="noopener noreffer">serial port</a>, adjust the network configuration and other settings as needed.</p>
<p>The firmware can be updated via FTP easily enough. The processor on the network interface is <em>really</em> slow so allow for <em>several minutes</em> between the bin file upload and the flashing to commence/end. I had to repeat this three times for each of the partitions / subsystem OSs.</p>
<h2 id="the-metrics">The Metrics</h2>
<p>Again, because the network interface has an ancient/slow CPU, any method that extracts metrics from the device must be light weight&hellip; enter <a href="https://en.wikipedia.org/wiki/Simple_Network_Management_Protocol" target="_blank" rel="noopener noreffer">SNMP</a>.</p>
<p>SNMP is quite old and cumbersome but there&rsquo;s an <a href="https://github.com/prometheus/snmp_exporter" target="_blank" rel="noopener noreffer">exporter for prometheus</a> which, after some tedious configuration, can interface the complexity that is is legacy SNMP with prometheus.</p>
<h3 id="generating-a-config">Generating a config</h3>
<p>In short, SNMP identifies each setting/entity that can be monitored or set with a unique numerical ID. Each number is separated with a <code>.</code> and represents a specific edge/vertex on the graph of all settings that device supports.</p>
<p>So, a setting known as <code>rPDUIdentDeviceLinetoLineVoltage</code> may be &lsquo;read&rsquo; at the following address: <code>1.3.6.1.4.1.318.1.1.12.1.15.0</code>. So if you have a few hundred parameters to monitor, you&rsquo;ll have a few hundred nondescript numerical paths. Keeping track of them all is a royal pain in the ass, even with <a href="https://en.wikipedia.org/wiki/Management_information_base" target="_blank" rel="noopener noreffer">lookup tables</a>; known as &ldquo;MIB files&rdquo;.</p>
<p>Unfortunately, there&rsquo;s no way around it; a map between the numerical paths and the &lsquo;human friendly&rsquo; names must be built so the prometheus exporter knows what to expose and how to categorize it.</p>
<p>The exporter comes with <a href="https://github.com/prometheus/snmp_exporter/tree/master/generator" target="_blank" rel="noopener noreffer">generator</a> to make this process a bit easier, but the process of obtaining MIB files isn&rsquo;t quite so straightforward.
I hit a few snags and below is an updated <code>Dockerfile</code> that gave me a <em>working</em> generator tool:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-Dockerfile" data-lang="Dockerfile"><span class="err">
</span><span class="err"></span><span class="k">FROM</span><span class="s"> golang:latest</span><span class="err">
</span><span class="err">
</span><span class="err"></span><span class="c">##</span><span class="err">
</span><span class="err"></span><span class="c"># The `mibs` target in the Makefile does not run to completion on OSX.</span><span class="err">
</span><span class="err"></span><span class="c"># Somewhere, a `sed` command is run against some vendor&#39;s MIB file that&#39;s for hardware that I don&#39;t want to target.</span><span class="err">
</span><span class="err"></span><span class="c"># I don&#39;t have the patience to resolve those issues and i&#39;d prefer that the _entire_ MIB parse and generate </span><span class="err">
</span><span class="err"></span><span class="c">#   process be 100% contained in the container image anyways.</span><span class="err">
</span><span class="err"></span><span class="c">#</span><span class="err">
</span><span class="err"></span><span class="c"># There are a _variety_ of errors that cropped up when running `generator parse_errors`:</span><span class="err">
</span><span class="err"></span><span class="c">#</span><span class="err">
</span><span class="err"></span><span class="c"># - level=warn ts=2020-12-27T21:40:42.988Z caller=main.go:120 msg=&#34;NetSNMP reported parse error(s)&#34; errors=16924</span><span class="err">
</span><span class="err"></span><span class="c"># - Cannot find module (SNMPv2-SMI): At line 275 in mibs/apc-powernet-mib</span><span class="err">
</span><span class="err"></span><span class="c"># - Did not find &#39;enterprises&#39; in module #-1 (mibs/apc-powernet-mib)</span><span class="err">
</span><span class="err"></span><span class="c"># - Did not find &#39;DisplayString&#39; in module #-1 (mibs/apc-powernet-mib)</span><span class="err">
</span><span class="err"></span><span class="c"># - Unlinked OID in PowerNet-MIB: apc ::= { enterprises 318 }</span><span class="err">
</span><span class="err"></span><span class="c"># - Undefined identifier: enterprises near line 281 of mibs/apc-powernet-mib</span><span class="err">
</span><span class="err"></span><span class="c"># - Cannot adopt OID in PowerNet-MIB: atsInputEntry ::= { atsInputTable 1 }</span><span class="err">
</span><span class="err"></span><span class="c"># -   &lt;and hundreds more `Cannot adopt OID in PowerNet-MIB:` messages</span><span class="err">
</span><span class="err"></span><span class="c"># - Bad operator (INTEGER): At line 73 in /usr/share/snmp/mibs/ietf/SNMPv2-PDU</span><span class="err">
</span><span class="err"></span><span class="c">#</span><span class="err">
</span><span class="err"></span><span class="c">#</span><span class="err">
</span><span class="err"></span><span class="c"># After some searching, it appears that MIBs can refer to other MIBs and some set of &#39;base&#39; files is not present.</span><span class="err">
</span><span class="err"></span><span class="c"># Due to licensing, the Debian docker image that the generator is based on does NOT ship w/ them or the </span><span class="err">
</span><span class="err"></span><span class="c">#   `snmp-mibs-downloader` tool which is used to fetch the base MIB files. This is easy enough to fix...</span><span class="err">
</span><span class="err"></span><span class="c">##</span><span class="err">
</span><span class="err"></span><span class="c"># First, update the repos we&#39;ll pull packaged from</span><span class="err">
</span><span class="err"></span><span class="k">RUN</span> <span class="nb">echo</span> <span class="s2">&#34;deb http://deb.debian.org/debian/ buster main contrib non-free&#34;</span> <span class="p">|</span> tee -a /etc/apt/sources.list <span class="o">&amp;&amp;</span> <span class="se">\
</span><span class="se"></span>    <span class="nb">echo</span> <span class="s2">&#34;deb http://deb.debian.org/debian/ buster-updates main contrib non-free&#34;</span> <span class="p">|</span> tee -a /etc/apt/sources.list <span class="o">&amp;&amp;</span> <span class="se">\
</span><span class="se"></span>    <span class="nb">echo</span> <span class="s2">&#34;deb http://security.debian.org/debian-security buster/updates main contrib non-free&#34;</span> <span class="p">|</span> tee -a /etc/apt/sources.list<span class="err">
</span><span class="err">
</span><span class="err"></span><span class="c"># Then we run the &#39;original&#39; set of commands, adding in the `snmp-mibs-downloader` package.</span><span class="err">
</span><span class="err"></span><span class="c"># As part of the post-install hook, snmp-mibs-downloader will fetch the base MIBs that appear to be</span><span class="err">
</span><span class="err"></span><span class="c">#   missing.</span><span class="err">
</span><span class="err"></span><span class="c">##</span><span class="err">
</span><span class="err"></span><span class="k">RUN</span> apt-get update <span class="o">&amp;&amp;</span> <span class="se">\
</span><span class="se"></span>    apt-get install -y libsnmp-dev p7zip-full snmp-mibs-downloader <span class="o">&amp;&amp;</span> <span class="se">\
</span><span class="se"></span>    go get github.com/prometheus/snmp_exporter/generator <span class="o">&amp;&amp;</span> <span class="se">\
</span><span class="se"></span>    <span class="nb">cd</span> /go/src/github.com/prometheus/snmp_exporter/generator <span class="o">&amp;&amp;</span> <span class="se">\
</span><span class="se"></span>    go get -v . <span class="o">&amp;&amp;</span> <span class="se">\
</span><span class="se"></span>    go install<span class="err">
</span><span class="err">
</span><span class="err"></span><span class="c"># To fix _this_ error:</span><span class="err">
</span><span class="err"></span><span class="c">#   Bad operator (INTEGER): At line 73 in /usr/share/snmp/mibs/ietf/SNMPv2-PDU</span><span class="err">
</span><span class="err"></span><span class="c">#</span><span class="err">
</span><span class="err"></span><span class="c"># we install a &#39;patched&#39; version.</span><span class="err">
</span><span class="err"></span><span class="c"># src: https://serverfault.com/questions/936119/snmp-mibs-on-ubuntu-error-in-mibs</span><span class="err">
</span><span class="err"></span><span class="c">##</span><span class="err">
</span><span class="err"></span><span class="k">RUN</span> wget http://pastebin.com/raw.php?i<span class="o">=</span>p3QyuXzZ -O /usr/share/snmp/mibs/ietf/SNMPv2-PDU<span class="err">
</span><span class="err">
</span><span class="err"></span><span class="c">##</span><span class="err">
</span><span class="err"></span><span class="c"># This command is not needed for generation, but IS needed for manual checking / use of `snmptranslate` within the</span><span class="err">
</span><span class="err"></span><span class="c">#   container. Add to the above RUN statement if needed.</span><span class="err">
</span><span class="err"></span><span class="c">#       sed -i &#34;s/^\(mibs *:\).*/#\1/&#34; /etc/snmp/snmp.conf</span><span class="err">
</span><span class="err"></span><span class="c">#</span><span class="err">
</span><span class="err"></span><span class="c"># It simply comments out the `mibs:` line in `/etc/snmp/snmp.conf`</span><span class="err">
</span><span class="err"></span><span class="c">##</span><span class="err">
</span><span class="err">
</span><span class="err"></span><span class="c"># The &#39;stock&#39; generator expects the output of `make mibs` to be mounted into /opt/mibs.</span><span class="err">
</span><span class="err"></span><span class="c"># Since we are no longer relying on the `make` target, we must tell the generator binary</span><span class="err">
</span><span class="err"></span><span class="c">#   to look in all of the &#39;system default&#39; locations *as well as* /opt/mibs</span><span class="err">
</span><span class="err"></span><span class="c">##</span><span class="err">
</span><span class="err"></span><span class="k">WORKDIR</span><span class="s"> &#34;/opt&#34;</span><span class="err">
</span><span class="err"></span><span class="k">ENTRYPOINT</span> <span class="p">[</span><span class="s2">&#34;/go/bin/generator&#34;</span><span class="p">]</span><span class="err">
</span><span class="err">
</span><span class="err"></span><span class="c"># Rather than do something like this on the CLI every time the container is run</span><span class="err">
</span><span class="err"></span><span class="c">#   `-e MIBDIRS=&#34;/usr/share/snmp/mibs:/usr/share/snmp/mibs/iana:/usr/share/snmp/mibs/ietf:/opt/mibs&#34;`</span><span class="err">
</span><span class="err"></span><span class="c">#   we do it here...</span><span class="err">
</span><span class="err"></span><span class="c">##</span><span class="err">
</span><span class="err"></span><span class="k">ENV</span> MIBDIRS /usr/share/snmp/mibs:/usr/share/snmp/mibs/iana:/usr/share/snmp/mibs/ietf:/opt/mibs<span class="err">
</span><span class="err">
</span><span class="err"></span><span class="k">CMD</span> <span class="p">[</span><span class="s2">&#34;generate&#34;</span><span class="p">]</span><span class="err">
</span><span class="err">
</span></code></pre></td></tr></table>
</div>
</div><p>In short, ditch the <code>make mibs</code> step from <a href="https://github.com/prometheus/snmp_exporter/tree/master/generator#docker-users" target="_blank" rel="noopener noreffer">here</a> and move it inside the <code>docker build</code> step; fetch all the MIB files, patching those that need it. Tell the tool where to find them.</p>
<p>For my needs, I only care about the total amount of power being distributed through the PDU so, of the hundreds of different parameters that can be monitored, I&rsquo;m only interested in:</p>
<ul>
<li>Uptime</li>
<li>Input Voltage</li>
<li>Power in Watts and VoltAmps</li>
<li>Percentage of used/remaining capacity</li>
</ul>
<p>This makes for a simple generator config:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span><span class="lnt">76
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="c"># See: https://github.com/prometheus/snmp_exporter/tree/master/generator</span><span class="w">
</span><span class="w"></span><span class="c">##</span><span class="w">
</span><span class="w">
</span><span class="w"></span><span class="nt">modules</span><span class="p">:</span><span class="w">
</span><span class="w">  </span><span class="c"># APC/Schneider UPS Network Management Cards</span><span class="w">
</span><span class="w">  </span><span class="c">#</span><span class="w">
</span><span class="w">  </span><span class="c"># Note: older management cards only support SNMP v1 (AP9606 and</span><span class="w">
</span><span class="w">  </span><span class="c"># AP9607, possibly others). Older versions of the firmware may only</span><span class="w">
</span><span class="w">  </span><span class="c"># support v1 as well. If you only have newer cards you can switch to</span><span class="w">
</span><span class="w">  </span><span class="c"># version v2c or v3.</span><span class="w">
</span><span class="w">  </span><span class="c">#</span><span class="w">
</span><span class="w">  </span><span class="c"># The management cards have relatively slow processors so don&#39;t poll</span><span class="w">
</span><span class="w">  </span><span class="c"># very often and give a generous timeout to prevent spurious</span><span class="w">
</span><span class="w">  </span><span class="c"># errors. Alternatively you can eliminate the interface polling (OIDs</span><span class="w">
</span><span class="w">  </span><span class="c"># beginning with 1.3.6.1.2.1) to reduce the time taken for polling.</span><span class="w">
</span><span class="w">  </span><span class="c">#</span><span class="w">
</span><span class="w">  </span><span class="c"># MIB: https://download.schneider-electric.com/files?p_File_Name=powernet426.mib</span><span class="w">
</span><span class="w">  </span><span class="c"># Guide: http://www.apc.com/salestools/ASTE-6Z5QEY/ASTE-6Z5QEY_R0_EN.pdf</span><span class="w">
</span><span class="w">  </span><span class="c"># Download site: http://www.apc.com/us/en/tools/download/index.cfm</span><span class="w">
</span><span class="w">  </span><span class="c">##</span><span class="w">
</span><span class="w">  </span><span class="nt">apcups</span><span class="p">:</span><span class="w">
</span><span class="w">    </span><span class="c"># Not 100% sure why, but APC firmware does not appear to properly authenticate with the</span><span class="w">
</span><span class="w">    </span><span class="c">#   credentials that i&#39;ve set through the web UI. I&#39;ve disabled write/set via SNMP so </span><span class="w">
</span><span class="w">    </span><span class="c">#   sticking w/ v2 (no auth) is fine.</span><span class="w">
</span><span class="w">    </span><span class="nt">version</span><span class="p">:</span><span class="w"> </span><span class="m">2</span><span class="w">
</span><span class="w">
</span><span class="w">    </span><span class="nt">walk</span><span class="p">:</span><span class="w">
</span><span class="w">      </span><span class="c"># Don&#39;t care about network stats on this guy...</span><span class="w">
</span><span class="w">      </span><span class="c"># - interfaces</span><span class="w">
</span><span class="w">      </span><span class="c">##</span><span class="w">
</span><span class="w">      </span><span class="c"># Do care about uptime, tho</span><span class="w">
</span><span class="w">      </span>- <span class="l">sysUpTime</span><span class="w">
</span><span class="w">
</span><span class="w">      </span><span class="c">##</span><span class="w">
</span><span class="w">      </span><span class="c"># For reasons that I don&#39;t understand, specifying the OID results in errors like this:</span><span class="w">
</span><span class="w">      </span><span class="c">#   level=error caller=main.go:130 msg=&#34;Error generating config netsnmp&#34; err=&#34;cannot find oid &#39;.1.3.6.1.4.1.318.1.1.12.1.15.0&#39; to walk&#34;</span><span class="w">
</span><span class="w">      </span><span class="c"># But the path &#39;.1.3.6.1.4.1.318.1.1.12.1.15.0&#39; maps to rPDUIdentDeviceLinetoLineVoltage.0</span><span class="w">
</span><span class="w">      </span><span class="c"># So specify that by name and the error goes away :/</span><span class="w">
</span><span class="w">      </span><span class="c">##</span><span class="w">
</span><span class="w">      </span>- <span class="l">rPDUIdentDeviceLinetoLineVoltage</span><span class="w"> </span><span class="c"># .1.3.6.1.4.1.318.1.1.12.1.15.0</span><span class="w">
</span><span class="w">      </span>- <span class="l">rPDUIdentDevicePowerWatts       </span><span class="w"> </span><span class="c"># .1.3.6.1.4.1.318.1.1.12.1.16.0</span><span class="w">
</span><span class="w">      </span>- <span class="l">rPDUIdentDevicePowerVA          </span><span class="w"> </span><span class="c"># .1.3.6.1.4.1.318.1.1.12.1.18.0</span><span class="w">
</span><span class="w">      </span>- <span class="l">rPDULoadStatusTable             </span><span class="w"> </span><span class="c"># .1.3.6.1.4.1.318.1.1.12.2.3.1</span><span class="w">
</span><span class="w">
</span><span class="w">    </span><span class="c">##</span><span class="w">
</span><span class="w">    </span><span class="c"># From `rPDULoadStatusTable`, I can get `rPDULoadStatusLoad` and `rPDULoadStatusLoadState`</span><span class="w">
</span><span class="w">    </span><span class="c">#    which represent the percentage capacity as a percentage and a &#34;low, nominal, warn, critical&#34; flag.</span><span class="w">
</span><span class="w">    </span><span class="c">#</span><span class="w">
</span><span class="w">    </span><span class="c"># Don&#39;t need to resort to the `lookup` mechanism as the PDU has only one bank and can just extract the values</span><span class="w">
</span><span class="w">    </span><span class="c">#   by referring to them explicitly below. This would likely change w/ a 2U PDU</span><span class="w">
</span><span class="w">
</span><span class="w">    </span><span class="c"># Allows for adjustment to how various SNMP endpoints are parsed (as info about a device vs a moving metric)</span><span class="w">
</span><span class="w">    </span><span class="c"># See: https://github.com/prometheus/snmp_exporter/tree/master/generator#enumasinfo-and-enumasstateset</span><span class="w">
</span><span class="w">    </span><span class="c">##</span><span class="w">
</span><span class="w">    </span><span class="nt">overrides</span><span class="p">:</span><span class="w">
</span><span class="w">      </span><span class="c"># Should be a percentage of load</span><span class="w">
</span><span class="w">      </span><span class="nt">rPDULoadStatusLoad</span><span class="p">:</span><span class="w">
</span><span class="w">        </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">gauge</span><span class="w">
</span><span class="w">      </span><span class="c"># In addition to a numerical load percentage, also handy to have the characterization _of_ that load, too</span><span class="w">
</span><span class="w">      </span><span class="c"># In this case, the load can be characterized one of 4 ways:</span><span class="w">
</span><span class="w">      </span><span class="c">#   phaseLoadNormal (1),phaseLoadLow (2),phaseLoadNearOverload (3),phaseLoadOverload (4)</span><span class="w">
</span><span class="w">      </span><span class="nt">rPDULoadStatusLoadState</span><span class="p">:</span><span class="w">
</span><span class="w">        </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">EnumAsStateSet</span><span class="w">
</span><span class="w">
</span><span class="w">      </span><span class="c">##</span><span class="w">
</span><span class="w">      </span><span class="c"># There are a few &#39;constants&#39; that come from the table i don&#39;t need to track, so we drop them :)</span><span class="w">
</span><span class="w">      </span><span class="nt">rPDULoadStatusBankNumber</span><span class="p">:</span><span class="w">
</span><span class="w">        </span><span class="nt">ignore</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span><span class="w">        </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">EnumAsInfo</span><span class="w">
</span><span class="w">      </span><span class="nt">rPDULoadStatusIndex</span><span class="p">:</span><span class="w">
</span><span class="w">        </span><span class="nt">ignore</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span><span class="w">        </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">EnumAsInfo</span><span class="w">
</span><span class="w">      </span><span class="nt">rPDULoadStatusPhaseNumber</span><span class="p">:</span><span class="w">
</span><span class="w">        </span><span class="nt">ignore</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span><span class="w">        </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">EnumAsInfo</span><span class="w">
</span><span class="w">
</span></code></pre></td></tr></table>
</div>
</div><p>The resulting <code>snmp.yml</code> is quite brief:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="c"># WARNING: This file was auto-generated using snmp_exporter generator, manual changes will be lost.</span><span class="w">
</span><span class="w"></span><span class="nt">apcups</span><span class="p">:</span><span class="w">
</span><span class="w">  </span><span class="nt">walk</span><span class="p">:</span><span class="w">
</span><span class="w">  </span>- <span class="m">1.3.6.1.4.1.318.1.1.12.2.3.1</span><span class="w">
</span><span class="w">  </span><span class="nt">get</span><span class="p">:</span><span class="w">
</span><span class="w">  </span>- <span class="m">1.3.6.1.2.1.1.3.0</span><span class="w">
</span><span class="w">  </span>- <span class="m">1.3.6.1.4.1.318.1.1.12.1.15.0</span><span class="w">
</span><span class="w">  </span>- <span class="m">1.3.6.1.4.1.318.1.1.12.1.16.0</span><span class="w">
</span><span class="w">  </span>- <span class="m">1.3.6.1.4.1.318.1.1.12.1.18.0</span><span class="w">
</span><span class="w">  </span><span class="nt">metrics</span><span class="p">:</span><span class="w">
</span><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">sysUpTime</span><span class="w">
</span><span class="w">    </span><span class="nt">oid</span><span class="p">:</span><span class="w"> </span><span class="m">1.3.6.1.2.1.1.3</span><span class="w">
</span><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">gauge</span><span class="w">
</span><span class="w">    </span><span class="nt">help</span><span class="p">:</span><span class="w"> </span><span class="l">The time (in hundredths of a second) since the network management portion of the system was last re-initialized. - 1.3.6.1.2.1.1.3</span><span class="w">
</span><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">rPDUIdentDeviceLinetoLineVoltage</span><span class="w">
</span><span class="w">    </span><span class="nt">oid</span><span class="p">:</span><span class="w"> </span><span class="m">1.3.6.1.4.1.318.1.1.12.1.15</span><span class="w">
</span><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">gauge</span><span class="w">
</span><span class="w">    </span><span class="nt">help</span><span class="p">:</span><span class="w"> </span><span class="l">Getting/Setting this OID will return/set the Line to Line Voltage - 1.3.6.1.4.1.318.1.1.12.1.15</span><span class="w">
</span><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">rPDUIdentDevicePowerWatts</span><span class="w">
</span><span class="w">    </span><span class="nt">oid</span><span class="p">:</span><span class="w"> </span><span class="m">1.3.6.1.4.1.318.1.1.12.1.16</span><span class="w">
</span><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">gauge</span><span class="w">
</span><span class="w">    </span><span class="nt">help</span><span class="p">:</span><span class="w"> </span><span class="l">Getting this OID will return the Power in Watts. - 1.3.6.1.4.1.318.1.1.12.1.16</span><span class="w">
</span><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">rPDUIdentDevicePowerVA</span><span class="w">
</span><span class="w">    </span><span class="nt">oid</span><span class="p">:</span><span class="w"> </span><span class="m">1.3.6.1.4.1.318.1.1.12.1.18</span><span class="w">
</span><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">gauge</span><span class="w">
</span><span class="w">    </span><span class="nt">help</span><span class="p">:</span><span class="w"> </span><span class="l">Getting this OID will return the Power in VA. - 1.3.6.1.4.1.318.1.1.12.1.18</span><span class="w">
</span><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">rPDULoadStatusLoad</span><span class="w">
</span><span class="w">    </span><span class="nt">oid</span><span class="p">:</span><span class="w"> </span><span class="m">1.3.6.1.4.1.318.1.1.12.2.3.1.1.2</span><span class="w">
</span><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">gauge</span><span class="w">
</span><span class="w">    </span><span class="nt">help</span><span class="p">:</span><span class="w"> </span><span class="l">Getting this OID will return the phase/bank load measured in tenths of Amps. - 1.3.6.1.4.1.318.1.1.12.2.3.1.1.2</span><span class="w">
</span><span class="w">    </span><span class="nt">indexes</span><span class="p">:</span><span class="w">
</span><span class="w">    </span>- <span class="nt">labelname</span><span class="p">:</span><span class="w"> </span><span class="l">rPDULoadStatusIndex</span><span class="w">
</span><span class="w">      </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">EnumAsInfo</span><span class="w">
</span><span class="w">  </span>- <span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">rPDULoadStatusLoadState</span><span class="w">
</span><span class="w">    </span><span class="nt">oid</span><span class="p">:</span><span class="w"> </span><span class="m">1.3.6.1.4.1.318.1.1.12.2.3.1.1.3</span><span class="w">
</span><span class="w">    </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">EnumAsStateSet</span><span class="w">
</span><span class="w">    </span><span class="nt">help</span><span class="p">:</span><span class="w"> </span><span class="l">Getting this OID will return the phase/bank load state - 1.3.6.1.4.1.318.1.1.12.2.3.1.1.3</span><span class="w">
</span><span class="w">    </span><span class="nt">indexes</span><span class="p">:</span><span class="w">
</span><span class="w">    </span>- <span class="nt">labelname</span><span class="p">:</span><span class="w"> </span><span class="l">rPDULoadStatusIndex</span><span class="w">
</span><span class="w">      </span><span class="nt">type</span><span class="p">:</span><span class="w"> </span><span class="l">EnumAsInfo</span><span class="w">
</span><span class="w">    </span><span class="nt">enum_values</span><span class="p">:</span><span class="w">
</span><span class="w">      </span><span class="nt">1</span><span class="p">:</span><span class="w"> </span><span class="l">phaseLoadNormal</span><span class="w">
</span><span class="w">      </span><span class="nt">2</span><span class="p">:</span><span class="w"> </span><span class="l">phaseLoadLow</span><span class="w">
</span><span class="w">      </span><span class="nt">3</span><span class="p">:</span><span class="w"> </span><span class="l">phaseLoadNearOverload</span><span class="w">
</span><span class="w">      </span><span class="nt">4</span><span class="p">:</span><span class="w"> </span><span class="l">phaseLoadOverload</span><span class="w">
</span><span class="w">  </span><span class="nt">version</span><span class="p">:</span><span class="w"> </span><span class="m">2</span><span class="w">
</span></code></pre></td></tr></table>
</div>
</div><h2 id="the-dashboard">The Dashboard</h2>
<p>Once metrics are making their way into prometheus, it&rsquo;s only a bit of work to get a dashboard up and running.</p>
<p>For sanity checking I fired up a load; a crypto-miner. See if you can spot when&hellip; :).</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        Simple dashboard in grafana
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>The <code>json</code> file for the dashboard is about 750 lines long, so rather than embed it, I&rsquo;ve <a href="#files" rel="">attached</a> it as a file; the sha1 hash of <code>dashboard.json</code> is <code>400edb0c4064068f12e17c2f1f0d6862d3b8d449</code>.</p>
<h3 id="estimating-costs">estimating costs</h3>
<p>The dashboard just multiplies the average Wattage by the average cost of a kWh and then scales that to fit a 24h window.</p>
<p>The rate I pay for electricity changes based on the hour in which the power is used; about 40% of the week, my power costs a few cents per kWh more. The cost shown in the image above is a rough approximation based on my average power rate of around 12.5 cents per kWh. This rate can be adjusted with the <code>avgkWH_Cost</code> variable, if needed.</p>
<h2 id="files">Files</h2>
<ul>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/monitoring-ap7900-switched-pdu-prometheus-grafana/images/ap7900.png">
                    
                </a>
                
                
            </figure>

        
    </li>
    
    <li>
        
            <a target="_blank" href="https://karlquinsland.com/monitoring-ap7900-switched-pdu-prometheus-grafana/files/dashboard.json">
                <i class="far fa-file-file-code"></i>
                files/dashboard.json:
                
                
                <br>
                <small>sha1(dashboard.json): 400edb0c4064068f12e17c2f1f0d6862d3b8d449</small>
                
            </a>
        
    </li>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/monitoring-ap7900-switched-pdu-prometheus-grafana/images/grafana.png">
                    
                </a>
                
                <figcaption>
                    <small>Simple dashboard in grafana</small>
                </figcaption>
                
            </figure>

        
    </li>
    
</ul>

]]></description></item><item><title>Amcrest IP Cameras: security isn't a feature, it's a punchline</title><link>https://karlquinsland.com/amcrest-ip-cam-security-isnt-a-feature-its-a-punchine/</link><pubDate>Fri, 27 Nov 2020 00:00:00 +0000</pubDate><author>Author</author><guid>https://karlquinsland.com/amcrest-ip-cam-security-isnt-a-feature-its-a-punchine/</guid><description><![CDATA[<p>This is part rant, part &ldquo;reference&rdquo; for anybody else that&rsquo;s struggling to get their Amcrest IP Camera to work with <a href="https://www.home-assistant.io/integrations/onvif/" target="_blank" rel="noopener noreffer">Home Assistant</a> via ONVIF. Skip to <a href="#tldr" rel="">TL;DR</a> for a working Home Assistant config.</p>
<p>Briefly, <a href="https://www.onvif.org/profiles/" target="_blank" rel="noopener noreffer">ONVIF</a> is an industry group that maintains a set of standards to allow for interoperability between IP Cameras and related devices from multiple vendors. One set of protocols so your cameras from <code>$vendorA</code> will work with with the recording/analytics software from <code>$vendorB</code> which can then pipe events into software from <code>$vendorC</code>.
How ONVIF works and how it&rsquo;s implemented are beyond the scope of this rant, but, like most standards that haven&rsquo;t aged well, <a href="https://en.wikipedia.org/wiki/SOAP" target="_blank" rel="noopener noreffer">SOAP</a> is involved. ü§Æ.</p>
<p>The IP Camera in question is the <code>Amcrest IP4M-1051</code>, though it does appear that other devices from Amcrest are effected by some of the same issues I&rsquo;ll detail below.
Additionally, Amcrest appears to be a budget brand offering cheaper versions of <a href="https://en.wikipedia.org/wiki/Dahua_Technology" target="_blank" rel="noopener noreffer">DaHua</a> hardware, so the firmware Amcrest uses likely originates from DaHua.</p>
<p>The hardware is pretty good for the price. About $80 and you get a camera with a pretty wide field of view, 4K resolution, automatic IR leds/filter, PTZ servos, 10/100 Ethernet <em>and</em> 2.4/5ghz WiFi. The software, however is scarry üò±.</p>
<p>I&rsquo;ve only spent a few hours with the camera so far, but here&rsquo;s an incomplete list of the security-related issues i&rsquo;ve noticed in that time:</p>
<ul>
<li>There&rsquo;s no way to require the web interface be served over HTTPS. You can turn on HTTPS support, but you can&rsquo;t turn of HTTP support!</li>
<li>ONVIF runs over HTTP &hellip; on port 80!</li>
<li>Only the ADMIN user is supported for ONVIF</li>
<li>Passwords are limited to 32 characters in length&hellip; but the web UI won&rsquo;t inform you about this.</li>
</ul>
<h3 id="firmware">Firmware</h3>
<p>Before anybody asks, yes, I did update the firmware to the latest version immediately after unboxing.
As of writing, the latest firmware available is version <code>V2.620.00AC000.3.R.20191218</code> which can be downloaded <a href="https://sup-files.s3.us-east-2.amazonaws.com/Firmware/IP4M-1051/Amcrest_IPC-AWXX-V2-Rhea_Eng_NP_AMCREST_V2.620.00AC000.3.R.20191218.bin" target="_blank" rel="noopener noreffer">here</a>.</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        FW for all Amcrest devices can be fetched from https://amcrest.com/firmwaredownloads.
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>In the unlikely event that anybody sees this post and somehow gets Amcrest to correct their issues, the versions of software on the affected cameras are:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt">Software Version:       V2.620.00AC000.3.R, Build Date: 2019-12-18
WEB Version:            3.2.1.619604
ONVIF Version:          16.12(V2.4.1.513183)
</code></pre></td></tr></table>
</div>
</div><h2 id="web-ui">Web UI</h2>
<p>Nothing shocking about a networking equipped, consumer-grade bit of electronics with a web based management interface. The only reason I&rsquo;m noting it here is because I can&rsquo;t find a way to
force the web UI to be served over HTTPS üò¢.</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        *sigh*
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>And the <code>HTTPS</code> tab has no way to disable the web server on port 80 or at least do a simple redirect to the HTTPS URL üòû.</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        I&#39;ll leave you to determine if it&#39;s a good idea for the web interface to generate a self-signed certificate or not.
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>I suspect that the next issue might have something to do with the &lsquo;always on&rsquo; HTTP server&hellip; ü§î</p>
<h2 id="onvif-over-port-80">ONVIF over port 80</h2>
<p>The inciting &lsquo;incident&rsquo; for this post was a &lsquo;generic&rsquo; error from Home Assistant while trying to connect the camera to HA.
While going through the config flow, I&rsquo;d get a super useful <code>an unknown error occurred</code> message üôÉ.</p>
<p>After a bit of digging through verbose HA logs, I started to suspect that the default port of <code>5000</code> was not the correct port despite the port being &lsquo;open&rsquo; on the camera:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ nmap -p1-6553 cameraIPv4Here
Starting Nmap 7.91 <span class="o">(</span> https://nmap.org <span class="o">)</span> at 2020-11-27 16:14 PST
Nmap scan report <span class="k">for</span> cameraIPv4Here
Host is up <span class="o">(</span>0.010s latency<span class="o">)</span>.
Not shown: <span class="m">6547</span> closed ports
PORT     STATE    SERVICE
53/tcp   open     domain
80/tcp   open     http
123/tcp  filtered ntp
443/tcp  open     https
554/tcp  open     rtsp
5000/tcp open     upnp

Nmap <span class="k">done</span>: <span class="m">1</span> IP address <span class="o">(</span><span class="m">1</span> host up<span class="o">)</span> scanned in 2.21 seconds
</code></pre></td></tr></table>
</div>
</div><p>Sure enough, Home Assistant found a responsive ONVIF endpoint on port 80. Repeated testing showed that port 80 is the ONLY port with a responsive ONVIF endpoint ü§¶.</p>
<p>So yeah. ONVIF traffic, just like the web UI traffic, can be sniffed by anybody between the client and the camera. That&rsquo;s not OK for a device that&rsquo;s intended to be used for security.</p>
<p>So this little setting is basically useless:</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        &#39;Authentication&#39; is misleading. It should be labeled something along the lines of &#39;allow just ADMIN to use onvif or allow anybody to use onvif&#39;
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>That screenshot is from the PDF file <a href="https://drive.google.com/file/d/1X-f5xH4aSjhd4vXpIT9yPN_y9-LSgVWN/view" target="_blank" rel="noopener noreffer">here</a> which has this revision info:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">Amcrest IP4M-1051B / IP4M-1051W
4MP ProHD Indoor Wi-Fi Camera

User Manual

Version 1.0.3
Revised April 4th, 2019
</code></pre></td></tr></table>
</div>
</div><h2 id="onvif-only-supports-authentication-with-the-admin-user">ONVIF only supports authentication with the Admin user</h2>
<p>After discovering that ONVIF only &lsquo;works&rsquo; over port 80, I took a moment to get over my disappointment and then tried to set up a second user with minimal authority on the camera; read only and limited permission to move the camera around.</p>
<p>Except I was never able to get HA to successfully connect to the camera when using the secondary user. Home Assistant still failed to connect to the camera over ONVIF even after elevating the secondary user to the privilege level of an admin:</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        Admin users have all 34 permissions enabled
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>My secondary user permissions:</p>
<figure >

    
        
    

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>As Home Assistant really does not expose a ton of debugging information, I tried the secondary user credentials with the <a href="https://play.google.com/store/apps/details?id=net.biyee.onvifer&amp;hl=en_US&amp;gl=US" target="_blank" rel="noopener noreffer"><code>Onvifer</code></a> app. The debugging logs from that app confirmed that only the <code>admin</code> credential set &lsquo;worked&rsquo; with ONVIF.</p>
<p>After a bit more research, it turns out that I&rsquo;m not the first person to discover this:</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        Source: https://amcrest.com/forum/ip-cameras-f18/firmware-security-bug-regarding-onvif--t13445-s10.html
        
            
        
        </p> 
    </figcaption>
    
</figure>


<figure >

    
        
    

    

    <figcaption>
        
        <p>
        Source: https://amcrest.com/forum/ip-cameras-f18/ip3m-941b-onvif-and-user-management-t12647.html
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>Now i&rsquo;m embarrassed that it took me so long to discover an issue that&rsquo;s been documented since AT LEAST summer of 2019! üò≥</p>
<h3 id="password-length">Password length</h3>
<p>Can we <em>please</em> <a href="https://security.stackexchange.com/questions/33470/what-technical-reasons-are-there-to-have-low-maximum-password-lengths" target="_blank" rel="noopener noreffer">stop putting ceilings on password length</a>?</p>
<p>Or, at least if you&rsquo;re going to set an upper bound on password length, please make sure that:</p>
<ul>
<li>You&rsquo;re consistent about enforcing the length</li>
<li>You tell the user when their password is longer than allowed.</li>
</ul>
<p>The very first time the default credentials are used to sign into the camera, you&rsquo;re prompted to change the default password. Good! Only problem: the password generated by my password was, apparently, longer than the camera supports. The new admin password was <em><strong>silently</strong> truncated</em> as I was logged in.</p>
<p>I didn&rsquo;t realize that the password stored in the manager wouldn&rsquo;t let me in until after the camera applied it&rsquo;s FW update and rebooted. After a factory reset, I figured out what happened.</p>
<p>The <code>maxlength</code> property of the login form differs from the password set form. In any case, there&rsquo;s no warning that the input exceeds the length!</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        ...
        
            
        
        </p> 
    </figcaption>
    
</figure>


<figure >

    
        
    

    

    <figcaption>
        
        <p>
        ...
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p><em>sigh</em></p>
<h2 id="tldr">TL;DR:</h2>
<ul>
<li>
<p>It&rsquo;s almost 2021, but we still have IP Cameras shipping with 2011&rsquo;s security issues. <strong>Absolutely</strong> do not expose your IP Cameras directly to the internet or otherwise allow them to contact the internet. Keep cameras on their <em>own</em> dedicated and isolated network and consider the admin credentials for the camera to be compromised. Seriously re-consider using WiFi for your cameras.</p>
</li>
<li>
<p>If you&rsquo;re trying to use the <a href="https://www.home-assistant.io/integrations/onvif/" target="_blank" rel="noopener noreffer">Home Assistant ONVIF integration</a> to control an <code>Amcrest IP4M-1051</code>, you must use the <code>admin</code> credentials and change the port from <code>5000</code> to <code>80</code>.</p>
</li>
</ul>
<p>The first bit of documentation you see when unboxing the camera is this little guy:</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        This is *literally* the first thing you see when unpacking the camera.
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>which reads:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">IMPORTANT SECURITY NOTICE

Please make sure your device has the
latest firmware as listed on:

www.amcrest.com/firmware-subscribe

Never use the default password for
your device. Always ensure your
password contains a combination
of lowercase and uppercase
characters and numbers.
</code></pre></td></tr></table>
</div>
</div><p>A for effort, though, Amcrest! üëèüåü</p>
<p>üôÉ</p>
]]></description></item><item><title>Two Tasmota rules</title><link>https://karlquinsland.com/two-tasmota-rules/</link><pubDate>Fri, 20 Nov 2020 00:00:00 +0000</pubDate><author>Author</author><guid>https://karlquinsland.com/two-tasmota-rules/</guid><description><![CDATA[<p><a href="https://tasmota.github.io/" target="_blank" rel="noopener noreffer">Tasmota</a> is an incredibly powerful alternative/open source firmware for the ever popular Espressif family of WiFi equipped microcontrollers.
This does not need to be another post espousing it&rsquo;s many awesome qualities, so just trust me on this; Tasmota is AWESOME.</p>
<p>Tasmota supports user configurable <a href="https://tasmota.github.io/docs/Rules/" target="_blank" rel="noopener noreffer">rules</a> which are simple commands wired into various device triggers.
In short; a device running Tasmota gains some autonomy to react to events without needing to report the event to, and wait for commands from, a remote server.</p>
<p>I find the rules syntax to be a bit awkward and the list of practical examples feels like autodoc with a few practical examples sprinkled in.
I have <em>never</em> been able to craft a Tasmota rule without also consulting the list of <a href="https://tasmota.github.io/docs/Commands/" target="_blank" rel="noopener noreffer">commands</a>
and doing a few searches through the github issues looking for issues/questions similar to mine.</p>
<p>This post is a simple &ldquo;here&rsquo;s how i did it&rdquo; that I wish I had found when I needed to solve the problem.
Hopefully this will save you some trouble!</p>
<h3 id="mr-coffee">Mr. Coffee</h3>
<p>A $15 &lsquo;<a href="https://tasmota.github.io/docs/devices/Sonoff-Pow/" target="_blank" rel="noopener noreffer">smart relay</a>&rsquo; is all that&rsquo;s needed to turn a simple drip-over coffee maker into a remote-controllable coffee maker.
Immediately, you gain the ability to start brewing coffee in the morning from bed.
With a little extra integration work, start brewing coffee 10 minutes before your alarm is scheduled to go off. Simple quality of life improvement!</p>
<p>Every coffee maker has at least one safety interlock to disable the heating element if it gets too hot, but some have additional interlocks. Specifically,
my coffee maker has two more interlocks in series with the heating element; if the carafe is removed or the water tank is empty, the circuit is broken and
the heater immediately stops producing heat. From the perspective of the smart relay, the power consumption is either 0 Watts or a bit over 1100 Watts.</p>
<p>I was not comfortable using Home Assistant to monitor power consumption and then toggle the relay off after observing an interlock kick in.
If something happened to the WiFi connection or the MQTT server or Home Assistant, there&rsquo;s no way to disconnect power from the coffee maker; the relay will stay &lsquo;on&rsquo;.
If the interlock failed, somehow, the heating element would immediately begin pumping out heat when it <em>really</em> shouldn&rsquo;t be!</p>
<p>Writing a simple &ldquo;if power consumption drops below 1100 Watts, turn relay off&rdquo; rule would be enough, except there&rsquo;s no way to distinguish between the thermal interlock tripping
and the carafe being removed for a quick pour. The simple rule is incompatible with the extra interlocks; it will prematurely stop the brewing 100% of the time the carafe is removed.
If you want to pour a cup of coffee while it&rsquo;s still brewing, this is rather inconvenient.</p>
<p>Solution: give the user 30 seconds to return the carafe during brewing before turning the relay off.</p>
<p>From the perspective of the outlet, ignore any lulls in power consumption as long as they&rsquo;re shorter than 30 seconds. Otherwise, assume that an interlock <em>has</em> tripped.</p>
<p>This is implemented with two rules:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">Rule1
    # When relay1 (heater) is turned on, activate rule2
    ON Power1#state=1 DO Rule2 1 ENDON

    # and deactivate rule2 when the heater is turned off
    ON Power1#state=0 DO Rule2 0 ENDON

    # When Timer1 expires, turn the heater off
    ON Rules#Timer=1 DO Power1 off ENDON

    # When the current used by the heating element rises above 1 Amp, disable Timer1
    ON Energy#Current&gt;1 DO RuleTimer1 0 ENDON

    # ... and enable rule 2
    ON Energy#Current&gt;1 DO Rule2 1 ENDON

Rule2
    # Wait for power use to drop to 0; start counting down
    ON Energy#Current&lt;.2 DO RuleTimer1 30 ENDON

    # and disable rule2 so the timer is not constantly reset
    ON Energy#Current&lt;.2 DO Rule2 0 ENDON
</code></pre></td></tr></table>
</div>
</div><p>I chose <code>.2</code> Amps as the trigger, but the logic works the exact same way with Power / Wattage.</p>
<h2 id="electric-kettle">Electric Kettle</h2>
<p>I wanted to detect when my electric kettle was done boiling the water so I could play a sound and flash the lights in whichever room I happened to be in at the time.
This is trivial to do with a &lsquo;<a href="https://tasmota.github.io/docs/devices/Sonoff-S31/" target="_blank" rel="noopener noreffer">smart outlet</a>&rsquo; and a <a href="https://www.home-assistant.io/integrations/binary_sensor.template/" target="_blank" rel="noopener noreffer">template sensor</a> in Home Assistant:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml">- <span class="nt">platform</span><span class="p">:</span><span class="w"> </span><span class="l">template</span><span class="w">
</span><span class="w">  </span><span class="nt">sensors</span><span class="p">:</span><span class="w">
</span><span class="w">    </span><span class="nt">kettle_running</span><span class="p">:</span><span class="w">
</span><span class="w">      </span><span class="nt">friendly_name</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;Kettle Boiling&#34;</span><span class="w">
</span><span class="w">      </span><span class="c"># If the kettle is using more than 5w, assume its on / boiling water</span><span class="w">
</span><span class="w">      </span><span class="nt">icon_template</span><span class="p">:</span><span class="w"> </span><span class="p">&gt;-</span><span class="sd">
</span><span class="sd">        {% if states(&#39;sensor.kettle_energy_power&#39;) | float &gt; 5 %}
</span><span class="sd">          mdi:kettle-steam
</span><span class="sd">        {% else %}
</span><span class="sd">          mdi:kettle
</span><span class="sd">        {% endif %}</span><span class="w">        
</span><span class="w">      </span><span class="nt">value_template</span><span class="p">:</span><span class="w"> </span><span class="s2">&#34;{{states(&#39;sensor.kettle_energy_power&#39;) | float &gt; 5}}&#34;</span><span class="w">
</span></code></pre></td></tr></table>
</div>
</div><p>Only problem, Tasmota only publishes the kettle&rsquo;s power once every 300 seconds. This means <code>sensor.kettle_energy_power</code> only gets updated every 300s which makes it really hard
to fire off a <em>timely</em> notification when the kettle is done.
The &lsquo;brute-force&rsquo; solution is to configure Tasmota to transmit the telemetry <a href="https://github.com/arendst/Tasmota/issues/2567" target="_blank" rel="noopener noreffer">continuously</a>.
Except there&rsquo;s no need for the Tasmota device on the kettle to be constantly informing Home Assistant that there&rsquo;s no power being used whenever the kettle is not on; my application only cares about the &lsquo;<a href="https://en.wikipedia.org/wiki/Signal_edge" target="_blank" rel="noopener noreffer">falling edge</a>&rsquo;.</p>
<p>Borrow the trigger from the <a href="#mr-coffee" rel="">Mr. Coffee</a> rule and shorten the <a href="https://tasmota.github.io/docs/Commands/#teleperiod" target="_blank" rel="noopener noreffer">telemetry period</a> only when the kettle
is consuming more than 1 Watt. Like the coffee maker, it&rsquo;s either consuming 0 Watts or about 1.1 Kilowatt.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">Rule1
    on ENERGY#Power&gt;1 do Backlog TelePeriod 10; Rule2 1 endon

Rule2
    on ENERGY#Power=0 do Backlog TelePeriod 1; Rule2 0 endon
</code></pre></td></tr></table>
</div>
</div><p>As soon as the kettle starts using more than 1 Watt, configure Tasmota to publish its sensor data every 10 seconds.
I&rsquo;ll get notified that the water is boiling within 10s; much better than 300s!
Once the power consumption goes back down to 0, reset the telemetry update period and disable the rule.</p>
<p>The second rule must be disabled to prevent constant triggering of the rule when the kettle is not boiling.
Without the <code>Rule2 0</code>, the console/logs for the device would be full of statements like this repeating every few seconds:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">RUL: ENERGY#POWER&gt;1 performs &#34;TelePeriod 10&#34;
MQT: stat/tasmota_kettle/RESULT = {&#34;TelePeriod&#34;:10}
</code></pre></td></tr></table>
</div>
</div><p>Hope that helped!</p>
<hr>
<p><strong>EDIT:</strong> 2021-09-24: small typo fixes. Thanks for pointing them out :).</p>
]]></description></item><item><title>Enhanced Home Assistant Switch Plate (HASP)</title><link>https://karlquinsland.com/enhanced-homeassistantswitchplate/</link><pubDate>Thu, 01 Oct 2020 00:00:00 +0000</pubDate><author>Author</author><guid>https://karlquinsland.com/enhanced-homeassistantswitchplate/</guid><description><![CDATA[<p>The <a href="https://github.com/aderusha/HASwitchPlate/" target="_blank" rel="noopener noreffer">HASwitchPlate</a> project by <code>aderusha</code> is brilliant. He&rsquo;s managed to arrange some relatively cheap commodity hardware into a package that conveniently fits into a prime location for interacting with Home Automation - the light switch. The entire package sips power off of the already present mains wiring and connects to any MQTT broker via the esp8266 chip. As the HASP was designed to be used with Home Assistant, the humble 2.4 inch LCD transforms into an accessible control surface for an incredibly powerful home automation platform!</p>
<p>Within moments of discovering the project and browsing through a few examples, my mind ran wild with possibilities. After double checking the relatively low <a href="https://github.com/aderusha/HASwitchPlate#bill-of-materials" target="_blank" rel="noopener noreffer">B.O.M.</a> cost,</p>
<p>While shopping for the parts to make my own version, I got a few ideas.</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        If the LEDs weren&#39;t on, you&#39;d never know they were there üòä
        
            
        
        </p> 
    </figcaption>
    
</figure>


<h2 id="modifications">Modifications</h2>
<p>First, a brief word about indemnification:</p>
<blockquote>
<p>All instructions and information on this page is purely for informational purposes.</p>
<p>The original HASP and my modifications come with neither an expressed or implied warranty. By constructing your own, you assume all risk.</p>
</blockquote>
<h3 id="software">Software</h3>
<p>The few software modifications I&rsquo;ve made to the HASP project are relatively small and don&rsquo;t implement anything significant or new; they are &lsquo;quality of life&rsquo; improvements that target small portions of the code.</p>
<p>I strongly believe that the hardest part of using a given piece automation technology should be taking it out of the box. To wit, Home Assistant has robust - <a href="https://community.home-assistant.io/t/ability-to-set-entity-icon-through-mqtt-discovery/224538" target="_blank" rel="noopener noreffer">but not perfect</a> - support for <a href="Https://www.home-assistant.io/docs/mqtt/discovery/" target="_blank" rel="noopener noreffer">automatic device discovery and configuration via MQTT</a>. Once a device has connected to the MQTT broker, it simply publishes a document detailing how HA should interface with the device. It&rsquo;s a wonderful experience to see a new device connect to the network for the first time and just a few seconds later the new device is registered in HA, waiting for you to start integrating it into automations ü§©ü§§.</p>
<p>While there are quite a few sensors/stateful-attributes in the original HASP code, none of them automatically present themselves to Home Assistant üòî. I set about fixing that to the best of my abilities. Unfortunately, the LCD backlight is the only peripheral that could be &lsquo;upgraded&rsquo; to automatic configuration without making a ton of changes to the original code base.</p>
<p>All of the hardware modifications detailed below automatically configure themselves with Home Assistant.</p>
<p>The original HASP code base uses allocates too little memory for storing MQTT credentials. Any username or password longer than 31 bytes/characters would be <strong>silently</strong> truncated on save. Despite the &lsquo;credentials saved, rebooting&rsquo; message, the next screen was always a &lsquo;failure to connect&rsquo; message. Frustrating! The pull request to address this is <a href="https://github.com/aderusha/HASwitchPlate/pull/117" target="_blank" rel="noopener noreffer">here</a>.</p>
<h3 id="hardware">Hardware</h3>
<p>The HASP does support dimming the LCD, but it has no awareness of ambient light levels. This makes it rather difficult to deploy a HASP in any &lsquo;light sensitive&rsquo; location like a bedroom or media room without another device to cue Home Assistant and lower the LCD brightness. Workable, but too high friction to be ideal.</p>
<p>Light Dependent Resistors - <a href="https://en.wikipedia.org/wiki/Photoresistor" target="_blank" rel="noopener noreffer">LDR</a> for short - are a very cheap and compact way to get an approximate light level. Fortunately, the analogue pin is broken out on the <a href="https://github.com/aderusha/HASwitchPlate/tree/master/PCB" target="_blank" rel="noopener noreffer">PCB</a> so a simple <a href="https://en.wikipedia.org/wiki/Voltage_divider#Resistive_divider" target="_blank" rel="noopener noreffer">resistive divider</a> and a few lines of code are all that&rsquo;s needed to get a a number that linearly correlates to the level of light hitting the face plate.</p>
<p>It just so happens that there is <em>just enough</em> room to fit a LDR beneath the surface of the decor plate and out of the way of the LCD. As (not) shown in the picture above, there is no way to tell that the LDR is embedded beneath the surface.</p>
<p>The range of values from the LDR isn&rsquo;t great, but they are adequate enough to reliably detect if the HASP is in a darkened room.</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        ignore the spikes just before noon, those are due to to testing with a flash light
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>While researching potential ways to measure the ambient brightness, I stumbled across the <a href="https://shop.homeseer.com/products/z-wave-dimmer-switch" target="_blank" rel="noopener noreffer">HomeSeer HS-WD200+</a> which features a rather novel way to convey additional information to a user; seven RGB leds üòç. It&rsquo;s a brilliant use of such a simple and ubiquitous technology that I&rsquo;m not really sure why every smart switch doesn&rsquo;t do this!</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        HomeSeer&#39;s WS200 has a delightful innovation... RGB LEDs!
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>With <em>zero</em> room to spare, four LEDs can fit into a small cavity between the LCD and decor plate surface. Like with the LDR, there is no visual &lsquo;tell&rsquo; that there are LEDs beneath the surface&hellip; unless they&rsquo;re on, of course.</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        Ignore the dirt on the switch. Notice how you can&#39;t tell there&#39;s an LDR beneath the surface
        
            
        
        </p> 
    </figcaption>
    
</figure>


<h4 id="the-enclosure">The enclosure</h4>
<p>Without consuming more than 1 <a href="https://diy.stackexchange.com/questions/11654/what-does-1-gang-2-gang-and-so-forth-mean-when-talking-about-electrical-bo" target="_blank" rel="noopener noreffer">gang</a>, the only realistic way to get the wires for the new components to the HASP PCB is to go around the edge of the LCD&rsquo;s PCB. This is accomplished with two small &lsquo;channels&rsquo; that slightly protrude in the vertical directions from the lip around the LCD and into the box that encloses the electronics.</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        Section analysis from f360 showing small channels around the LCD for wires to LDR and LEDs
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>Additionally, I found that the original printed parts do not properly fit in the <a href="https://www.amazon.com/Thomas-Betts-B232A-UPC-Carlon-Bulk/dp/B000GAWYZ8/" target="_blank" rel="noopener noreffer">two gang electrical box</a> where I intended to deploy the HASP.</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        The only way to fit the HASP in my 2-gang electric boxes is to cut out a small section
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>In total, the modifications required to accommodate the LDR and LED tape are relatively small, but <a href="https://github.com/aderusha/HASwitchPlate/issues/116" target="_blank" rel="noopener noreffer">I had to re-create the model from scratch</a> so several things are likely a bit different from the original model. It should be relatively easy to port the modifications to the other multi-gang configurations that the original HASP supports.</p>
<p>The <code>.step</code> and <code>.f3z</code> files are available should you want to make the necessary modifications to other switch plate configurations.
The <code>.stl</code> and <code>.3mf</code> files are available for easy printing.</p>
<p>All files available <a href="#files" rel="">below</a> and on <a href="https://github.com/kquinsland/HASwitchPlate/tree/master/3D_Printable_Models/enhanced-HASP" target="_blank" rel="noopener noreffer">github</a>.</p>
<h2 id="assembly">Assembly</h2>
<p>The steps below are meant to be followed between the original steps <a href="https://github.com/aderusha/HASwitchPlate/blob/master/Documentation/03_Electronics_Assembly.md" target="_blank" rel="noopener noreffer"><code>03_Electronics_Assembly</code></a> and <a href="https://github.com/aderusha/HASwitchPlate/blob/master/Documentation/04_Project_Enclosure.md" target="_blank" rel="noopener noreffer"><code>04_Project_Enclosure</code></a>.</p>
<p>In short, you&rsquo;ll want to assemble and test the HASP PCB as in the original instructions, but use the steps below as a substitute for the enclosure assembly process.</p>
<h3 id="additional-materials">Additional Materials</h3>
<p>In addition to everything in the original BOM, you&rsquo;ll need:</p>
<ul>
<li>
<p>A LDR. Be aware that LDRs come in many different shapes and sizes and have different resistance values. Space is rather tight, so the form factor matters a lot more than the resistance values or band of light that the LDR responds to. If you use a different LDR, you may need to adjust the resistor value to better match your LDR. You can get 50 of the exact model GL5516 that I used for less than $2 <a href="https://s.click.aliexpress.com/e/_dUjV8Rn" target="_blank" rel="noopener noreffer">here</a>.</p>
</li>
<li>
<p>A 10KŒ© resistor to form a simple resistive divider with the LDR. This will better map the the full range of the LDR to the 0-1 volt range that the ESP8266 ADC uses. Space is rather limited so the smaller the resistor, the better; no need for anything larger than 1/4 Watt. You can get a 10-pack of 10KŒ© resistors <a href="https://rover.ebay.com/rover/1/711-53200-19255-0/1?mpre=https%3A%2F%2Fwww.ebay.com%2Fitm%2F10-Pcs-1-8-Watt-1-Metal-Film-Resistor-Choose-you-own-values-USA-SELLER%2F302971259661&amp;campid=5338745533&amp;toolid=10001&amp;customid=" target="_blank" rel="noopener noreffer">here</a></p>
</li>
<li>
<p>WS2812B LED tape <strong>featuring the 3535SMD package</strong>. The &lsquo;regular size&rsquo; LED package <em>will <strong>not</strong> fit</em> so make sure you use the smaller <code>3535SMD</code> package! Beyond that, aim for LED tape that is no wider than ~8mm and has highest density possible. After quite some searching, the best that I could find is 8mm wide tape with a density of 144 LEDs per meter. Unfortunately, they don&rsquo;t sell LEDs 4 at a time, so you can pick up 1 meter of the exact LEDs I used <a href="https://rover.ebay.com/rover/1/711-53200-19255-0/1?mpre=https%3A%2F%2Fwww.ebay.com%2Fitm%2FNarrow-DC-5V-WS2812B-Led-Strip-Individually-Addressable-WS2812-Led-pixel-Light%2F254647279915%3Fhash%3Ditem3b4a29212b%3Ag%3A9D8AAOSwIZ5fBTn7&amp;campid=5338745533&amp;toolid=10001&amp;customid=pixel_tape" target="_blank" rel="noopener noreffer">here</a>.</p>
</li>
<li>
<p>Several centimeters of very fine gauge wire. Ideally, multiple colors so you can keep organized but this is not required. Again, space is rather tight, so AWG 28 or 30 is ideal. Much bigger than that and you&rsquo;ll likely have issues fitting everything together. You can get a 1m length of multiple colors <a href="https://rover.ebay.com/rover/1/711-53200-19255-0/1?mpre=https%3A%2F%2Fwww.ebay.com%2Fitm%2FNarrow-DC-5V-WS2812B-Led-Strip-Individually-Addressable-WS2812-Led-pixel-Light%2F254647279915%3Fhash%3Ditem3b4a29212b%3Ag%3A9D8AAOSwIZ5fBTn7&amp;campid=5338745533&amp;toolid=10001" target="_blank" rel="noopener noreffer">here</a>.</p>
</li>
<li>
<p>HeatShrink Tubing (HST). The exact diameter needed will depend on how compact your soldering is and the size of resistor used. Multiple colors will help keep things organized, but that&rsquo;s not required. I suggest a kit so you can get the  perfect diameter  and length. You can get a kit <a href="https://rover.ebay.com/rover/1/711-53200-19255-0/1?mpre=https%3A%2F%2Fwww.ebay.com%2Fitm%2F360pcs-2-1-Heat-Shrink-Tube-Tubing-Sleeving-Wrap-Wire-cable-Insulated-Assorted%2F224122863249%3Fhash%3Ditem342ec37e91%3Ag%3AMbcAAOSwXGhfPCNK&amp;campid=5338745533&amp;toolid=10001" target="_blank" rel="noopener noreffer">here</a>.</p>
</li>
<li>
<p>Standard 2.54mm pin headers. You can get a set of male and female headers <a href="https://rover.ebay.com/rover/1/711-53200-19255-0/1?mpre=https%3A%2F%2Fwww.ebay.com%2Fitm%2F10pcs-Male-Header-1x40-2-54mm-40-Pin-PCB-Through-Hole-Arduino-and-Pi%2F223105297271%3Fepid%3D28022683725%26hash%3Ditem33f21cab77%3Ag%3A~X8AAOSwvFpbdZWA&amp;campid=5338745533&amp;toolid=10001" target="_blank" rel="noopener noreffer">here</a>.</p>
</li>
</ul>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        All the components needed for assembly
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p><strong>Note</strong>: Where possible, I&rsquo;ve used commission links. The links don&rsquo;t raise the price of any item, they simply let the retailer know that I&rsquo;m the reason for your business. In return, I get a small cut of your purchase as a &lsquo;thanks&rsquo; from the retailer. If you&rsquo;re not comfortable with that, you can use a URL unwinding service to get the &lsquo;raw&rsquo; product link and drop the attribution/commission part.</p>
<h3 id="brass-inserts">Brass inserts</h3>
<p>The original instructions suggest using glue to secure the brass inserts to the face plate, but I suggest using either a lighter or a very fine tip soldering iron to heat up the brass insert. A hot insert will melt the surrounding plastic which will make for a much stronger joint.  The modified version of the HASP face plate used in this guide intentionally features holes slightly too small for the brass inserts so glue won&rsquo;t be enough.</p>
<p>Fully insert the 20mm screw into the brass insert, use pliers to grasp the screw and apply heat with a lighter for a few seconds and then insert into the face plate. Make sure that the screw is <strong>completely</strong> inserted into the insert so that molten plastic can&rsquo;t flow into the insert. If molten plastic enters and cools on the threads, it will be rather difficult to later screw things together!</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        Molten plastic can&#39;t flow into a filled insert
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>As the inserts cool, you&rsquo;ll have a few seconds to make adjustments to their orientation before they become fixed. Make sure that each screw is vertical and cool to the touch before moving on to the wiring harness.</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        screws make it easy to perform final alignment on inserts and act as a heatsink
        
            
        
        </p> 
    </figcaption>
    
</figure>


<h3 id="wire-harness">Wire Harness</h3>
<p>There are only six wires for the two components and the LED tape is the only component where polarity matters. A table mapping each pin on the HASP PCB to each component lead is below.</p>
<table>
<thead>
<tr>
<th>HASP PCB Pin</th>
<th>Component</th>
</tr>
</thead>
<tbody>
<tr>
<td>GND</td>
<td>LED Tape, 10KŒ© resistor</td>
</tr>
<tr>
<td>+5V</td>
<td>LED Tape VCC in</td>
</tr>
<tr>
<td>+3.3V</td>
<td>LDR</td>
</tr>
<tr>
<td>A0</td>
<td>LDR &amp; 10KŒ© resistor junction</td>
</tr>
<tr>
<td>D0</td>
<td>N/A</td>
</tr>
<tr>
<td>D1</td>
<td>LED Tape CLK/DTA  in</td>
</tr>
<tr>
<td>D2</td>
<td>N/A</td>
</tr>
<tr>
<td>DBG</td>
<td>N/A</td>
</tr>
</tbody>
</table>
<p>You are <strong>strongly</strong> encouraged to test / check your work after each step with a simple multimeter. Complete assembly involves irreversible steps, like shrinking HST. If you make a mistake, it&rsquo;s best to catch it before &lsquo;finalizing&rsquo; things as you&rsquo;re almost certainly going to have to destroy the component and or wiring harness to repair it.</p>
<p>Additionally, you can flash my <a href="https://github.com/kquinsland/HASwitchPlate" target="_blank" rel="noopener noreffer">modified HASP firmware</a> to a fully assembled HASP device and use that as a testing device. On boot up, the modified firmware briefly flashes each LED in sequence. About every 10 seconds after boot, the LDR value will be read and published to MQTT. Cover the LDR with your hand and check your MQTT broker or HA to confirm that the value changes significantly between exposed and covered states.</p>
<h5 id="ldr">LDR</h5>
<p>Fit the LDR into the face plate and position the leads in the channel under and to the top of the LCD PCB. Then trim the excess length off of the LDR leads so that they extend &lsquo;beyond&rsquo; the LCD by about 8mm or so.</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        LDR under the LCD w/ trimmed leads...
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>Remove the LDR from the face plate and straighten the leads out. Lay the LDR, resistor, and wire out as shown below. Use this time to cut the HST down to size so everything but the leg of the LDR that joins the resistor can be covered. <strong>Note:</strong> the leads on the resistor have also been trimmed down to ~15mm to better fit.</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        rough layout of LDR harness
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>It&rsquo;s probably going to be easiest to start with the &lsquo;supply&rsquo; wire which runs directly from the HASP PCB&rsquo;s +3.3v pin to the LDR. As space is exceedingly tight, there is no room for overly large solder joints. Carefully wrap the wire around the lead and apply just enough solder to make good electrical contact. Once the supply wire has been soldered to the LDR, affix the HST so the entirety of the lead and solder joint are protected.</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        strip ~1cm off the end of the wire, wrap around the lead, then solder
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>Repeat the same procedure with the lead of the resistor that will go directly to the ground. Affix the HST after the solder joint has cooled.</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        No room for mechanically strong solder joints
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>Use the same &lsquo;wrap&rsquo; technique with the remaining leads from the LDR and the resistor. Apply just enough solder for good electrical contact between the signal wire and the two leads of the LDR and resistor.</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        same wrapping technique, just with two leads this time
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>After the solder joint cools, cover the entire LDR/Resistor assembly in HST so there is no exposed wire or component lead.</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        get everything nicely protected behind HST
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>Set the LDR component aside for now and move on to the LED tape.</p>
<h5 id="leds">LEDs</h5>
<p>If you&rsquo;ve not already trimmed the LED tape to fit in the face plate, do so now. Leave yourself as much room as needed to solder on the one side where you&rsquo;ll need to feed power and data in.</p>
<p>The LED tape has incredibly small pads so take your time on this. You have about 5 cubic millimeters <em>total</em> for the three solder joints on the LED tape. Solder just enough for electrical contact, there will be no significant mechanical stress. <strong>Note:</strong> The arrows printed on the strip point in the direction of data flow; combined with the off-center placement of the LED packages, there is only one way to properly install the LED tape in  the decor plate.</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        know which way the LED tape wires will need to point to make it into the &#39;channel&#39; prior to soldering
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>After soldering the power, signal and ground wires, flatten them and gently shape them so they align and flow into the channel on the face plate in a manner similar to the LDR. For a bit of mechanical robustness, consider braiding the wires together.</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        twist the wires together for a more compact and robust cable
        
            
        
        </p> 
    </figcaption>
    
</figure>


<h5 id="pin-header">Pin Header</h5>
<p>After soldering wires onto the two components, all that&rsquo;s left is soldering the wires to the correct pins on the pin header.</p>
<p>One at a time, carefully take the pins out of the plastic &lsquo;frame&rsquo;. This is to prevent the heat from the soldering and HST steps from melting the plastic. Consider marking the pin with the location of the &lsquo;frame&rsquo; so you don&rsquo;t take up too much room with the solder joint. You will need the &lsquo;business end&rsquo; of the pin to make good contact with the socket on the HASP board; this is quite difficult if most of the pin can&rsquo;t be slid through the &lsquo;frame&rsquo; because of an excessively large solder joint!</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        remove the pin from the plastic &#39;frame&#39; and carefully solder the wires to the pins
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>Make sure that HST is on the wire(s) <em>before</em> soldering! After the solder joint cools, slip the HST over the solder joint and apply heat until the joint is covered. Repeat this process for the remaining pins. There will be three &lsquo;unused&rsquo; pins that you can just ignore.</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        A few pins are not needed
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>When all the wires have been soldered and covered,  you&rsquo;ll have something that looks like this:</p>
<figure >

    
        
    

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>Double check electrical connections and then combine the PCB, enclosure, plate and harness. Carefully align the &lsquo;channels&rsquo; for LDR and LED wires:</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        Align and ensure no pinched wires!
        
            
        
        </p> 
    </figcaption>
    
</figure>


<h3 id="printing">Printing</h3>
<p>In the electrical boxes there&rsquo;s absolutely no room to spare, so all parts are designed to fit together with <strong>very</strong> tight clearances. Print as slow as you need to in order too achieve very good dimensional accuracy. Like with the brass inserts, the various screw holes are intentionally undersized for better thread engagement.</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        The obvious orientation is the best, no supports needed
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>The HASP does run a bit warm, but not any warmer than other smart switches with similar form-factor. PLA will likely be fine unless you in tend to deploy the HASP in a particularly hot location.</p>
<h4 id="thermals">Thermals</h4>
<p>In testing, the parts of the HASP ran ~20¬∫ above ambient. Most of that heat comes from the small AC-&gt;DC converter and the LCD. Surprisingly, the ESP8266 does not emit that much heat. Overall, nothing particularly alarming, especially when the HASP is deployed into a larger multi-gang electrical box with with plenty of air to radiate heat into. Apologies in advance for the mixed ¬∫C/¬∫F units.</p>
<p><figure >

    
        
    

    

    <figcaption>
        
        <p>
        HASP removed from electrical box, heat from the AC-DC converter radiating through the enclosure
        
            
        
        </p> 
    </figcaption>
    
</figure>


<figure >

    
        
    

    

    <figcaption>
        
        <p>
        similar to first picture, parts inside enclosure radiate heat through the enclosure, bringing it to about 20 degrees above ambient temperature
        
            
        
        </p> 
    </figcaption>
    
</figure>


<figure >

    
        
    

    

    <figcaption>
        
        <p>
        there are clear hot-spots on the enclosure that match up with the location of the ESP and the AC-DC converter
        
            
        
        </p> 
    </figcaption>
    
</figure>


<figure >

    
        
    

    

    <figcaption>
        
        <p>
        Less heat is radiated through the front of the HASP; the LCD backlight and embedded LEDs are clearly the warmest components
        
            
        
        </p> 
    </figcaption>
    
</figure>

</p>
<p>The tiny PNP transistor that toggles the LCD power is the hottest component, by far. Everything else has a relatively consistent temperature:</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        PNP Transistor is clearly warmest internal component, ESP8266 cooler than expected
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>When installed in wall, the HASP is radiating heat into the electrical box and through neighboring switches:</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        a little bit of ambient heat radiating through the gap between LCD and switch as well as through the switch
        
            
        
        </p> 
    </figcaption>
    
</figure>


<h2 id="future-work">Future work</h2>
<p>I did accomplish my two main goals:</p>
<ol>
<li>Ambient light sensor for more responsive backlight control</li>
<li>HomeSeer-like LEDs for additional information display</li>
</ol>
<p>However, there&rsquo;s a few aspects of the HASP that i&rsquo;d like to further improve:</p>
<ul>
<li>
<p>Increased automatic configuration w/ the HASP. There&rsquo;s still a non-trivial amount of work required to set up a HASP with Home Assistant. The HASP device has many different attributes that could be exposed to Home Assistant automatically. E.G.: The HASP will periodically check for a firmware update; the HASP should configure Home Assistant with a <a href="https://www.home-assistant.io/integrations/binary_sensor.mqtt/#configuration" target="_blank" rel="noopener noreffer"><code>binary_sensor</code></a> that indicates if there&rsquo;s a firmware update available.</p>
</li>
<li>
<p>Some of the automations that live in Home Assistant to manage button presses / update screen content could  probably be re-factored down to a few generic scripts and services.</p>
</li>
<li>
<p>The display uses a <a href="https://forum.digikey.com/t/resistive-touch-vs-capacitive-touch-whats-the-difference/1063" target="_blank" rel="noopener noreffer">resistive matrix</a> to detect touch events. Resistive screens, while cheap, are a bit finnicky and inferior to the more consistent and precise capacitive touch screen tech. If Nextion ever makes a capacitive version of the NX3224T024, then it would be an instant upgrade!</p>
</li>
<li>
<p>Similarly, the viewing angle on the LCD is&hellip; not great. The HASP, like most light switches, is at a convenient height for hands&hellip; not eyes. If you&rsquo;re standing relatively close to the HASP, you&rsquo;ll be looking down at the screen with quite a steep angle. Depending on the current screen brightness and colors, this may result in a washed out and illegible screen.</p>
</li>
<li>
<p>Better LED diffusion. There&rsquo;s not a lot of space for light pipes or similar, but I would like to find a better way of diffusing the LEDs. Or even to fit a masking layer between the LEDs and the plate, so the effect would be akin to a back-lit silhouette.</p>
</li>
<li>
<p>Effects for the LEDs. Right now, the LEDs only support on/off/brightness commands. Their ability to passively indicate information would be enhanced if Home Assistant could send &lsquo;effect&rsquo; commands, too. E.G.: Rather than HA having to send a constant stream of color/brightness commands to fade between blue, green, yellow, purple, simply send a <code>fade(2s) blue, green, yellow, purple</code> command.</p>
</li>
<li>
<p>There&rsquo;s plenty of spare room on the HASP PCB for the 10KŒ© resistor. This would simplify the creation of the wiring harness. I&rsquo;ve been meaning to learn KiKad, this might be a very gentle way to start learning it. ü§î</p>
</li>
<li>
<p>Enclose the LED tape 100% inside the HASP. This version works well and the small &lsquo;hole&rsquo; in the enclosure. I don&rsquo;t think there&rsquo;s any safety concern w/ the current design, but I&rsquo;d still like to have the low voltage stuff 100% blocked off from thee electrical box&hellip;</p>
</li>
</ul>
<h2 id="files">Files</h2>
<p>For archive / posterity, all source files are included here. Unless otherwise explicitly stated otherwise, all files below are licensed as <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank" rel="noopener noreffer">Creative Commons Attribution-NonCommercial-ShareAlike</a> (CC BY-NC-SA).</p>
<ul>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/enhanced-homeassistantswitchplate/images/CAD-channel-profile.jpg">
                    
                </a>
                
                <figcaption>
                    <small>Section analysis from f360 showing small channels around the LCD for wires to LDR and LEDs</small>
                </figcaption>
                
            </figure>

        
    </li>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/enhanced-homeassistantswitchplate/images/electric-box-clearance.jpg">
                    
                </a>
                
                <figcaption>
                    <small>The only way to fit the HASP in my 2-gang electric boxes is to cut out a small section</small>
                </figcaption>
                
            </figure>

        
    </li>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/enhanced-homeassistantswitchplate/images/assembly/00.prep-electronics.jpg">
                    
                </a>
                
                <figcaption>
                    <small>All the components needed for assembly</small>
                </figcaption>
                
            </figure>

        
    </li>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/enhanced-homeassistantswitchplate/images/assembly/01.prep-brass-inserts.jpg">
                    
                </a>
                
                <figcaption>
                    <small>Molten plastic can&#39;t flow into a filled insert</small>
                </figcaption>
                
            </figure>

        
    </li>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/enhanced-homeassistantswitchplate/images/assembly/02.inserts-cooling.jpg">
                    
                </a>
                
                <figcaption>
                    <small>screws make it easy to perform final alignment on inserts and act as a heatsink</small>
                </figcaption>
                
            </figure>

        
    </li>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/enhanced-homeassistantswitchplate/images/assembly/03.ldr-position.jpg">
                    
                </a>
                
                <figcaption>
                    <small>LDR under the LCD w/ trimmed leads...</small>
                </figcaption>
                
            </figure>

        
    </li>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/enhanced-homeassistantswitchplate/images/assembly/04.wire-harness.jpg">
                    
                </a>
                
                <figcaption>
                    <small>rough layout of LDR harness</small>
                </figcaption>
                
            </figure>

        
    </li>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/enhanced-homeassistantswitchplate/images/assembly/05.ldr-wire-wrap.jpg">
                    
                </a>
                
                <figcaption>
                    <small>strip ~1cm off the end of the wire, wrap around the lead, then solder</small>
                </figcaption>
                
            </figure>

        
    </li>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/enhanced-homeassistantswitchplate/images/assembly/06.ldr-ground.jpg">
                    
                </a>
                
                <figcaption>
                    <small>No room for mechanically strong solder joints</small>
                </figcaption>
                
            </figure>

        
    </li>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/enhanced-homeassistantswitchplate/images/assembly/07.ldr-signal.jpg">
                    
                </a>
                
                <figcaption>
                    <small>same wrapping technique, just with two leads this time</small>
                </figcaption>
                
            </figure>

        
    </li>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/enhanced-homeassistantswitchplate/images/assembly/08.hst.jpg">
                    
                </a>
                
                <figcaption>
                    <small>get everything nicely protected behind HST</small>
                </figcaption>
                
            </figure>

        
    </li>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/enhanced-homeassistantswitchplate/images/assembly/09.wire-alignment.jpg">
                    
                </a>
                
                <figcaption>
                    <small>know which way the LED tape wires will need to point to make it into the &#39;channel&#39; prior to soldering</small>
                </figcaption>
                
            </figure>

        
    </li>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/enhanced-homeassistantswitchplate/images/assembly/10.twisted-cable.jpg">
                    
                </a>
                
                <figcaption>
                    <small>twist the wires together for a more compact and robust cable</small>
                </figcaption>
                
            </figure>

        
    </li>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/enhanced-homeassistantswitchplate/images/assembly/11.process.jpg">
                    
                </a>
                
                <figcaption>
                    <small>remove the pin from the plastic &#39;frame&#39; and carefully solder the wires to the pins</small>
                </figcaption>
                
            </figure>

        
    </li>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/enhanced-homeassistantswitchplate/images/assembly/12.unused-pins.jpg">
                    
                </a>
                
                <figcaption>
                    <small>A few pins are not needed</small>
                </figcaption>
                
            </figure>

        
    </li>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/enhanced-homeassistantswitchplate/images/assembly/13.harness-finished.jpg">
                    
                </a>
                
                
            </figure>

        
    </li>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/enhanced-homeassistantswitchplate/images/assembly/14.finished.jpg">
                    
                </a>
                
                <figcaption>
                    <small>Align and ensure no pinched wires!</small>
                </figcaption>
                
            </figure>

        
    </li>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/enhanced-homeassistantswitchplate/images/installed.jpg">
                    
                </a>
                
                <figcaption>
                    <small>If the LEDs weren&#39;t on, you&#39;d never know they were there üòä</small>
                </figcaption>
                
            </figure>

        
    </li>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/enhanced-homeassistantswitchplate/images/ldr-graph.jpg">
                    
                </a>
                
                <figcaption>
                    <small>ignore the spikes just before noon, those are due to to testing with a flash light</small>
                </figcaption>
                
            </figure>

        
    </li>
    
    <li>
        
            <a target="_blank" href="https://karlquinsland.com/enhanced-homeassistantswitchplate/models/box.step">
                <i class="far fa-file-code"></i>
                models/box.step:
                
                <small style="font-family:'Lucida Console', monospace">step</small> <small>file</small>
                
                
            </a>
        
    </li>
    
    <li>
        
            <a target="_blank" href="https://karlquinsland.com/enhanced-homeassistantswitchplate/models/box.stl">
                <i class="far fa-file-code"></i>
                models/box.stl:
                
                <small style="font-family:'Lucida Console', monospace">stl</small> <small>file</small>
                
                
            </a>
        
    </li>
    
    <li>
        
            <a target="_blank" href="https://karlquinsland.com/enhanced-homeassistantswitchplate/models/combined.3mf">
                <i class="far fa-file-archive"></i>
                models/combined.3mf:
                
                <small style="font-family:'Lucida Console', monospace">3mf</small> <small>file</small>
                
                
            </a>
        
    </li>
    
    <li>
        
            <a target="_blank" href="https://karlquinsland.com/enhanced-homeassistantswitchplate/models/combined.step">
                <i class="far fa-file-code"></i>
                models/combined.step:
                
                <small style="font-family:'Lucida Console', monospace">step</small> <small>file</small>
                
                
            </a>
        
    </li>
    
    <li>
        
            <a target="_blank" href="https://karlquinsland.com/enhanced-homeassistantswitchplate/models/enhanced-HASP.f3z">
                <i class="far fa-file-"></i>
                models/enhanced-HASP.f3z:
                
                
            </a>
        
    </li>
    
    <li>
        
            <a target="_blank" href="https://karlquinsland.com/enhanced-homeassistantswitchplate/models/plate.step">
                <i class="far fa-file-code"></i>
                models/plate.step:
                
                <small style="font-family:'Lucida Console', monospace">step</small> <small>file</small>
                
                
            </a>
        
    </li>
    
    <li>
        
            <a target="_blank" href="https://karlquinsland.com/enhanced-homeassistantswitchplate/models/plate.stl">
                <i class="far fa-file-code"></i>
                models/plate.stl:
                
                <small style="font-family:'Lucida Console', monospace">stl</small> <small>file</small>
                
                
            </a>
        
    </li>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/enhanced-homeassistantswitchplate/images/prototype-leds.jpg">
                    
                </a>
                
                <figcaption>
                    <small>Ignore the dirt on the switch. Notice how you can&#39;t tell there&#39;s an LDR beneath the surface</small>
                </figcaption>
                
            </figure>

        
    </li>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/enhanced-homeassistantswitchplate/images/suggested-print.jpg">
                    
                </a>
                
                <figcaption>
                    <small>The obvious orientation is the best, no supports needed</small>
                </figcaption>
                
            </figure>

        
    </li>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/enhanced-homeassistantswitchplate/images/thermals/01.removed-side-rear.png">
                    
                </a>
                
                <figcaption>
                    <small>HASP removed from electrical box, heat from the AC-DC converter radiating through the enclosure</small>
                </figcaption>
                
            </figure>

        
    </li>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/enhanced-homeassistantswitchplate/images/thermals/02.removed-top-side.png">
                    
                </a>
                
                <figcaption>
                    <small>similar to first picture, parts inside enclosure radiate heat through the enclosure, bringing it to about 20 degrees above ambient temperature</small>
                </figcaption>
                
            </figure>

        
    </li>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/enhanced-homeassistantswitchplate/images/thermals/03.removed-rear-side.png">
                    
                </a>
                
                <figcaption>
                    <small>there are clear hot-spots on the enclosure that match up with the location of the ESP and the AC-DC converter</small>
                </figcaption>
                
            </figure>

        
    </li>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/enhanced-homeassistantswitchplate/images/thermals/04.front-leds-on.png">
                    
                </a>
                
                <figcaption>
                    <small>Less heat is radiated through the front of the HASP; the LCD backlight and embedded LEDs are clearly the warmest components</small>
                </figcaption>
                
            </figure>

        
    </li>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/enhanced-homeassistantswitchplate/images/thermals/05.internals.png">
                    
                </a>
                
                <figcaption>
                    <small>PNP Transistor is clearly warmest internal component, ESP8266 cooler than expected</small>
                </figcaption>
                
            </figure>

        
    </li>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/enhanced-homeassistantswitchplate/images/thermals/06.installed-markup.jpg">
                    
                </a>
                
                <figcaption>
                    <small>a little bit of ambient heat radiating through the gap between LCD and switch as well as through the switch</small>
                </figcaption>
                
            </figure>

        
    </li>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/enhanced-homeassistantswitchplate/images/HS-WD200-Modes.jpg">
                    
                </a>
                
                <figcaption>
                    <small>HomeSeer&#39;s WS200 has a delightful innovation... RGB LEDs!</small>
                </figcaption>
                
            </figure>

        
    </li>
    
</ul>

]]></description></item><item><title>Adding an airborne particulate mater sensor to WS3 Weather Station</title><link>https://karlquinsland.com/ws3-weather-station-pm25-sensor/</link><pubDate>Thu, 27 Aug 2020 00:00:00 +0000</pubDate><author>Author</author><guid>https://karlquinsland.com/ws3-weather-station-pm25-sensor/</guid><description><![CDATA[<p>A while back, I <a href="https://github.com/kquinsland/ws3-to-esphome-bridge/" target="_blank" rel="noopener noreffer">posted a small bit of code</a> that could decode the data from the ubiquitous WS3 Weather Station and make it accessible to the amazing <a href="https://www.home-assistant.io/" target="_blank" rel="noopener noreffer">HomeAssistant</a> via the wonderful <a href="https://esphome.io/" target="_blank" rel="noopener noreffer">ESPHome</a> project. Since then, my weather station has been dutifully collecting data that&rsquo;s been invaluable for augmenting automation that deals with indoor climate.</p>
<p>As the numerous wild fires in California rage on, <a href="https://www.forbes.com/sites/ericmack/2020/08/21/wildfire-smoke-blankets-the-west-as-california-records-worlds-worst-air-quality/" target="_blank" rel="noopener noreffer">the air quality has gone from bad to dangerous</a>. Knowing that outside was warmer, but less humid, was no longer enough to make a smart decision about weather or not to open the windows for some cost-effective cooling. I now need HomeAssistant to be aware of how clean the outside air was before making the decision to pipe in outdoor air.</p>
<p>This post covers two things:</p>
<ul>
<li>A small update to the existing WS3 -&gt; ESPHome -&gt; HomeAssistant bridge code to take advantage of the WS3s' support for the ubiquitous <code>PMS5003T</code> sensor.</li>
<li>A simple 3d-printable enclosure for deploying the particulate matter sensor outdoors</li>
</ul>
<p>When deployed, it looks like this:</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        Excuse the awkward camera angle; sensor is deployed in an awkward to photograph location.
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>Please ignore the awkward camera angle as the sensor is deployed in a location where there&rsquo;s not quite enough room for proper camera placement.</p>
<p>And results in graphs that look like this:</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        Smoke particles are between .4Œºm to .7Œºm in size... which explains the elevated red line relative to other particle sizes.
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>A simplified copy of this post appears on <a href="https://www.thingiverse.com/thing:4581351" target="_blank" rel="noopener noreffer">thingiverse</a> and <a href="https://www.prusaprinters.org/prints/39560-outdoor-enclosure-for-pms5003-particulate-matter-s" target="_blank" rel="noopener noreffer">prusaprinters</a>.</p>
<h2 id="the-enclosure">The enclosure</h2>
<p>As of writing, there&rsquo;s <a href="https://www.thingiverse.com/thing:4044492" target="_blank" rel="noopener noreffer">one existing enclosure</a> for the sensor on thingiverse. Unfortunately, the enclosure does not appear to have any design features for mounting to a pole nor does it have any bug-proofing design elements. I took this opportunity to design my own that could be easily mounted, features a slanted &lsquo;roof&rsquo; to prevent standing moisture ingress and could use standard size tobacco pipe filters to keep all but the tiniest of insects/particles out.</p>
<p>The sensor uses a small fan to draw ambient air past an infrared laser. As airborne particles cross the laser beam, they reflect a certain amount of light which can be correlated with the size of the particle. This data can then be turned into fairly accurate counts of how many particles of a given size are in the sampled air. The enclosure is a basic box with two circular air channels pointed downwards to prevent moisture ingress. The intake and exhaust ports are at staggered heights and pointed in opposite directions and to minimize the chance of recirculating the same air.</p>
<p>The lower port is the intake which connects to a few small holes on the front of the sensor and the exhaust port is the raised port which connects directly to the exhaust fan. If you could remove the first few mm from the front, it would look something like this:</p>
<figure >

    
        
    

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>From the side, you can see the two air channels and the few mm of room in the back for wiring. The sensor sits on a &lsquo;pedestal&rsquo; to keep it elevated away from any moisture that may collect on the bottom of the enclosure.</p>
<p>The base plate/pedestal are secured to the &lsquo;body&rsquo; with two M3 screws. I used <code>10mm</code> as that&rsquo;s what I had on hand, but screws between 6-12mm should work as well. The holes are sized for a M3, but any similar sized screw will work. Use a lighter or similar to heat the screw as you drive it into the plastic to create your own threads if using a larger/longer screw.</p>
<p>Besides the &lsquo;pedestal&rsquo; there are a few contact surfaces that hold on to the sensor with a friction fit. The &lsquo;ceiling&rsquo; is a few mm thick and shouldn&rsquo;t permit much moisture ingress but an optional slanted roof component can be printed as an extra precaution.</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        Upper and lower chambers for exhaust and intake.
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>While designing the enclosure, I used this <a href="https://grabcad.com/library/pms5003-2" target="_blank" rel="noopener noreffer"><code>PMS5003</code> model</a> from Leclercq Gregory. üôè</p>
<h3 id="printing">Printing</h3>
<p>This is a functional part with only three small surfaces that require reasonably tight precision to properly hold onto the sensor. The <code>SPEED</code> setting with a <code>.2mm</code> layer height and a reasonable 20% infill gave me part that works and feels water tight. The walls and ceiling need to keep water out so dipping below 15% infill or otherwise using settings that wont give solid layer adhesion is not advised. I printed using ABS for durability, but PLA will probably work if you can deploy into a shaded environment.</p>
<p>The shroud and the base are not optional, the triangle shaped block is intended to turn the flat roof of the shroud into a slanted roof so water can&rsquo;t collect. It is optional but shown below.</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        No raft/support when printed in this orientation.
        
            
        
        </p> 
    </figcaption>
    
</figure>


<h2 id="assemble">Assemble</h2>
<p>Briefly:</p>
<ul>
<li>collect materials</li>
<li>press-fit the PM2.5 sensor into the enclosure</li>
<li>make a wire that can interface the PM2.5 sensor to the WS3 board via RJ11</li>
<li>seal everything up</li>
<li>glue on mesh screens and angled roof</li>
<li>plug into WS3</li>
<li>flash ESPHome onto</li>
</ul>
<h3 id="bill-of-materials">Bill of Materials</h3>
<p>More or less everything that is needed for assembly is pictured below.</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        More or less everything needed to assemble.
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>Components:</p>
<ul>
<li>
<p><a href="https://www.aliexpress.com/item/32921725022.html" target="_blank" rel="noopener noreffer">WS3 Weather Station</a> - Essential / Foundational</p>
</li>
<li>
<p><a href="https://rover.ebay.com/rover/1/711-53200-19255-0/1?mpre=https%3A%2F%2Fwww.ebay.com%2Fitm%2FDigital-Universal-Particle-Concentration-Laser-Sensor-PMS5003-PM1-0-PM2-5-PM10%2F254616699639&amp;campid=5338734064&amp;toolid=10001&amp;customid=" target="_blank" rel="noopener noreffer">ST5003T PM2.5 Sensor</a> - Essential / Foundational</p>
</li>
<li>
<p><a href="https://rover.ebay.com/rover/1/711-53200-19255-0/1?mpre=https%3A%2F%2Fwww.ebay.com%2Fitm%2FTTGO-Wemos-MINI-D1-ESP32-WiFi-Bluetooth-Wemos-D1-Mini-ESP8266-ESP-32-Module%2F183413480551&amp;campid=5338734064&amp;toolid=10001&amp;customid=" target="_blank" rel="noopener noreffer">ESP32 Device</a> - A link to the ESP32 based device that I use but any ESP platform with a spare GPIO that can be used as a UART will work.</p>
</li>
<li>
<p><a href="https://rover.ebay.com/rover/1/711-53200-19255-0/1?mpre=https%3A%2F%2Fwww.ebay.com%2Fitm%2F25-Stainless-Steel-Smoking-Pipe-Screens-3-4-19mm-Tobacco-HOOKAH-FILTER-Heavy%2F183969079809&amp;campid=5338734064&amp;toolid=10001&amp;customid=" target="_blank" rel="noopener noreffer">3/4 inch tobacco pipe screens</a> - For bug/critter proofing the enclosure. Strongly suggested for outdoor deployments.</p>
</li>
<li>
<p><a href="https://www.mcmaster.com/91292A113/" target="_blank" rel="noopener noreffer">2x M3 x 10mm screws</a> - Optional. The base can be glued to the shroud or any similar screw will work</p>
</li>
</ul>
<p><strong>Note</strong>: Where possible, I&rsquo;ve used referral links. The links don&rsquo;t raise the price of any item, they simply let the retailer know that I sent you and, in return, I get a small cut of your purchase. If you&rsquo;re not comfortable with that, you can use a URL unwinding service to get the &lsquo;raw&rsquo; product link and drop the attribution/commission part.</p>
<p>General bits:</p>
<ul>
<li>Superglue</li>
<li>Waterproofing caulk/sealant</li>
<li>Drill/Screwdriver</li>
<li>Driver bit for the screws</li>
</ul>
<p>The stepped drill bit in the above picture is not a requirement if you assemble things in the correct oder. The cable egress hole is sized for a &lsquo;typical&rsquo; 3 pair <a href="https://en.wikipedia.org/wiki/Registered_jack#RJ11,_RJ14,_RJ25_wiring" target="_blank" rel="noopener noreffer">RJ11 cable</a> plus a tiny bit of wiggle room. I needed a working cable to test the code while the parts were printing so the hole in the printed base needed to be enlarged slightly to fit the head of the cable.</p>
<h3 id="wiring">Wiring</h3>
<p>There&rsquo;s no ready-made cable out there that&rsquo;ll join the two devices so one must be made. Fortunately, there&rsquo;s only 6 wires to deal with&hellip; 4 of them are distinct.</p>
<p>Sacrifice the cable that comes with the PM2.5 sensor and the RJ11 cable by cutting them in half and solder the correct wires together. The <em>color</em> of the wires that come in both the RJ11 cable and the PM2.5 cable are likely going to differ from the ones I used so I&rsquo;ve left those details out and provided a table showing which pins are to be joined together:</p>
<table>
<thead>
<tr>
<th>Pin #</th>
<th>PM2.5 Sensor Pin</th>
<th>WS3 Pin</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>VCC</td>
<td>5V</td>
</tr>
<tr>
<td>2</td>
<td>GND</td>
<td>GND</td>
</tr>
<tr>
<td>3</td>
<td>SET</td>
<td>ENABLE</td>
</tr>
<tr>
<td>4</td>
<td>RX</td>
<td>RX</td>
</tr>
<tr>
<td>5</td>
<td>TX</td>
<td>GND</td>
</tr>
<tr>
<td>6</td>
<td>RESET</td>
<td>5V</td>
</tr>
<tr>
<td>7</td>
<td>NC</td>
<td></td>
</tr>
<tr>
<td>8</td>
<td>NC</td>
<td></td>
</tr>
</tbody>
</table>
<p>For reference, Pin 1 on both the WS3 and PM2.5 Sensor:</p>
<figure >

    
        
    

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<figure >

    
        
    

    

    <figcaption>
        
        
    </figcaption>
    
</figure>


<p>With the wiring done, the sensor just needs to be stuffed into the enclosure. Don&rsquo;t forget to thread the RJ11 cable through the hole in the base plate <em>BEFORE</em> soldering it to the cable for the PM2.5 sensor&hellip; otherwise you&rsquo;ll need that stepped drill bit! üôÉ</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        Sensor has been press-fit into the enclosure and wire fed through the base plate.
        
            
        
        </p> 
    </figcaption>
    
</figure>


<p>To finish, secure the base with screws and a bit of water-proofing caulk for good measure:</p>
<figure >

    
        
    

    

    <figcaption>
        
        <p>
        I suggest waiting until the end to glue on the optional roof and waiting until just before that to glue on the optional mesh screens.
        
            
        
        </p> 
    </figcaption>
    
</figure>


<h2 id="the-code">The code</h2>
<p>Setting up and using ESPHome is outside the scope of this post but there are several <a href="https://esphome.io/guides/getting_started_hassio.html" target="_blank" rel="noopener noreffer">good guides</a> out there. Once you have that set up, <a href="https://esphome.io/custom/custom_component.html" target="_blank" rel="noopener noreffer">include</a> the <code>ws3.h</code> file and set up your custom sensor as shown below. A working example and more detail is over on the
<a href="https://github.com/kquinsland/ws3-to-esphome-bridge/" target="_blank" rel="noopener noreffer">github repo</a>.</p>
<p>It&rsquo;ll look like this:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="nt">uart</span><span class="p">:</span><span class="w">
</span><span class="w">  </span><span class="nt">id</span><span class="p">:</span><span class="w"> </span><span class="l">uart_bus</span><span class="w">
</span><span class="w">  </span><span class="c"># At this time, ESP does not Transmit anything to the WS3</span><span class="w">
</span><span class="w">  </span><span class="nt">tx_pin</span><span class="p">:</span><span class="w"> </span><span class="l">GPIO16</span><span class="w">
</span><span class="w">  </span><span class="nt">rx_pin</span><span class="p">:</span><span class="w"> </span><span class="l">GPIO17</span><span class="w">
</span><span class="w">  </span><span class="nt">baud_rate</span><span class="p">:</span><span class="w"> </span><span class="m">2400</span><span class="w">
</span><span class="w">
</span><span class="w"></span><span class="nt">sensor</span><span class="p">:</span><span class="w">
</span><span class="w">  </span>- <span class="nt">platform</span><span class="p">:</span><span class="w"> </span><span class="l">custom</span><span class="w">
</span><span class="w">    </span><span class="nt">lambda</span><span class="p">:</span><span class="w"> </span><span class="p">|-</span><span class="sd">
</span><span class="sd">      auto ws3 = new WS3(id(uart_bus));
</span><span class="sd">      App.register_component(ws3);
</span><span class="sd">      return {
</span><span class="sd">        ws3-&gt;temperature_sensor, 
</span><span class="sd">        ws3-&gt;pressure_sensor, 
</span><span class="sd">        ws3-&gt;humidity_sensor, 
</span><span class="sd">        ws3-&gt;wind_speed_current_sensor,
</span><span class="sd">        ws3-&gt;wind_speed_peak_5m_sensor,
</span><span class="sd">        ws3-&gt;wind_direction_sensor,
</span><span class="sd">        ws3-&gt;rain_fall_1h_sensor, 
</span><span class="sd">        ws3-&gt;rain_fall_24h_sensor,
</span><span class="sd">
</span><span class="sd">        ws3-&gt;particles_03um,
</span><span class="sd">        ws3-&gt;particles_05um,
</span><span class="sd">        ws3-&gt;particles_10um,
</span><span class="sd">        ws3-&gt;particles_25um,
</span><span class="sd">        ws3-&gt;particles_50um,
</span><span class="sd">        ws3-&gt;particles_100um,
</span><span class="sd">      };</span><span class="w">      
</span></code></pre></td></tr></table>
</div>
</div><p>With that, check the logs from your instance of ESPHome and you should see something like this:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">[D][ws3:157]: pkt_read_ok!
[D][WS3:410]: VALID! Packet: [c000s000g000t093r000p000h35b09880,050,080,088,502,056,065,*18
], Checksum: [18] chksum: [18]
[E][WS3:342]: Validating: [c000s000g000t093r000p000h35b09880,050,080,088,502,056,065]
</code></pre></td></tr></table>
</div>
</div><p>indicating that the WS3 has detected the PM2.5 sensor and is reporting it&rsquo;s readings in addition to the temperature/wind data. Then just check your HomeAssistant install for the data.</p>
<h2 id="files">Files</h2>
<p>For archive / posterity, all source files are included here. All files are licensed as <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank" rel="noopener noreffer">Creative Commons Attribution-NonCommercial-ShareAlike</a> (CC BY-NC-SA).</p>
<ul>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/ws3-weather-station-pm25-sensor/images/02.assemble.jpg">
                    
                </a>
                
                <figcaption>
                    <small>Sensor has been press-fit into the enclosure and wire fed through the base plate.</small>
                </figcaption>
                
            </figure>

        
    </li>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/ws3-weather-station-pm25-sensor/images/03.glue.jpg">
                    
                </a>
                
                <figcaption>
                    <small>I suggest waiting until the end to glue on the optional roof and waiting until just before that to glue on the optional mesh screens.</small>
                </figcaption>
                
            </figure>

        
    </li>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/ws3-weather-station-pm25-sensor/images/example_dashboard.jpg">
                    
                </a>
                
                <figcaption>
                    <small>Smoke particles are between .4Œºm to .7Œºm in size... which explains the elevated red line relative to other particle sizes.</small>
                </figcaption>
                
            </figure>

        
    </li>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/ws3-weather-station-pm25-sensor/images/04.installed.jpg">
                    
                </a>
                
                <figcaption>
                    <small>Excuse the awkward camera angle; sensor is deployed in an awkward to photograph location.</small>
                </figcaption>
                
            </figure>

        
    </li>
    
    <li>
        
            <a target="_blank" href="https://karlquinsland.com/ws3-weather-station-pm25-sensor/models/BASE.step">
                <i class="far fa-file-code"></i>
                models/BASE.step:
                
                <small style="font-family:'Lucida Console', monospace">step</small> <small>file</small>
                
                
            </a>
        
    </li>
    
    <li>
        
            <a target="_blank" href="https://karlquinsland.com/ws3-weather-station-pm25-sensor/models/BODY.step">
                <i class="far fa-file-code"></i>
                models/BODY.step:
                
                <small style="font-family:'Lucida Console', monospace">step</small> <small>file</small>
                
                
            </a>
        
    </li>
    
    <li>
        
            <a target="_blank" href="https://karlquinsland.com/ws3-weather-station-pm25-sensor/models/LID.step">
                <i class="far fa-file-code"></i>
                models/LID.step:
                
                <small style="font-family:'Lucida Console', monospace">step</small> <small>file</small>
                
                
            </a>
        
    </li>
    
    <li>
        
            <a target="_blank" href="https://karlquinsland.com/ws3-weather-station-pm25-sensor/models/base.stl">
                <i class="far fa-file-code"></i>
                models/base.stl:
                
                <small style="font-family:'Lucida Console', monospace">stl</small> <small>file</small>
                
                
            </a>
        
    </li>
    
    <li>
        
            <a target="_blank" href="https://karlquinsland.com/ws3-weather-station-pm25-sensor/models/body.stl">
                <i class="far fa-file-code"></i>
                models/body.stl:
                
                <small style="font-family:'Lucida Console', monospace">stl</small> <small>file</small>
                
                
            </a>
        
    </li>
    
    <li>
        
            <a target="_blank" href="https://karlquinsland.com/ws3-weather-station-pm25-sensor/models/combined.3mf">
                <i class="far fa-file-archive"></i>
                models/combined.3mf:
                
                <small style="font-family:'Lucida Console', monospace">3mf</small> <small>file</small>
                
                
            </a>
        
    </li>
    
    <li>
        
            <a target="_blank" href="https://karlquinsland.com/ws3-weather-station-pm25-sensor/models/lid.stl">
                <i class="far fa-file-code"></i>
                models/lid.stl:
                
                <small style="font-family:'Lucida Console', monospace">stl</small> <small>file</small>
                
                
            </a>
        
    </li>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/ws3-weather-station-pm25-sensor/images/pin_out/PM2.5_Pins.jpg">
                    
                </a>
                
                
            </figure>

        
    </li>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/ws3-weather-station-pm25-sensor/images/pin_out/WS3_Pins.jpg">
                    
                </a>
                
                
            </figure>

        
    </li>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/ws3-weather-station-pm25-sensor/images/01.collect.jpg">
                    
                </a>
                
                <figcaption>
                    <small>More or less everything needed to assemble.</small>
                </figcaption>
                
            </figure>

        
    </li>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/ws3-weather-station-pm25-sensor/images/suggested_print_orientation.jpg">
                    
                </a>
                
                <figcaption>
                    <small>No raft/support when printed in this orientation.</small>
                </figcaption>
                
            </figure>

        
    </li>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/ws3-weather-station-pm25-sensor/images/f360_air_channels.jpg">
                    
                </a>
                
                
            </figure>

        
    </li>
    
    <li>
        

            
            
        
            <figure>
                <a target="_blank" href="https://karlquinsland.com/ws3-weather-station-pm25-sensor/images/f360_side_profile.jpg">
                    
                </a>
                
                <figcaption>
                    <small>Upper and lower chambers for exhaust and intake.</small>
                </figcaption>
                
            </figure>

        
    </li>
    
</ul>

]]></description></item></channel></rss>